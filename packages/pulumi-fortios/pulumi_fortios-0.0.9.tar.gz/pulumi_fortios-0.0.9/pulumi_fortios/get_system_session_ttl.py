# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs

__all__ = [
    'GetSystemSessionTtlResult',
    'AwaitableGetSystemSessionTtlResult',
    'get_system_session_ttl',
    'get_system_session_ttl_output',
]

@pulumi.output_type
class GetSystemSessionTtlResult:
    """
    A collection of values returned by GetSystemSessionTtl.
    """
    def __init__(__self__, default=None, id=None, ports=None, vdomparam=None):
        if default and not isinstance(default, str):
            raise TypeError("Expected argument 'default' to be a str")
        pulumi.set(__self__, "default", default)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if ports and not isinstance(ports, list):
            raise TypeError("Expected argument 'ports' to be a list")
        pulumi.set(__self__, "ports", ports)
        if vdomparam and not isinstance(vdomparam, str):
            raise TypeError("Expected argument 'vdomparam' to be a str")
        pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter
    def default(self) -> str:
        return pulumi.get(self, "default")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def ports(self) -> Sequence['outputs.GetSystemSessionTtlPortResult']:
        return pulumi.get(self, "ports")

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[str]:
        return pulumi.get(self, "vdomparam")


class AwaitableGetSystemSessionTtlResult(GetSystemSessionTtlResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSystemSessionTtlResult(
            default=self.default,
            id=self.id,
            ports=self.ports,
            vdomparam=self.vdomparam)


def get_system_session_ttl(vdomparam: Optional[str] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSystemSessionTtlResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['vdomparam'] = vdomparam
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('fortios:index/getSystemSessionTtl:GetSystemSessionTtl', __args__, opts=opts, typ=GetSystemSessionTtlResult).value

    return AwaitableGetSystemSessionTtlResult(
        default=pulumi.get(__ret__, 'default'),
        id=pulumi.get(__ret__, 'id'),
        ports=pulumi.get(__ret__, 'ports'),
        vdomparam=pulumi.get(__ret__, 'vdomparam'))


@_utilities.lift_output_func(get_system_session_ttl)
def get_system_session_ttl_output(vdomparam: Optional[pulumi.Input[Optional[str]]] = None,
                                  opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetSystemSessionTtlResult]:
    """
    Use this data source to access information about an existing resource.
    """
    ...
