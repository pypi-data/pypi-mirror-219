# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetSystemDscpBasedPriorityResult',
    'AwaitableGetSystemDscpBasedPriorityResult',
    'get_system_dscp_based_priority',
    'get_system_dscp_based_priority_output',
]

@pulumi.output_type
class GetSystemDscpBasedPriorityResult:
    """
    A collection of values returned by GetSystemDscpBasedPriority.
    """
    def __init__(__self__, ds=None, fosid=None, id=None, priority=None, vdomparam=None):
        if ds and not isinstance(ds, int):
            raise TypeError("Expected argument 'ds' to be a int")
        pulumi.set(__self__, "ds", ds)
        if fosid and not isinstance(fosid, int):
            raise TypeError("Expected argument 'fosid' to be a int")
        pulumi.set(__self__, "fosid", fosid)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if priority and not isinstance(priority, str):
            raise TypeError("Expected argument 'priority' to be a str")
        pulumi.set(__self__, "priority", priority)
        if vdomparam and not isinstance(vdomparam, str):
            raise TypeError("Expected argument 'vdomparam' to be a str")
        pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter
    def ds(self) -> int:
        return pulumi.get(self, "ds")

    @property
    @pulumi.getter
    def fosid(self) -> int:
        return pulumi.get(self, "fosid")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def priority(self) -> str:
        return pulumi.get(self, "priority")

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[str]:
        return pulumi.get(self, "vdomparam")


class AwaitableGetSystemDscpBasedPriorityResult(GetSystemDscpBasedPriorityResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSystemDscpBasedPriorityResult(
            ds=self.ds,
            fosid=self.fosid,
            id=self.id,
            priority=self.priority,
            vdomparam=self.vdomparam)


def get_system_dscp_based_priority(fosid: Optional[int] = None,
                                   vdomparam: Optional[str] = None,
                                   opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSystemDscpBasedPriorityResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['fosid'] = fosid
    __args__['vdomparam'] = vdomparam
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('fortios:index/getSystemDscpBasedPriority:GetSystemDscpBasedPriority', __args__, opts=opts, typ=GetSystemDscpBasedPriorityResult).value

    return AwaitableGetSystemDscpBasedPriorityResult(
        ds=pulumi.get(__ret__, 'ds'),
        fosid=pulumi.get(__ret__, 'fosid'),
        id=pulumi.get(__ret__, 'id'),
        priority=pulumi.get(__ret__, 'priority'),
        vdomparam=pulumi.get(__ret__, 'vdomparam'))


@_utilities.lift_output_func(get_system_dscp_based_priority)
def get_system_dscp_based_priority_output(fosid: Optional[pulumi.Input[int]] = None,
                                          vdomparam: Optional[pulumi.Input[Optional[str]]] = None,
                                          opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetSystemDscpBasedPriorityResult]:
    """
    Use this data source to access information about an existing resource.
    """
    ...
