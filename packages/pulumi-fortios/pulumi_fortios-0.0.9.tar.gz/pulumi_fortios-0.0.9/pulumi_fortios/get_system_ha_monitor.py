# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetSystemHaMonitorResult',
    'AwaitableGetSystemHaMonitorResult',
    'get_system_ha_monitor',
    'get_system_ha_monitor_output',
]

@pulumi.output_type
class GetSystemHaMonitorResult:
    """
    A collection of values returned by GetSystemHaMonitor.
    """
    def __init__(__self__, id=None, monitor_vlan=None, vdomparam=None, vlan_hb_interval=None, vlan_hb_lost_threshold=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if monitor_vlan and not isinstance(monitor_vlan, str):
            raise TypeError("Expected argument 'monitor_vlan' to be a str")
        pulumi.set(__self__, "monitor_vlan", monitor_vlan)
        if vdomparam and not isinstance(vdomparam, str):
            raise TypeError("Expected argument 'vdomparam' to be a str")
        pulumi.set(__self__, "vdomparam", vdomparam)
        if vlan_hb_interval and not isinstance(vlan_hb_interval, int):
            raise TypeError("Expected argument 'vlan_hb_interval' to be a int")
        pulumi.set(__self__, "vlan_hb_interval", vlan_hb_interval)
        if vlan_hb_lost_threshold and not isinstance(vlan_hb_lost_threshold, int):
            raise TypeError("Expected argument 'vlan_hb_lost_threshold' to be a int")
        pulumi.set(__self__, "vlan_hb_lost_threshold", vlan_hb_lost_threshold)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="monitorVlan")
    def monitor_vlan(self) -> str:
        return pulumi.get(self, "monitor_vlan")

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[str]:
        return pulumi.get(self, "vdomparam")

    @property
    @pulumi.getter(name="vlanHbInterval")
    def vlan_hb_interval(self) -> int:
        return pulumi.get(self, "vlan_hb_interval")

    @property
    @pulumi.getter(name="vlanHbLostThreshold")
    def vlan_hb_lost_threshold(self) -> int:
        return pulumi.get(self, "vlan_hb_lost_threshold")


class AwaitableGetSystemHaMonitorResult(GetSystemHaMonitorResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSystemHaMonitorResult(
            id=self.id,
            monitor_vlan=self.monitor_vlan,
            vdomparam=self.vdomparam,
            vlan_hb_interval=self.vlan_hb_interval,
            vlan_hb_lost_threshold=self.vlan_hb_lost_threshold)


def get_system_ha_monitor(vdomparam: Optional[str] = None,
                          opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSystemHaMonitorResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['vdomparam'] = vdomparam
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('fortios:index/getSystemHaMonitor:GetSystemHaMonitor', __args__, opts=opts, typ=GetSystemHaMonitorResult).value

    return AwaitableGetSystemHaMonitorResult(
        id=pulumi.get(__ret__, 'id'),
        monitor_vlan=pulumi.get(__ret__, 'monitor_vlan'),
        vdomparam=pulumi.get(__ret__, 'vdomparam'),
        vlan_hb_interval=pulumi.get(__ret__, 'vlan_hb_interval'),
        vlan_hb_lost_threshold=pulumi.get(__ret__, 'vlan_hb_lost_threshold'))


@_utilities.lift_output_func(get_system_ha_monitor)
def get_system_ha_monitor_output(vdomparam: Optional[pulumi.Input[Optional[str]]] = None,
                                 opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetSystemHaMonitorResult]:
    """
    Use this data source to access information about an existing resource.
    """
    ...
