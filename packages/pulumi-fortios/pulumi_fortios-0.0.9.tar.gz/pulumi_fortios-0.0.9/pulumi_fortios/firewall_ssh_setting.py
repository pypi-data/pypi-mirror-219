# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = ['FirewallSshSettingArgs', 'FirewallSshSetting']

@pulumi.input_type
class FirewallSshSettingArgs:
    def __init__(__self__, *,
                 caname: Optional[pulumi.Input[str]] = None,
                 host_trusted_checking: Optional[pulumi.Input[str]] = None,
                 hostkey_dsa1024: Optional[pulumi.Input[str]] = None,
                 hostkey_ecdsa256: Optional[pulumi.Input[str]] = None,
                 hostkey_ecdsa384: Optional[pulumi.Input[str]] = None,
                 hostkey_ecdsa521: Optional[pulumi.Input[str]] = None,
                 hostkey_ed25519: Optional[pulumi.Input[str]] = None,
                 hostkey_rsa2048: Optional[pulumi.Input[str]] = None,
                 untrusted_caname: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a FirewallSshSetting resource.
        """
        if caname is not None:
            pulumi.set(__self__, "caname", caname)
        if host_trusted_checking is not None:
            pulumi.set(__self__, "host_trusted_checking", host_trusted_checking)
        if hostkey_dsa1024 is not None:
            pulumi.set(__self__, "hostkey_dsa1024", hostkey_dsa1024)
        if hostkey_ecdsa256 is not None:
            pulumi.set(__self__, "hostkey_ecdsa256", hostkey_ecdsa256)
        if hostkey_ecdsa384 is not None:
            pulumi.set(__self__, "hostkey_ecdsa384", hostkey_ecdsa384)
        if hostkey_ecdsa521 is not None:
            pulumi.set(__self__, "hostkey_ecdsa521", hostkey_ecdsa521)
        if hostkey_ed25519 is not None:
            pulumi.set(__self__, "hostkey_ed25519", hostkey_ed25519)
        if hostkey_rsa2048 is not None:
            pulumi.set(__self__, "hostkey_rsa2048", hostkey_rsa2048)
        if untrusted_caname is not None:
            pulumi.set(__self__, "untrusted_caname", untrusted_caname)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter
    def caname(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "caname")

    @caname.setter
    def caname(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "caname", value)

    @property
    @pulumi.getter(name="hostTrustedChecking")
    def host_trusted_checking(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "host_trusted_checking")

    @host_trusted_checking.setter
    def host_trusted_checking(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "host_trusted_checking", value)

    @property
    @pulumi.getter(name="hostkeyDsa1024")
    def hostkey_dsa1024(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "hostkey_dsa1024")

    @hostkey_dsa1024.setter
    def hostkey_dsa1024(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "hostkey_dsa1024", value)

    @property
    @pulumi.getter(name="hostkeyEcdsa256")
    def hostkey_ecdsa256(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "hostkey_ecdsa256")

    @hostkey_ecdsa256.setter
    def hostkey_ecdsa256(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "hostkey_ecdsa256", value)

    @property
    @pulumi.getter(name="hostkeyEcdsa384")
    def hostkey_ecdsa384(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "hostkey_ecdsa384")

    @hostkey_ecdsa384.setter
    def hostkey_ecdsa384(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "hostkey_ecdsa384", value)

    @property
    @pulumi.getter(name="hostkeyEcdsa521")
    def hostkey_ecdsa521(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "hostkey_ecdsa521")

    @hostkey_ecdsa521.setter
    def hostkey_ecdsa521(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "hostkey_ecdsa521", value)

    @property
    @pulumi.getter(name="hostkeyEd25519")
    def hostkey_ed25519(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "hostkey_ed25519")

    @hostkey_ed25519.setter
    def hostkey_ed25519(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "hostkey_ed25519", value)

    @property
    @pulumi.getter(name="hostkeyRsa2048")
    def hostkey_rsa2048(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "hostkey_rsa2048")

    @hostkey_rsa2048.setter
    def hostkey_rsa2048(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "hostkey_rsa2048", value)

    @property
    @pulumi.getter(name="untrustedCaname")
    def untrusted_caname(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "untrusted_caname")

    @untrusted_caname.setter
    def untrusted_caname(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "untrusted_caname", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


@pulumi.input_type
class _FirewallSshSettingState:
    def __init__(__self__, *,
                 caname: Optional[pulumi.Input[str]] = None,
                 host_trusted_checking: Optional[pulumi.Input[str]] = None,
                 hostkey_dsa1024: Optional[pulumi.Input[str]] = None,
                 hostkey_ecdsa256: Optional[pulumi.Input[str]] = None,
                 hostkey_ecdsa384: Optional[pulumi.Input[str]] = None,
                 hostkey_ecdsa521: Optional[pulumi.Input[str]] = None,
                 hostkey_ed25519: Optional[pulumi.Input[str]] = None,
                 hostkey_rsa2048: Optional[pulumi.Input[str]] = None,
                 untrusted_caname: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering FirewallSshSetting resources.
        """
        if caname is not None:
            pulumi.set(__self__, "caname", caname)
        if host_trusted_checking is not None:
            pulumi.set(__self__, "host_trusted_checking", host_trusted_checking)
        if hostkey_dsa1024 is not None:
            pulumi.set(__self__, "hostkey_dsa1024", hostkey_dsa1024)
        if hostkey_ecdsa256 is not None:
            pulumi.set(__self__, "hostkey_ecdsa256", hostkey_ecdsa256)
        if hostkey_ecdsa384 is not None:
            pulumi.set(__self__, "hostkey_ecdsa384", hostkey_ecdsa384)
        if hostkey_ecdsa521 is not None:
            pulumi.set(__self__, "hostkey_ecdsa521", hostkey_ecdsa521)
        if hostkey_ed25519 is not None:
            pulumi.set(__self__, "hostkey_ed25519", hostkey_ed25519)
        if hostkey_rsa2048 is not None:
            pulumi.set(__self__, "hostkey_rsa2048", hostkey_rsa2048)
        if untrusted_caname is not None:
            pulumi.set(__self__, "untrusted_caname", untrusted_caname)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter
    def caname(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "caname")

    @caname.setter
    def caname(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "caname", value)

    @property
    @pulumi.getter(name="hostTrustedChecking")
    def host_trusted_checking(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "host_trusted_checking")

    @host_trusted_checking.setter
    def host_trusted_checking(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "host_trusted_checking", value)

    @property
    @pulumi.getter(name="hostkeyDsa1024")
    def hostkey_dsa1024(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "hostkey_dsa1024")

    @hostkey_dsa1024.setter
    def hostkey_dsa1024(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "hostkey_dsa1024", value)

    @property
    @pulumi.getter(name="hostkeyEcdsa256")
    def hostkey_ecdsa256(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "hostkey_ecdsa256")

    @hostkey_ecdsa256.setter
    def hostkey_ecdsa256(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "hostkey_ecdsa256", value)

    @property
    @pulumi.getter(name="hostkeyEcdsa384")
    def hostkey_ecdsa384(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "hostkey_ecdsa384")

    @hostkey_ecdsa384.setter
    def hostkey_ecdsa384(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "hostkey_ecdsa384", value)

    @property
    @pulumi.getter(name="hostkeyEcdsa521")
    def hostkey_ecdsa521(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "hostkey_ecdsa521")

    @hostkey_ecdsa521.setter
    def hostkey_ecdsa521(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "hostkey_ecdsa521", value)

    @property
    @pulumi.getter(name="hostkeyEd25519")
    def hostkey_ed25519(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "hostkey_ed25519")

    @hostkey_ed25519.setter
    def hostkey_ed25519(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "hostkey_ed25519", value)

    @property
    @pulumi.getter(name="hostkeyRsa2048")
    def hostkey_rsa2048(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "hostkey_rsa2048")

    @hostkey_rsa2048.setter
    def hostkey_rsa2048(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "hostkey_rsa2048", value)

    @property
    @pulumi.getter(name="untrustedCaname")
    def untrusted_caname(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "untrusted_caname")

    @untrusted_caname.setter
    def untrusted_caname(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "untrusted_caname", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


class FirewallSshSetting(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 caname: Optional[pulumi.Input[str]] = None,
                 host_trusted_checking: Optional[pulumi.Input[str]] = None,
                 hostkey_dsa1024: Optional[pulumi.Input[str]] = None,
                 hostkey_ecdsa256: Optional[pulumi.Input[str]] = None,
                 hostkey_ecdsa384: Optional[pulumi.Input[str]] = None,
                 hostkey_ecdsa521: Optional[pulumi.Input[str]] = None,
                 hostkey_ed25519: Optional[pulumi.Input[str]] = None,
                 hostkey_rsa2048: Optional[pulumi.Input[str]] = None,
                 untrusted_caname: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Create a FirewallSshSetting resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[FirewallSshSettingArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a FirewallSshSetting resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param FirewallSshSettingArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(FirewallSshSettingArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 caname: Optional[pulumi.Input[str]] = None,
                 host_trusted_checking: Optional[pulumi.Input[str]] = None,
                 hostkey_dsa1024: Optional[pulumi.Input[str]] = None,
                 hostkey_ecdsa256: Optional[pulumi.Input[str]] = None,
                 hostkey_ecdsa384: Optional[pulumi.Input[str]] = None,
                 hostkey_ecdsa521: Optional[pulumi.Input[str]] = None,
                 hostkey_ed25519: Optional[pulumi.Input[str]] = None,
                 hostkey_rsa2048: Optional[pulumi.Input[str]] = None,
                 untrusted_caname: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = FirewallSshSettingArgs.__new__(FirewallSshSettingArgs)

            __props__.__dict__["caname"] = caname
            __props__.__dict__["host_trusted_checking"] = host_trusted_checking
            __props__.__dict__["hostkey_dsa1024"] = hostkey_dsa1024
            __props__.__dict__["hostkey_ecdsa256"] = hostkey_ecdsa256
            __props__.__dict__["hostkey_ecdsa384"] = hostkey_ecdsa384
            __props__.__dict__["hostkey_ecdsa521"] = hostkey_ecdsa521
            __props__.__dict__["hostkey_ed25519"] = hostkey_ed25519
            __props__.__dict__["hostkey_rsa2048"] = hostkey_rsa2048
            __props__.__dict__["untrusted_caname"] = untrusted_caname
            __props__.__dict__["vdomparam"] = vdomparam
        super(FirewallSshSetting, __self__).__init__(
            'fortios:index/firewallSshSetting:FirewallSshSetting',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            caname: Optional[pulumi.Input[str]] = None,
            host_trusted_checking: Optional[pulumi.Input[str]] = None,
            hostkey_dsa1024: Optional[pulumi.Input[str]] = None,
            hostkey_ecdsa256: Optional[pulumi.Input[str]] = None,
            hostkey_ecdsa384: Optional[pulumi.Input[str]] = None,
            hostkey_ecdsa521: Optional[pulumi.Input[str]] = None,
            hostkey_ed25519: Optional[pulumi.Input[str]] = None,
            hostkey_rsa2048: Optional[pulumi.Input[str]] = None,
            untrusted_caname: Optional[pulumi.Input[str]] = None,
            vdomparam: Optional[pulumi.Input[str]] = None) -> 'FirewallSshSetting':
        """
        Get an existing FirewallSshSetting resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _FirewallSshSettingState.__new__(_FirewallSshSettingState)

        __props__.__dict__["caname"] = caname
        __props__.__dict__["host_trusted_checking"] = host_trusted_checking
        __props__.__dict__["hostkey_dsa1024"] = hostkey_dsa1024
        __props__.__dict__["hostkey_ecdsa256"] = hostkey_ecdsa256
        __props__.__dict__["hostkey_ecdsa384"] = hostkey_ecdsa384
        __props__.__dict__["hostkey_ecdsa521"] = hostkey_ecdsa521
        __props__.__dict__["hostkey_ed25519"] = hostkey_ed25519
        __props__.__dict__["hostkey_rsa2048"] = hostkey_rsa2048
        __props__.__dict__["untrusted_caname"] = untrusted_caname
        __props__.__dict__["vdomparam"] = vdomparam
        return FirewallSshSetting(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def caname(self) -> pulumi.Output[str]:
        return pulumi.get(self, "caname")

    @property
    @pulumi.getter(name="hostTrustedChecking")
    def host_trusted_checking(self) -> pulumi.Output[str]:
        return pulumi.get(self, "host_trusted_checking")

    @property
    @pulumi.getter(name="hostkeyDsa1024")
    def hostkey_dsa1024(self) -> pulumi.Output[str]:
        return pulumi.get(self, "hostkey_dsa1024")

    @property
    @pulumi.getter(name="hostkeyEcdsa256")
    def hostkey_ecdsa256(self) -> pulumi.Output[str]:
        return pulumi.get(self, "hostkey_ecdsa256")

    @property
    @pulumi.getter(name="hostkeyEcdsa384")
    def hostkey_ecdsa384(self) -> pulumi.Output[str]:
        return pulumi.get(self, "hostkey_ecdsa384")

    @property
    @pulumi.getter(name="hostkeyEcdsa521")
    def hostkey_ecdsa521(self) -> pulumi.Output[str]:
        return pulumi.get(self, "hostkey_ecdsa521")

    @property
    @pulumi.getter(name="hostkeyEd25519")
    def hostkey_ed25519(self) -> pulumi.Output[str]:
        return pulumi.get(self, "hostkey_ed25519")

    @property
    @pulumi.getter(name="hostkeyRsa2048")
    def hostkey_rsa2048(self) -> pulumi.Output[str]:
        return pulumi.get(self, "hostkey_rsa2048")

    @property
    @pulumi.getter(name="untrustedCaname")
    def untrusted_caname(self) -> pulumi.Output[str]:
        return pulumi.get(self, "untrusted_caname")

    @property
    @pulumi.getter
    def vdomparam(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "vdomparam")

