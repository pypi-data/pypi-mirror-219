# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = ['SystemPasswordPolicyGuestAdminArgs', 'SystemPasswordPolicyGuestAdmin']

@pulumi.input_type
class SystemPasswordPolicyGuestAdminArgs:
    def __init__(__self__, *,
                 apply_to: Optional[pulumi.Input[str]] = None,
                 change4_characters: Optional[pulumi.Input[str]] = None,
                 expire_day: Optional[pulumi.Input[int]] = None,
                 expire_status: Optional[pulumi.Input[str]] = None,
                 min_change_characters: Optional[pulumi.Input[int]] = None,
                 min_lower_case_letter: Optional[pulumi.Input[int]] = None,
                 min_non_alphanumeric: Optional[pulumi.Input[int]] = None,
                 min_number: Optional[pulumi.Input[int]] = None,
                 min_upper_case_letter: Optional[pulumi.Input[int]] = None,
                 minimum_length: Optional[pulumi.Input[int]] = None,
                 reuse_password: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a SystemPasswordPolicyGuestAdmin resource.
        """
        if apply_to is not None:
            pulumi.set(__self__, "apply_to", apply_to)
        if change4_characters is not None:
            pulumi.set(__self__, "change4_characters", change4_characters)
        if expire_day is not None:
            pulumi.set(__self__, "expire_day", expire_day)
        if expire_status is not None:
            pulumi.set(__self__, "expire_status", expire_status)
        if min_change_characters is not None:
            pulumi.set(__self__, "min_change_characters", min_change_characters)
        if min_lower_case_letter is not None:
            pulumi.set(__self__, "min_lower_case_letter", min_lower_case_letter)
        if min_non_alphanumeric is not None:
            pulumi.set(__self__, "min_non_alphanumeric", min_non_alphanumeric)
        if min_number is not None:
            pulumi.set(__self__, "min_number", min_number)
        if min_upper_case_letter is not None:
            pulumi.set(__self__, "min_upper_case_letter", min_upper_case_letter)
        if minimum_length is not None:
            pulumi.set(__self__, "minimum_length", minimum_length)
        if reuse_password is not None:
            pulumi.set(__self__, "reuse_password", reuse_password)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter(name="applyTo")
    def apply_to(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "apply_to")

    @apply_to.setter
    def apply_to(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "apply_to", value)

    @property
    @pulumi.getter(name="change4Characters")
    def change4_characters(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "change4_characters")

    @change4_characters.setter
    def change4_characters(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "change4_characters", value)

    @property
    @pulumi.getter(name="expireDay")
    def expire_day(self) -> Optional[pulumi.Input[int]]:
        return pulumi.get(self, "expire_day")

    @expire_day.setter
    def expire_day(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "expire_day", value)

    @property
    @pulumi.getter(name="expireStatus")
    def expire_status(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "expire_status")

    @expire_status.setter
    def expire_status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "expire_status", value)

    @property
    @pulumi.getter(name="minChangeCharacters")
    def min_change_characters(self) -> Optional[pulumi.Input[int]]:
        return pulumi.get(self, "min_change_characters")

    @min_change_characters.setter
    def min_change_characters(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "min_change_characters", value)

    @property
    @pulumi.getter(name="minLowerCaseLetter")
    def min_lower_case_letter(self) -> Optional[pulumi.Input[int]]:
        return pulumi.get(self, "min_lower_case_letter")

    @min_lower_case_letter.setter
    def min_lower_case_letter(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "min_lower_case_letter", value)

    @property
    @pulumi.getter(name="minNonAlphanumeric")
    def min_non_alphanumeric(self) -> Optional[pulumi.Input[int]]:
        return pulumi.get(self, "min_non_alphanumeric")

    @min_non_alphanumeric.setter
    def min_non_alphanumeric(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "min_non_alphanumeric", value)

    @property
    @pulumi.getter(name="minNumber")
    def min_number(self) -> Optional[pulumi.Input[int]]:
        return pulumi.get(self, "min_number")

    @min_number.setter
    def min_number(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "min_number", value)

    @property
    @pulumi.getter(name="minUpperCaseLetter")
    def min_upper_case_letter(self) -> Optional[pulumi.Input[int]]:
        return pulumi.get(self, "min_upper_case_letter")

    @min_upper_case_letter.setter
    def min_upper_case_letter(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "min_upper_case_letter", value)

    @property
    @pulumi.getter(name="minimumLength")
    def minimum_length(self) -> Optional[pulumi.Input[int]]:
        return pulumi.get(self, "minimum_length")

    @minimum_length.setter
    def minimum_length(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "minimum_length", value)

    @property
    @pulumi.getter(name="reusePassword")
    def reuse_password(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "reuse_password")

    @reuse_password.setter
    def reuse_password(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "reuse_password", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


@pulumi.input_type
class _SystemPasswordPolicyGuestAdminState:
    def __init__(__self__, *,
                 apply_to: Optional[pulumi.Input[str]] = None,
                 change4_characters: Optional[pulumi.Input[str]] = None,
                 expire_day: Optional[pulumi.Input[int]] = None,
                 expire_status: Optional[pulumi.Input[str]] = None,
                 min_change_characters: Optional[pulumi.Input[int]] = None,
                 min_lower_case_letter: Optional[pulumi.Input[int]] = None,
                 min_non_alphanumeric: Optional[pulumi.Input[int]] = None,
                 min_number: Optional[pulumi.Input[int]] = None,
                 min_upper_case_letter: Optional[pulumi.Input[int]] = None,
                 minimum_length: Optional[pulumi.Input[int]] = None,
                 reuse_password: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering SystemPasswordPolicyGuestAdmin resources.
        """
        if apply_to is not None:
            pulumi.set(__self__, "apply_to", apply_to)
        if change4_characters is not None:
            pulumi.set(__self__, "change4_characters", change4_characters)
        if expire_day is not None:
            pulumi.set(__self__, "expire_day", expire_day)
        if expire_status is not None:
            pulumi.set(__self__, "expire_status", expire_status)
        if min_change_characters is not None:
            pulumi.set(__self__, "min_change_characters", min_change_characters)
        if min_lower_case_letter is not None:
            pulumi.set(__self__, "min_lower_case_letter", min_lower_case_letter)
        if min_non_alphanumeric is not None:
            pulumi.set(__self__, "min_non_alphanumeric", min_non_alphanumeric)
        if min_number is not None:
            pulumi.set(__self__, "min_number", min_number)
        if min_upper_case_letter is not None:
            pulumi.set(__self__, "min_upper_case_letter", min_upper_case_letter)
        if minimum_length is not None:
            pulumi.set(__self__, "minimum_length", minimum_length)
        if reuse_password is not None:
            pulumi.set(__self__, "reuse_password", reuse_password)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter(name="applyTo")
    def apply_to(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "apply_to")

    @apply_to.setter
    def apply_to(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "apply_to", value)

    @property
    @pulumi.getter(name="change4Characters")
    def change4_characters(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "change4_characters")

    @change4_characters.setter
    def change4_characters(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "change4_characters", value)

    @property
    @pulumi.getter(name="expireDay")
    def expire_day(self) -> Optional[pulumi.Input[int]]:
        return pulumi.get(self, "expire_day")

    @expire_day.setter
    def expire_day(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "expire_day", value)

    @property
    @pulumi.getter(name="expireStatus")
    def expire_status(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "expire_status")

    @expire_status.setter
    def expire_status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "expire_status", value)

    @property
    @pulumi.getter(name="minChangeCharacters")
    def min_change_characters(self) -> Optional[pulumi.Input[int]]:
        return pulumi.get(self, "min_change_characters")

    @min_change_characters.setter
    def min_change_characters(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "min_change_characters", value)

    @property
    @pulumi.getter(name="minLowerCaseLetter")
    def min_lower_case_letter(self) -> Optional[pulumi.Input[int]]:
        return pulumi.get(self, "min_lower_case_letter")

    @min_lower_case_letter.setter
    def min_lower_case_letter(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "min_lower_case_letter", value)

    @property
    @pulumi.getter(name="minNonAlphanumeric")
    def min_non_alphanumeric(self) -> Optional[pulumi.Input[int]]:
        return pulumi.get(self, "min_non_alphanumeric")

    @min_non_alphanumeric.setter
    def min_non_alphanumeric(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "min_non_alphanumeric", value)

    @property
    @pulumi.getter(name="minNumber")
    def min_number(self) -> Optional[pulumi.Input[int]]:
        return pulumi.get(self, "min_number")

    @min_number.setter
    def min_number(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "min_number", value)

    @property
    @pulumi.getter(name="minUpperCaseLetter")
    def min_upper_case_letter(self) -> Optional[pulumi.Input[int]]:
        return pulumi.get(self, "min_upper_case_letter")

    @min_upper_case_letter.setter
    def min_upper_case_letter(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "min_upper_case_letter", value)

    @property
    @pulumi.getter(name="minimumLength")
    def minimum_length(self) -> Optional[pulumi.Input[int]]:
        return pulumi.get(self, "minimum_length")

    @minimum_length.setter
    def minimum_length(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "minimum_length", value)

    @property
    @pulumi.getter(name="reusePassword")
    def reuse_password(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "reuse_password")

    @reuse_password.setter
    def reuse_password(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "reuse_password", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


class SystemPasswordPolicyGuestAdmin(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 apply_to: Optional[pulumi.Input[str]] = None,
                 change4_characters: Optional[pulumi.Input[str]] = None,
                 expire_day: Optional[pulumi.Input[int]] = None,
                 expire_status: Optional[pulumi.Input[str]] = None,
                 min_change_characters: Optional[pulumi.Input[int]] = None,
                 min_lower_case_letter: Optional[pulumi.Input[int]] = None,
                 min_non_alphanumeric: Optional[pulumi.Input[int]] = None,
                 min_number: Optional[pulumi.Input[int]] = None,
                 min_upper_case_letter: Optional[pulumi.Input[int]] = None,
                 minimum_length: Optional[pulumi.Input[int]] = None,
                 reuse_password: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Create a SystemPasswordPolicyGuestAdmin resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[SystemPasswordPolicyGuestAdminArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a SystemPasswordPolicyGuestAdmin resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param SystemPasswordPolicyGuestAdminArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(SystemPasswordPolicyGuestAdminArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 apply_to: Optional[pulumi.Input[str]] = None,
                 change4_characters: Optional[pulumi.Input[str]] = None,
                 expire_day: Optional[pulumi.Input[int]] = None,
                 expire_status: Optional[pulumi.Input[str]] = None,
                 min_change_characters: Optional[pulumi.Input[int]] = None,
                 min_lower_case_letter: Optional[pulumi.Input[int]] = None,
                 min_non_alphanumeric: Optional[pulumi.Input[int]] = None,
                 min_number: Optional[pulumi.Input[int]] = None,
                 min_upper_case_letter: Optional[pulumi.Input[int]] = None,
                 minimum_length: Optional[pulumi.Input[int]] = None,
                 reuse_password: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = SystemPasswordPolicyGuestAdminArgs.__new__(SystemPasswordPolicyGuestAdminArgs)

            __props__.__dict__["apply_to"] = apply_to
            __props__.__dict__["change4_characters"] = change4_characters
            __props__.__dict__["expire_day"] = expire_day
            __props__.__dict__["expire_status"] = expire_status
            __props__.__dict__["min_change_characters"] = min_change_characters
            __props__.__dict__["min_lower_case_letter"] = min_lower_case_letter
            __props__.__dict__["min_non_alphanumeric"] = min_non_alphanumeric
            __props__.__dict__["min_number"] = min_number
            __props__.__dict__["min_upper_case_letter"] = min_upper_case_letter
            __props__.__dict__["minimum_length"] = minimum_length
            __props__.__dict__["reuse_password"] = reuse_password
            __props__.__dict__["status"] = status
            __props__.__dict__["vdomparam"] = vdomparam
        super(SystemPasswordPolicyGuestAdmin, __self__).__init__(
            'fortios:index/systemPasswordPolicyGuestAdmin:SystemPasswordPolicyGuestAdmin',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            apply_to: Optional[pulumi.Input[str]] = None,
            change4_characters: Optional[pulumi.Input[str]] = None,
            expire_day: Optional[pulumi.Input[int]] = None,
            expire_status: Optional[pulumi.Input[str]] = None,
            min_change_characters: Optional[pulumi.Input[int]] = None,
            min_lower_case_letter: Optional[pulumi.Input[int]] = None,
            min_non_alphanumeric: Optional[pulumi.Input[int]] = None,
            min_number: Optional[pulumi.Input[int]] = None,
            min_upper_case_letter: Optional[pulumi.Input[int]] = None,
            minimum_length: Optional[pulumi.Input[int]] = None,
            reuse_password: Optional[pulumi.Input[str]] = None,
            status: Optional[pulumi.Input[str]] = None,
            vdomparam: Optional[pulumi.Input[str]] = None) -> 'SystemPasswordPolicyGuestAdmin':
        """
        Get an existing SystemPasswordPolicyGuestAdmin resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _SystemPasswordPolicyGuestAdminState.__new__(_SystemPasswordPolicyGuestAdminState)

        __props__.__dict__["apply_to"] = apply_to
        __props__.__dict__["change4_characters"] = change4_characters
        __props__.__dict__["expire_day"] = expire_day
        __props__.__dict__["expire_status"] = expire_status
        __props__.__dict__["min_change_characters"] = min_change_characters
        __props__.__dict__["min_lower_case_letter"] = min_lower_case_letter
        __props__.__dict__["min_non_alphanumeric"] = min_non_alphanumeric
        __props__.__dict__["min_number"] = min_number
        __props__.__dict__["min_upper_case_letter"] = min_upper_case_letter
        __props__.__dict__["minimum_length"] = minimum_length
        __props__.__dict__["reuse_password"] = reuse_password
        __props__.__dict__["status"] = status
        __props__.__dict__["vdomparam"] = vdomparam
        return SystemPasswordPolicyGuestAdmin(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="applyTo")
    def apply_to(self) -> pulumi.Output[str]:
        return pulumi.get(self, "apply_to")

    @property
    @pulumi.getter(name="change4Characters")
    def change4_characters(self) -> pulumi.Output[str]:
        return pulumi.get(self, "change4_characters")

    @property
    @pulumi.getter(name="expireDay")
    def expire_day(self) -> pulumi.Output[int]:
        return pulumi.get(self, "expire_day")

    @property
    @pulumi.getter(name="expireStatus")
    def expire_status(self) -> pulumi.Output[str]:
        return pulumi.get(self, "expire_status")

    @property
    @pulumi.getter(name="minChangeCharacters")
    def min_change_characters(self) -> pulumi.Output[int]:
        return pulumi.get(self, "min_change_characters")

    @property
    @pulumi.getter(name="minLowerCaseLetter")
    def min_lower_case_letter(self) -> pulumi.Output[int]:
        return pulumi.get(self, "min_lower_case_letter")

    @property
    @pulumi.getter(name="minNonAlphanumeric")
    def min_non_alphanumeric(self) -> pulumi.Output[int]:
        return pulumi.get(self, "min_non_alphanumeric")

    @property
    @pulumi.getter(name="minNumber")
    def min_number(self) -> pulumi.Output[int]:
        return pulumi.get(self, "min_number")

    @property
    @pulumi.getter(name="minUpperCaseLetter")
    def min_upper_case_letter(self) -> pulumi.Output[int]:
        return pulumi.get(self, "min_upper_case_letter")

    @property
    @pulumi.getter(name="minimumLength")
    def minimum_length(self) -> pulumi.Output[int]:
        return pulumi.get(self, "minimum_length")

    @property
    @pulumi.getter(name="reusePassword")
    def reuse_password(self) -> pulumi.Output[str]:
        return pulumi.get(self, "reuse_password")

    @property
    @pulumi.getter
    def status(self) -> pulumi.Output[str]:
        return pulumi.get(self, "status")

    @property
    @pulumi.getter
    def vdomparam(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "vdomparam")

