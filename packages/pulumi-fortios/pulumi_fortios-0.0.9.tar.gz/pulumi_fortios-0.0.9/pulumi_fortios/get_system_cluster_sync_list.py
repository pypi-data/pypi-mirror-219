# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetSystemClusterSyncListResult',
    'AwaitableGetSystemClusterSyncListResult',
    'get_system_cluster_sync_list',
    'get_system_cluster_sync_list_output',
]

@pulumi.output_type
class GetSystemClusterSyncListResult:
    """
    A collection of values returned by GetSystemClusterSyncList.
    """
    def __init__(__self__, filter=None, id=None, sync_idlists=None, vdomparam=None):
        if filter and not isinstance(filter, str):
            raise TypeError("Expected argument 'filter' to be a str")
        pulumi.set(__self__, "filter", filter)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if sync_idlists and not isinstance(sync_idlists, list):
            raise TypeError("Expected argument 'sync_idlists' to be a list")
        pulumi.set(__self__, "sync_idlists", sync_idlists)
        if vdomparam and not isinstance(vdomparam, str):
            raise TypeError("Expected argument 'vdomparam' to be a str")
        pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter
    def filter(self) -> Optional[str]:
        return pulumi.get(self, "filter")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="syncIdlists")
    def sync_idlists(self) -> Sequence[int]:
        return pulumi.get(self, "sync_idlists")

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[str]:
        return pulumi.get(self, "vdomparam")


class AwaitableGetSystemClusterSyncListResult(GetSystemClusterSyncListResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSystemClusterSyncListResult(
            filter=self.filter,
            id=self.id,
            sync_idlists=self.sync_idlists,
            vdomparam=self.vdomparam)


def get_system_cluster_sync_list(filter: Optional[str] = None,
                                 vdomparam: Optional[str] = None,
                                 opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSystemClusterSyncListResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['filter'] = filter
    __args__['vdomparam'] = vdomparam
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('fortios:index/getSystemClusterSyncList:GetSystemClusterSyncList', __args__, opts=opts, typ=GetSystemClusterSyncListResult).value

    return AwaitableGetSystemClusterSyncListResult(
        filter=pulumi.get(__ret__, 'filter'),
        id=pulumi.get(__ret__, 'id'),
        sync_idlists=pulumi.get(__ret__, 'sync_idlists'),
        vdomparam=pulumi.get(__ret__, 'vdomparam'))


@_utilities.lift_output_func(get_system_cluster_sync_list)
def get_system_cluster_sync_list_output(filter: Optional[pulumi.Input[Optional[str]]] = None,
                                        vdomparam: Optional[pulumi.Input[Optional[str]]] = None,
                                        opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetSystemClusterSyncListResult]:
    """
    Use this data source to access information about an existing resource.
    """
    ...
