# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['EndpointControlProfileArgs', 'EndpointControlProfile']

@pulumi.input_type
class EndpointControlProfileArgs:
    def __init__(__self__, *,
                 description: Optional[pulumi.Input[str]] = None,
                 device_groups: Optional[pulumi.Input[Sequence[pulumi.Input['EndpointControlProfileDeviceGroupArgs']]]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 forticlient_android_settings: Optional[pulumi.Input['EndpointControlProfileForticlientAndroidSettingsArgs']] = None,
                 forticlient_ios_settings: Optional[pulumi.Input['EndpointControlProfileForticlientIosSettingsArgs']] = None,
                 forticlient_winmac_settings: Optional[pulumi.Input['EndpointControlProfileForticlientWinmacSettingsArgs']] = None,
                 get_all_tables: Optional[pulumi.Input[str]] = None,
                 on_net_addrs: Optional[pulumi.Input[Sequence[pulumi.Input['EndpointControlProfileOnNetAddrArgs']]]] = None,
                 profile_name: Optional[pulumi.Input[str]] = None,
                 replacemsg_override_group: Optional[pulumi.Input[str]] = None,
                 src_addrs: Optional[pulumi.Input[Sequence[pulumi.Input['EndpointControlProfileSrcAddrArgs']]]] = None,
                 user_groups: Optional[pulumi.Input[Sequence[pulumi.Input['EndpointControlProfileUserGroupArgs']]]] = None,
                 users: Optional[pulumi.Input[Sequence[pulumi.Input['EndpointControlProfileUserArgs']]]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a EndpointControlProfile resource.
        """
        if description is not None:
            pulumi.set(__self__, "description", description)
        if device_groups is not None:
            pulumi.set(__self__, "device_groups", device_groups)
        if dynamic_sort_subtable is not None:
            pulumi.set(__self__, "dynamic_sort_subtable", dynamic_sort_subtable)
        if forticlient_android_settings is not None:
            pulumi.set(__self__, "forticlient_android_settings", forticlient_android_settings)
        if forticlient_ios_settings is not None:
            pulumi.set(__self__, "forticlient_ios_settings", forticlient_ios_settings)
        if forticlient_winmac_settings is not None:
            pulumi.set(__self__, "forticlient_winmac_settings", forticlient_winmac_settings)
        if get_all_tables is not None:
            pulumi.set(__self__, "get_all_tables", get_all_tables)
        if on_net_addrs is not None:
            pulumi.set(__self__, "on_net_addrs", on_net_addrs)
        if profile_name is not None:
            pulumi.set(__self__, "profile_name", profile_name)
        if replacemsg_override_group is not None:
            pulumi.set(__self__, "replacemsg_override_group", replacemsg_override_group)
        if src_addrs is not None:
            pulumi.set(__self__, "src_addrs", src_addrs)
        if user_groups is not None:
            pulumi.set(__self__, "user_groups", user_groups)
        if users is not None:
            pulumi.set(__self__, "users", users)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="deviceGroups")
    def device_groups(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['EndpointControlProfileDeviceGroupArgs']]]]:
        return pulumi.get(self, "device_groups")

    @device_groups.setter
    def device_groups(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['EndpointControlProfileDeviceGroupArgs']]]]):
        pulumi.set(self, "device_groups", value)

    @property
    @pulumi.getter(name="dynamicSortSubtable")
    def dynamic_sort_subtable(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "dynamic_sort_subtable")

    @dynamic_sort_subtable.setter
    def dynamic_sort_subtable(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dynamic_sort_subtable", value)

    @property
    @pulumi.getter(name="forticlientAndroidSettings")
    def forticlient_android_settings(self) -> Optional[pulumi.Input['EndpointControlProfileForticlientAndroidSettingsArgs']]:
        return pulumi.get(self, "forticlient_android_settings")

    @forticlient_android_settings.setter
    def forticlient_android_settings(self, value: Optional[pulumi.Input['EndpointControlProfileForticlientAndroidSettingsArgs']]):
        pulumi.set(self, "forticlient_android_settings", value)

    @property
    @pulumi.getter(name="forticlientIosSettings")
    def forticlient_ios_settings(self) -> Optional[pulumi.Input['EndpointControlProfileForticlientIosSettingsArgs']]:
        return pulumi.get(self, "forticlient_ios_settings")

    @forticlient_ios_settings.setter
    def forticlient_ios_settings(self, value: Optional[pulumi.Input['EndpointControlProfileForticlientIosSettingsArgs']]):
        pulumi.set(self, "forticlient_ios_settings", value)

    @property
    @pulumi.getter(name="forticlientWinmacSettings")
    def forticlient_winmac_settings(self) -> Optional[pulumi.Input['EndpointControlProfileForticlientWinmacSettingsArgs']]:
        return pulumi.get(self, "forticlient_winmac_settings")

    @forticlient_winmac_settings.setter
    def forticlient_winmac_settings(self, value: Optional[pulumi.Input['EndpointControlProfileForticlientWinmacSettingsArgs']]):
        pulumi.set(self, "forticlient_winmac_settings", value)

    @property
    @pulumi.getter(name="getAllTables")
    def get_all_tables(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "get_all_tables")

    @get_all_tables.setter
    def get_all_tables(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "get_all_tables", value)

    @property
    @pulumi.getter(name="onNetAddrs")
    def on_net_addrs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['EndpointControlProfileOnNetAddrArgs']]]]:
        return pulumi.get(self, "on_net_addrs")

    @on_net_addrs.setter
    def on_net_addrs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['EndpointControlProfileOnNetAddrArgs']]]]):
        pulumi.set(self, "on_net_addrs", value)

    @property
    @pulumi.getter(name="profileName")
    def profile_name(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "profile_name")

    @profile_name.setter
    def profile_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "profile_name", value)

    @property
    @pulumi.getter(name="replacemsgOverrideGroup")
    def replacemsg_override_group(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "replacemsg_override_group")

    @replacemsg_override_group.setter
    def replacemsg_override_group(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "replacemsg_override_group", value)

    @property
    @pulumi.getter(name="srcAddrs")
    def src_addrs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['EndpointControlProfileSrcAddrArgs']]]]:
        return pulumi.get(self, "src_addrs")

    @src_addrs.setter
    def src_addrs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['EndpointControlProfileSrcAddrArgs']]]]):
        pulumi.set(self, "src_addrs", value)

    @property
    @pulumi.getter(name="userGroups")
    def user_groups(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['EndpointControlProfileUserGroupArgs']]]]:
        return pulumi.get(self, "user_groups")

    @user_groups.setter
    def user_groups(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['EndpointControlProfileUserGroupArgs']]]]):
        pulumi.set(self, "user_groups", value)

    @property
    @pulumi.getter
    def users(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['EndpointControlProfileUserArgs']]]]:
        return pulumi.get(self, "users")

    @users.setter
    def users(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['EndpointControlProfileUserArgs']]]]):
        pulumi.set(self, "users", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


@pulumi.input_type
class _EndpointControlProfileState:
    def __init__(__self__, *,
                 description: Optional[pulumi.Input[str]] = None,
                 device_groups: Optional[pulumi.Input[Sequence[pulumi.Input['EndpointControlProfileDeviceGroupArgs']]]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 forticlient_android_settings: Optional[pulumi.Input['EndpointControlProfileForticlientAndroidSettingsArgs']] = None,
                 forticlient_ios_settings: Optional[pulumi.Input['EndpointControlProfileForticlientIosSettingsArgs']] = None,
                 forticlient_winmac_settings: Optional[pulumi.Input['EndpointControlProfileForticlientWinmacSettingsArgs']] = None,
                 get_all_tables: Optional[pulumi.Input[str]] = None,
                 on_net_addrs: Optional[pulumi.Input[Sequence[pulumi.Input['EndpointControlProfileOnNetAddrArgs']]]] = None,
                 profile_name: Optional[pulumi.Input[str]] = None,
                 replacemsg_override_group: Optional[pulumi.Input[str]] = None,
                 src_addrs: Optional[pulumi.Input[Sequence[pulumi.Input['EndpointControlProfileSrcAddrArgs']]]] = None,
                 user_groups: Optional[pulumi.Input[Sequence[pulumi.Input['EndpointControlProfileUserGroupArgs']]]] = None,
                 users: Optional[pulumi.Input[Sequence[pulumi.Input['EndpointControlProfileUserArgs']]]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering EndpointControlProfile resources.
        """
        if description is not None:
            pulumi.set(__self__, "description", description)
        if device_groups is not None:
            pulumi.set(__self__, "device_groups", device_groups)
        if dynamic_sort_subtable is not None:
            pulumi.set(__self__, "dynamic_sort_subtable", dynamic_sort_subtable)
        if forticlient_android_settings is not None:
            pulumi.set(__self__, "forticlient_android_settings", forticlient_android_settings)
        if forticlient_ios_settings is not None:
            pulumi.set(__self__, "forticlient_ios_settings", forticlient_ios_settings)
        if forticlient_winmac_settings is not None:
            pulumi.set(__self__, "forticlient_winmac_settings", forticlient_winmac_settings)
        if get_all_tables is not None:
            pulumi.set(__self__, "get_all_tables", get_all_tables)
        if on_net_addrs is not None:
            pulumi.set(__self__, "on_net_addrs", on_net_addrs)
        if profile_name is not None:
            pulumi.set(__self__, "profile_name", profile_name)
        if replacemsg_override_group is not None:
            pulumi.set(__self__, "replacemsg_override_group", replacemsg_override_group)
        if src_addrs is not None:
            pulumi.set(__self__, "src_addrs", src_addrs)
        if user_groups is not None:
            pulumi.set(__self__, "user_groups", user_groups)
        if users is not None:
            pulumi.set(__self__, "users", users)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="deviceGroups")
    def device_groups(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['EndpointControlProfileDeviceGroupArgs']]]]:
        return pulumi.get(self, "device_groups")

    @device_groups.setter
    def device_groups(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['EndpointControlProfileDeviceGroupArgs']]]]):
        pulumi.set(self, "device_groups", value)

    @property
    @pulumi.getter(name="dynamicSortSubtable")
    def dynamic_sort_subtable(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "dynamic_sort_subtable")

    @dynamic_sort_subtable.setter
    def dynamic_sort_subtable(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dynamic_sort_subtable", value)

    @property
    @pulumi.getter(name="forticlientAndroidSettings")
    def forticlient_android_settings(self) -> Optional[pulumi.Input['EndpointControlProfileForticlientAndroidSettingsArgs']]:
        return pulumi.get(self, "forticlient_android_settings")

    @forticlient_android_settings.setter
    def forticlient_android_settings(self, value: Optional[pulumi.Input['EndpointControlProfileForticlientAndroidSettingsArgs']]):
        pulumi.set(self, "forticlient_android_settings", value)

    @property
    @pulumi.getter(name="forticlientIosSettings")
    def forticlient_ios_settings(self) -> Optional[pulumi.Input['EndpointControlProfileForticlientIosSettingsArgs']]:
        return pulumi.get(self, "forticlient_ios_settings")

    @forticlient_ios_settings.setter
    def forticlient_ios_settings(self, value: Optional[pulumi.Input['EndpointControlProfileForticlientIosSettingsArgs']]):
        pulumi.set(self, "forticlient_ios_settings", value)

    @property
    @pulumi.getter(name="forticlientWinmacSettings")
    def forticlient_winmac_settings(self) -> Optional[pulumi.Input['EndpointControlProfileForticlientWinmacSettingsArgs']]:
        return pulumi.get(self, "forticlient_winmac_settings")

    @forticlient_winmac_settings.setter
    def forticlient_winmac_settings(self, value: Optional[pulumi.Input['EndpointControlProfileForticlientWinmacSettingsArgs']]):
        pulumi.set(self, "forticlient_winmac_settings", value)

    @property
    @pulumi.getter(name="getAllTables")
    def get_all_tables(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "get_all_tables")

    @get_all_tables.setter
    def get_all_tables(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "get_all_tables", value)

    @property
    @pulumi.getter(name="onNetAddrs")
    def on_net_addrs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['EndpointControlProfileOnNetAddrArgs']]]]:
        return pulumi.get(self, "on_net_addrs")

    @on_net_addrs.setter
    def on_net_addrs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['EndpointControlProfileOnNetAddrArgs']]]]):
        pulumi.set(self, "on_net_addrs", value)

    @property
    @pulumi.getter(name="profileName")
    def profile_name(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "profile_name")

    @profile_name.setter
    def profile_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "profile_name", value)

    @property
    @pulumi.getter(name="replacemsgOverrideGroup")
    def replacemsg_override_group(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "replacemsg_override_group")

    @replacemsg_override_group.setter
    def replacemsg_override_group(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "replacemsg_override_group", value)

    @property
    @pulumi.getter(name="srcAddrs")
    def src_addrs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['EndpointControlProfileSrcAddrArgs']]]]:
        return pulumi.get(self, "src_addrs")

    @src_addrs.setter
    def src_addrs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['EndpointControlProfileSrcAddrArgs']]]]):
        pulumi.set(self, "src_addrs", value)

    @property
    @pulumi.getter(name="userGroups")
    def user_groups(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['EndpointControlProfileUserGroupArgs']]]]:
        return pulumi.get(self, "user_groups")

    @user_groups.setter
    def user_groups(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['EndpointControlProfileUserGroupArgs']]]]):
        pulumi.set(self, "user_groups", value)

    @property
    @pulumi.getter
    def users(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['EndpointControlProfileUserArgs']]]]:
        return pulumi.get(self, "users")

    @users.setter
    def users(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['EndpointControlProfileUserArgs']]]]):
        pulumi.set(self, "users", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


class EndpointControlProfile(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 device_groups: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['EndpointControlProfileDeviceGroupArgs']]]]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 forticlient_android_settings: Optional[pulumi.Input[pulumi.InputType['EndpointControlProfileForticlientAndroidSettingsArgs']]] = None,
                 forticlient_ios_settings: Optional[pulumi.Input[pulumi.InputType['EndpointControlProfileForticlientIosSettingsArgs']]] = None,
                 forticlient_winmac_settings: Optional[pulumi.Input[pulumi.InputType['EndpointControlProfileForticlientWinmacSettingsArgs']]] = None,
                 get_all_tables: Optional[pulumi.Input[str]] = None,
                 on_net_addrs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['EndpointControlProfileOnNetAddrArgs']]]]] = None,
                 profile_name: Optional[pulumi.Input[str]] = None,
                 replacemsg_override_group: Optional[pulumi.Input[str]] = None,
                 src_addrs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['EndpointControlProfileSrcAddrArgs']]]]] = None,
                 user_groups: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['EndpointControlProfileUserGroupArgs']]]]] = None,
                 users: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['EndpointControlProfileUserArgs']]]]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Create a EndpointControlProfile resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[EndpointControlProfileArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a EndpointControlProfile resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param EndpointControlProfileArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(EndpointControlProfileArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 device_groups: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['EndpointControlProfileDeviceGroupArgs']]]]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 forticlient_android_settings: Optional[pulumi.Input[pulumi.InputType['EndpointControlProfileForticlientAndroidSettingsArgs']]] = None,
                 forticlient_ios_settings: Optional[pulumi.Input[pulumi.InputType['EndpointControlProfileForticlientIosSettingsArgs']]] = None,
                 forticlient_winmac_settings: Optional[pulumi.Input[pulumi.InputType['EndpointControlProfileForticlientWinmacSettingsArgs']]] = None,
                 get_all_tables: Optional[pulumi.Input[str]] = None,
                 on_net_addrs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['EndpointControlProfileOnNetAddrArgs']]]]] = None,
                 profile_name: Optional[pulumi.Input[str]] = None,
                 replacemsg_override_group: Optional[pulumi.Input[str]] = None,
                 src_addrs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['EndpointControlProfileSrcAddrArgs']]]]] = None,
                 user_groups: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['EndpointControlProfileUserGroupArgs']]]]] = None,
                 users: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['EndpointControlProfileUserArgs']]]]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = EndpointControlProfileArgs.__new__(EndpointControlProfileArgs)

            __props__.__dict__["description"] = description
            __props__.__dict__["device_groups"] = device_groups
            __props__.__dict__["dynamic_sort_subtable"] = dynamic_sort_subtable
            __props__.__dict__["forticlient_android_settings"] = forticlient_android_settings
            __props__.__dict__["forticlient_ios_settings"] = forticlient_ios_settings
            __props__.__dict__["forticlient_winmac_settings"] = forticlient_winmac_settings
            __props__.__dict__["get_all_tables"] = get_all_tables
            __props__.__dict__["on_net_addrs"] = on_net_addrs
            __props__.__dict__["profile_name"] = profile_name
            __props__.__dict__["replacemsg_override_group"] = replacemsg_override_group
            __props__.__dict__["src_addrs"] = src_addrs
            __props__.__dict__["user_groups"] = user_groups
            __props__.__dict__["users"] = users
            __props__.__dict__["vdomparam"] = vdomparam
        super(EndpointControlProfile, __self__).__init__(
            'fortios:index/endpointControlProfile:EndpointControlProfile',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            description: Optional[pulumi.Input[str]] = None,
            device_groups: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['EndpointControlProfileDeviceGroupArgs']]]]] = None,
            dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
            forticlient_android_settings: Optional[pulumi.Input[pulumi.InputType['EndpointControlProfileForticlientAndroidSettingsArgs']]] = None,
            forticlient_ios_settings: Optional[pulumi.Input[pulumi.InputType['EndpointControlProfileForticlientIosSettingsArgs']]] = None,
            forticlient_winmac_settings: Optional[pulumi.Input[pulumi.InputType['EndpointControlProfileForticlientWinmacSettingsArgs']]] = None,
            get_all_tables: Optional[pulumi.Input[str]] = None,
            on_net_addrs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['EndpointControlProfileOnNetAddrArgs']]]]] = None,
            profile_name: Optional[pulumi.Input[str]] = None,
            replacemsg_override_group: Optional[pulumi.Input[str]] = None,
            src_addrs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['EndpointControlProfileSrcAddrArgs']]]]] = None,
            user_groups: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['EndpointControlProfileUserGroupArgs']]]]] = None,
            users: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['EndpointControlProfileUserArgs']]]]] = None,
            vdomparam: Optional[pulumi.Input[str]] = None) -> 'EndpointControlProfile':
        """
        Get an existing EndpointControlProfile resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _EndpointControlProfileState.__new__(_EndpointControlProfileState)

        __props__.__dict__["description"] = description
        __props__.__dict__["device_groups"] = device_groups
        __props__.__dict__["dynamic_sort_subtable"] = dynamic_sort_subtable
        __props__.__dict__["forticlient_android_settings"] = forticlient_android_settings
        __props__.__dict__["forticlient_ios_settings"] = forticlient_ios_settings
        __props__.__dict__["forticlient_winmac_settings"] = forticlient_winmac_settings
        __props__.__dict__["get_all_tables"] = get_all_tables
        __props__.__dict__["on_net_addrs"] = on_net_addrs
        __props__.__dict__["profile_name"] = profile_name
        __props__.__dict__["replacemsg_override_group"] = replacemsg_override_group
        __props__.__dict__["src_addrs"] = src_addrs
        __props__.__dict__["user_groups"] = user_groups
        __props__.__dict__["users"] = users
        __props__.__dict__["vdomparam"] = vdomparam
        return EndpointControlProfile(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="deviceGroups")
    def device_groups(self) -> pulumi.Output[Optional[Sequence['outputs.EndpointControlProfileDeviceGroup']]]:
        return pulumi.get(self, "device_groups")

    @property
    @pulumi.getter(name="dynamicSortSubtable")
    def dynamic_sort_subtable(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "dynamic_sort_subtable")

    @property
    @pulumi.getter(name="forticlientAndroidSettings")
    def forticlient_android_settings(self) -> pulumi.Output['outputs.EndpointControlProfileForticlientAndroidSettings']:
        return pulumi.get(self, "forticlient_android_settings")

    @property
    @pulumi.getter(name="forticlientIosSettings")
    def forticlient_ios_settings(self) -> pulumi.Output['outputs.EndpointControlProfileForticlientIosSettings']:
        return pulumi.get(self, "forticlient_ios_settings")

    @property
    @pulumi.getter(name="forticlientWinmacSettings")
    def forticlient_winmac_settings(self) -> pulumi.Output['outputs.EndpointControlProfileForticlientWinmacSettings']:
        return pulumi.get(self, "forticlient_winmac_settings")

    @property
    @pulumi.getter(name="getAllTables")
    def get_all_tables(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "get_all_tables")

    @property
    @pulumi.getter(name="onNetAddrs")
    def on_net_addrs(self) -> pulumi.Output[Optional[Sequence['outputs.EndpointControlProfileOnNetAddr']]]:
        return pulumi.get(self, "on_net_addrs")

    @property
    @pulumi.getter(name="profileName")
    def profile_name(self) -> pulumi.Output[str]:
        return pulumi.get(self, "profile_name")

    @property
    @pulumi.getter(name="replacemsgOverrideGroup")
    def replacemsg_override_group(self) -> pulumi.Output[str]:
        return pulumi.get(self, "replacemsg_override_group")

    @property
    @pulumi.getter(name="srcAddrs")
    def src_addrs(self) -> pulumi.Output[Optional[Sequence['outputs.EndpointControlProfileSrcAddr']]]:
        return pulumi.get(self, "src_addrs")

    @property
    @pulumi.getter(name="userGroups")
    def user_groups(self) -> pulumi.Output[Optional[Sequence['outputs.EndpointControlProfileUserGroup']]]:
        return pulumi.get(self, "user_groups")

    @property
    @pulumi.getter
    def users(self) -> pulumi.Output[Optional[Sequence['outputs.EndpointControlProfileUser']]]:
        return pulumi.get(self, "users")

    @property
    @pulumi.getter
    def vdomparam(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "vdomparam")

