# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['FirewallSecurityPolicyArgs', 'FirewallSecurityPolicy']

@pulumi.input_type
class FirewallSecurityPolicyArgs:
    def __init__(__self__, *,
                 action: Optional[pulumi.Input[str]] = None,
                 app_categories: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyAppCategoryArgs']]]] = None,
                 app_groups: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyAppGroupArgs']]]] = None,
                 application_list: Optional[pulumi.Input[str]] = None,
                 applications: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyApplicationArgs']]]] = None,
                 av_profile: Optional[pulumi.Input[str]] = None,
                 cifs_profile: Optional[pulumi.Input[str]] = None,
                 comments: Optional[pulumi.Input[str]] = None,
                 dlp_profile: Optional[pulumi.Input[str]] = None,
                 dlp_sensor: Optional[pulumi.Input[str]] = None,
                 dnsfilter_profile: Optional[pulumi.Input[str]] = None,
                 dstaddr4s: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyDstaddr4Args']]]] = None,
                 dstaddr6_negate: Optional[pulumi.Input[str]] = None,
                 dstaddr6s: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyDstaddr6Args']]]] = None,
                 dstaddr_negate: Optional[pulumi.Input[str]] = None,
                 dstaddrs: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyDstaddrArgs']]]] = None,
                 dstintfs: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyDstintfArgs']]]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 emailfilter_profile: Optional[pulumi.Input[str]] = None,
                 enforce_default_app_port: Optional[pulumi.Input[str]] = None,
                 file_filter_profile: Optional[pulumi.Input[str]] = None,
                 fsso_groups: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyFssoGroupArgs']]]] = None,
                 get_all_tables: Optional[pulumi.Input[str]] = None,
                 groups: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyGroupArgs']]]] = None,
                 icap_profile: Optional[pulumi.Input[str]] = None,
                 internet_service: Optional[pulumi.Input[str]] = None,
                 internet_service6: Optional[pulumi.Input[str]] = None,
                 internet_service6_custom_groups: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6CustomGroupArgs']]]] = None,
                 internet_service6_customs: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6CustomArgs']]]] = None,
                 internet_service6_groups: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6GroupArgs']]]] = None,
                 internet_service6_names: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6NameArgs']]]] = None,
                 internet_service6_negate: Optional[pulumi.Input[str]] = None,
                 internet_service6_src: Optional[pulumi.Input[str]] = None,
                 internet_service6_src_custom_groups: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6SrcCustomGroupArgs']]]] = None,
                 internet_service6_src_customs: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6SrcCustomArgs']]]] = None,
                 internet_service6_src_groups: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6SrcGroupArgs']]]] = None,
                 internet_service6_src_names: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6SrcNameArgs']]]] = None,
                 internet_service6_src_negate: Optional[pulumi.Input[str]] = None,
                 internet_service_custom_groups: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceCustomGroupArgs']]]] = None,
                 internet_service_customs: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceCustomArgs']]]] = None,
                 internet_service_groups: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceGroupArgs']]]] = None,
                 internet_service_ids: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceIdArgs']]]] = None,
                 internet_service_names: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceNameArgs']]]] = None,
                 internet_service_negate: Optional[pulumi.Input[str]] = None,
                 internet_service_src: Optional[pulumi.Input[str]] = None,
                 internet_service_src_custom_groups: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceSrcCustomGroupArgs']]]] = None,
                 internet_service_src_customs: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceSrcCustomArgs']]]] = None,
                 internet_service_src_groups: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceSrcGroupArgs']]]] = None,
                 internet_service_src_ids: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceSrcIdArgs']]]] = None,
                 internet_service_src_names: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceSrcNameArgs']]]] = None,
                 internet_service_src_negate: Optional[pulumi.Input[str]] = None,
                 ips_sensor: Optional[pulumi.Input[str]] = None,
                 ips_voip_filter: Optional[pulumi.Input[str]] = None,
                 learning_mode: Optional[pulumi.Input[str]] = None,
                 logtraffic: Optional[pulumi.Input[str]] = None,
                 logtraffic_start: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 nat46: Optional[pulumi.Input[str]] = None,
                 nat64: Optional[pulumi.Input[str]] = None,
                 policyid: Optional[pulumi.Input[int]] = None,
                 profile_group: Optional[pulumi.Input[str]] = None,
                 profile_protocol_options: Optional[pulumi.Input[str]] = None,
                 profile_type: Optional[pulumi.Input[str]] = None,
                 schedule: Optional[pulumi.Input[str]] = None,
                 sctp_filter_profile: Optional[pulumi.Input[str]] = None,
                 send_deny_packet: Optional[pulumi.Input[str]] = None,
                 service_negate: Optional[pulumi.Input[str]] = None,
                 services: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyServiceArgs']]]] = None,
                 srcaddr4s: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicySrcaddr4Args']]]] = None,
                 srcaddr6_negate: Optional[pulumi.Input[str]] = None,
                 srcaddr6s: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicySrcaddr6Args']]]] = None,
                 srcaddr_negate: Optional[pulumi.Input[str]] = None,
                 srcaddrs: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicySrcaddrArgs']]]] = None,
                 srcintfs: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicySrcintfArgs']]]] = None,
                 ssh_filter_profile: Optional[pulumi.Input[str]] = None,
                 ssl_ssh_profile: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 url_categories: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyUrlCategoryArgs']]]] = None,
                 url_category_unitary: Optional[pulumi.Input[str]] = None,
                 users: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyUserArgs']]]] = None,
                 uuid: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 videofilter_profile: Optional[pulumi.Input[str]] = None,
                 voip_profile: Optional[pulumi.Input[str]] = None,
                 webfilter_profile: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a FirewallSecurityPolicy resource.
        """
        if action is not None:
            pulumi.set(__self__, "action", action)
        if app_categories is not None:
            pulumi.set(__self__, "app_categories", app_categories)
        if app_groups is not None:
            pulumi.set(__self__, "app_groups", app_groups)
        if application_list is not None:
            pulumi.set(__self__, "application_list", application_list)
        if applications is not None:
            pulumi.set(__self__, "applications", applications)
        if av_profile is not None:
            pulumi.set(__self__, "av_profile", av_profile)
        if cifs_profile is not None:
            pulumi.set(__self__, "cifs_profile", cifs_profile)
        if comments is not None:
            pulumi.set(__self__, "comments", comments)
        if dlp_profile is not None:
            pulumi.set(__self__, "dlp_profile", dlp_profile)
        if dlp_sensor is not None:
            pulumi.set(__self__, "dlp_sensor", dlp_sensor)
        if dnsfilter_profile is not None:
            pulumi.set(__self__, "dnsfilter_profile", dnsfilter_profile)
        if dstaddr4s is not None:
            pulumi.set(__self__, "dstaddr4s", dstaddr4s)
        if dstaddr6_negate is not None:
            pulumi.set(__self__, "dstaddr6_negate", dstaddr6_negate)
        if dstaddr6s is not None:
            pulumi.set(__self__, "dstaddr6s", dstaddr6s)
        if dstaddr_negate is not None:
            pulumi.set(__self__, "dstaddr_negate", dstaddr_negate)
        if dstaddrs is not None:
            pulumi.set(__self__, "dstaddrs", dstaddrs)
        if dstintfs is not None:
            pulumi.set(__self__, "dstintfs", dstintfs)
        if dynamic_sort_subtable is not None:
            pulumi.set(__self__, "dynamic_sort_subtable", dynamic_sort_subtable)
        if emailfilter_profile is not None:
            pulumi.set(__self__, "emailfilter_profile", emailfilter_profile)
        if enforce_default_app_port is not None:
            pulumi.set(__self__, "enforce_default_app_port", enforce_default_app_port)
        if file_filter_profile is not None:
            pulumi.set(__self__, "file_filter_profile", file_filter_profile)
        if fsso_groups is not None:
            pulumi.set(__self__, "fsso_groups", fsso_groups)
        if get_all_tables is not None:
            pulumi.set(__self__, "get_all_tables", get_all_tables)
        if groups is not None:
            pulumi.set(__self__, "groups", groups)
        if icap_profile is not None:
            pulumi.set(__self__, "icap_profile", icap_profile)
        if internet_service is not None:
            pulumi.set(__self__, "internet_service", internet_service)
        if internet_service6 is not None:
            pulumi.set(__self__, "internet_service6", internet_service6)
        if internet_service6_custom_groups is not None:
            pulumi.set(__self__, "internet_service6_custom_groups", internet_service6_custom_groups)
        if internet_service6_customs is not None:
            pulumi.set(__self__, "internet_service6_customs", internet_service6_customs)
        if internet_service6_groups is not None:
            pulumi.set(__self__, "internet_service6_groups", internet_service6_groups)
        if internet_service6_names is not None:
            pulumi.set(__self__, "internet_service6_names", internet_service6_names)
        if internet_service6_negate is not None:
            pulumi.set(__self__, "internet_service6_negate", internet_service6_negate)
        if internet_service6_src is not None:
            pulumi.set(__self__, "internet_service6_src", internet_service6_src)
        if internet_service6_src_custom_groups is not None:
            pulumi.set(__self__, "internet_service6_src_custom_groups", internet_service6_src_custom_groups)
        if internet_service6_src_customs is not None:
            pulumi.set(__self__, "internet_service6_src_customs", internet_service6_src_customs)
        if internet_service6_src_groups is not None:
            pulumi.set(__self__, "internet_service6_src_groups", internet_service6_src_groups)
        if internet_service6_src_names is not None:
            pulumi.set(__self__, "internet_service6_src_names", internet_service6_src_names)
        if internet_service6_src_negate is not None:
            pulumi.set(__self__, "internet_service6_src_negate", internet_service6_src_negate)
        if internet_service_custom_groups is not None:
            pulumi.set(__self__, "internet_service_custom_groups", internet_service_custom_groups)
        if internet_service_customs is not None:
            pulumi.set(__self__, "internet_service_customs", internet_service_customs)
        if internet_service_groups is not None:
            pulumi.set(__self__, "internet_service_groups", internet_service_groups)
        if internet_service_ids is not None:
            pulumi.set(__self__, "internet_service_ids", internet_service_ids)
        if internet_service_names is not None:
            pulumi.set(__self__, "internet_service_names", internet_service_names)
        if internet_service_negate is not None:
            pulumi.set(__self__, "internet_service_negate", internet_service_negate)
        if internet_service_src is not None:
            pulumi.set(__self__, "internet_service_src", internet_service_src)
        if internet_service_src_custom_groups is not None:
            pulumi.set(__self__, "internet_service_src_custom_groups", internet_service_src_custom_groups)
        if internet_service_src_customs is not None:
            pulumi.set(__self__, "internet_service_src_customs", internet_service_src_customs)
        if internet_service_src_groups is not None:
            pulumi.set(__self__, "internet_service_src_groups", internet_service_src_groups)
        if internet_service_src_ids is not None:
            pulumi.set(__self__, "internet_service_src_ids", internet_service_src_ids)
        if internet_service_src_names is not None:
            pulumi.set(__self__, "internet_service_src_names", internet_service_src_names)
        if internet_service_src_negate is not None:
            pulumi.set(__self__, "internet_service_src_negate", internet_service_src_negate)
        if ips_sensor is not None:
            pulumi.set(__self__, "ips_sensor", ips_sensor)
        if ips_voip_filter is not None:
            pulumi.set(__self__, "ips_voip_filter", ips_voip_filter)
        if learning_mode is not None:
            pulumi.set(__self__, "learning_mode", learning_mode)
        if logtraffic is not None:
            pulumi.set(__self__, "logtraffic", logtraffic)
        if logtraffic_start is not None:
            pulumi.set(__self__, "logtraffic_start", logtraffic_start)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if nat46 is not None:
            pulumi.set(__self__, "nat46", nat46)
        if nat64 is not None:
            pulumi.set(__self__, "nat64", nat64)
        if policyid is not None:
            pulumi.set(__self__, "policyid", policyid)
        if profile_group is not None:
            pulumi.set(__self__, "profile_group", profile_group)
        if profile_protocol_options is not None:
            pulumi.set(__self__, "profile_protocol_options", profile_protocol_options)
        if profile_type is not None:
            pulumi.set(__self__, "profile_type", profile_type)
        if schedule is not None:
            pulumi.set(__self__, "schedule", schedule)
        if sctp_filter_profile is not None:
            pulumi.set(__self__, "sctp_filter_profile", sctp_filter_profile)
        if send_deny_packet is not None:
            pulumi.set(__self__, "send_deny_packet", send_deny_packet)
        if service_negate is not None:
            pulumi.set(__self__, "service_negate", service_negate)
        if services is not None:
            pulumi.set(__self__, "services", services)
        if srcaddr4s is not None:
            pulumi.set(__self__, "srcaddr4s", srcaddr4s)
        if srcaddr6_negate is not None:
            pulumi.set(__self__, "srcaddr6_negate", srcaddr6_negate)
        if srcaddr6s is not None:
            pulumi.set(__self__, "srcaddr6s", srcaddr6s)
        if srcaddr_negate is not None:
            pulumi.set(__self__, "srcaddr_negate", srcaddr_negate)
        if srcaddrs is not None:
            pulumi.set(__self__, "srcaddrs", srcaddrs)
        if srcintfs is not None:
            pulumi.set(__self__, "srcintfs", srcintfs)
        if ssh_filter_profile is not None:
            pulumi.set(__self__, "ssh_filter_profile", ssh_filter_profile)
        if ssl_ssh_profile is not None:
            pulumi.set(__self__, "ssl_ssh_profile", ssl_ssh_profile)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if url_categories is not None:
            pulumi.set(__self__, "url_categories", url_categories)
        if url_category_unitary is not None:
            pulumi.set(__self__, "url_category_unitary", url_category_unitary)
        if users is not None:
            pulumi.set(__self__, "users", users)
        if uuid is not None:
            pulumi.set(__self__, "uuid", uuid)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)
        if videofilter_profile is not None:
            pulumi.set(__self__, "videofilter_profile", videofilter_profile)
        if voip_profile is not None:
            pulumi.set(__self__, "voip_profile", voip_profile)
        if webfilter_profile is not None:
            pulumi.set(__self__, "webfilter_profile", webfilter_profile)

    @property
    @pulumi.getter
    def action(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "action")

    @action.setter
    def action(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "action", value)

    @property
    @pulumi.getter(name="appCategories")
    def app_categories(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyAppCategoryArgs']]]]:
        return pulumi.get(self, "app_categories")

    @app_categories.setter
    def app_categories(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyAppCategoryArgs']]]]):
        pulumi.set(self, "app_categories", value)

    @property
    @pulumi.getter(name="appGroups")
    def app_groups(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyAppGroupArgs']]]]:
        return pulumi.get(self, "app_groups")

    @app_groups.setter
    def app_groups(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyAppGroupArgs']]]]):
        pulumi.set(self, "app_groups", value)

    @property
    @pulumi.getter(name="applicationList")
    def application_list(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "application_list")

    @application_list.setter
    def application_list(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "application_list", value)

    @property
    @pulumi.getter
    def applications(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyApplicationArgs']]]]:
        return pulumi.get(self, "applications")

    @applications.setter
    def applications(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyApplicationArgs']]]]):
        pulumi.set(self, "applications", value)

    @property
    @pulumi.getter(name="avProfile")
    def av_profile(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "av_profile")

    @av_profile.setter
    def av_profile(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "av_profile", value)

    @property
    @pulumi.getter(name="cifsProfile")
    def cifs_profile(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "cifs_profile")

    @cifs_profile.setter
    def cifs_profile(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cifs_profile", value)

    @property
    @pulumi.getter
    def comments(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "comments")

    @comments.setter
    def comments(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "comments", value)

    @property
    @pulumi.getter(name="dlpProfile")
    def dlp_profile(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "dlp_profile")

    @dlp_profile.setter
    def dlp_profile(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dlp_profile", value)

    @property
    @pulumi.getter(name="dlpSensor")
    def dlp_sensor(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "dlp_sensor")

    @dlp_sensor.setter
    def dlp_sensor(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dlp_sensor", value)

    @property
    @pulumi.getter(name="dnsfilterProfile")
    def dnsfilter_profile(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "dnsfilter_profile")

    @dnsfilter_profile.setter
    def dnsfilter_profile(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dnsfilter_profile", value)

    @property
    @pulumi.getter
    def dstaddr4s(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyDstaddr4Args']]]]:
        return pulumi.get(self, "dstaddr4s")

    @dstaddr4s.setter
    def dstaddr4s(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyDstaddr4Args']]]]):
        pulumi.set(self, "dstaddr4s", value)

    @property
    @pulumi.getter(name="dstaddr6Negate")
    def dstaddr6_negate(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "dstaddr6_negate")

    @dstaddr6_negate.setter
    def dstaddr6_negate(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dstaddr6_negate", value)

    @property
    @pulumi.getter
    def dstaddr6s(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyDstaddr6Args']]]]:
        return pulumi.get(self, "dstaddr6s")

    @dstaddr6s.setter
    def dstaddr6s(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyDstaddr6Args']]]]):
        pulumi.set(self, "dstaddr6s", value)

    @property
    @pulumi.getter(name="dstaddrNegate")
    def dstaddr_negate(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "dstaddr_negate")

    @dstaddr_negate.setter
    def dstaddr_negate(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dstaddr_negate", value)

    @property
    @pulumi.getter
    def dstaddrs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyDstaddrArgs']]]]:
        return pulumi.get(self, "dstaddrs")

    @dstaddrs.setter
    def dstaddrs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyDstaddrArgs']]]]):
        pulumi.set(self, "dstaddrs", value)

    @property
    @pulumi.getter
    def dstintfs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyDstintfArgs']]]]:
        return pulumi.get(self, "dstintfs")

    @dstintfs.setter
    def dstintfs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyDstintfArgs']]]]):
        pulumi.set(self, "dstintfs", value)

    @property
    @pulumi.getter(name="dynamicSortSubtable")
    def dynamic_sort_subtable(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "dynamic_sort_subtable")

    @dynamic_sort_subtable.setter
    def dynamic_sort_subtable(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dynamic_sort_subtable", value)

    @property
    @pulumi.getter(name="emailfilterProfile")
    def emailfilter_profile(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "emailfilter_profile")

    @emailfilter_profile.setter
    def emailfilter_profile(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "emailfilter_profile", value)

    @property
    @pulumi.getter(name="enforceDefaultAppPort")
    def enforce_default_app_port(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "enforce_default_app_port")

    @enforce_default_app_port.setter
    def enforce_default_app_port(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "enforce_default_app_port", value)

    @property
    @pulumi.getter(name="fileFilterProfile")
    def file_filter_profile(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "file_filter_profile")

    @file_filter_profile.setter
    def file_filter_profile(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "file_filter_profile", value)

    @property
    @pulumi.getter(name="fssoGroups")
    def fsso_groups(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyFssoGroupArgs']]]]:
        return pulumi.get(self, "fsso_groups")

    @fsso_groups.setter
    def fsso_groups(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyFssoGroupArgs']]]]):
        pulumi.set(self, "fsso_groups", value)

    @property
    @pulumi.getter(name="getAllTables")
    def get_all_tables(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "get_all_tables")

    @get_all_tables.setter
    def get_all_tables(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "get_all_tables", value)

    @property
    @pulumi.getter
    def groups(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyGroupArgs']]]]:
        return pulumi.get(self, "groups")

    @groups.setter
    def groups(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyGroupArgs']]]]):
        pulumi.set(self, "groups", value)

    @property
    @pulumi.getter(name="icapProfile")
    def icap_profile(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "icap_profile")

    @icap_profile.setter
    def icap_profile(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "icap_profile", value)

    @property
    @pulumi.getter(name="internetService")
    def internet_service(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "internet_service")

    @internet_service.setter
    def internet_service(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "internet_service", value)

    @property
    @pulumi.getter(name="internetService6")
    def internet_service6(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "internet_service6")

    @internet_service6.setter
    def internet_service6(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "internet_service6", value)

    @property
    @pulumi.getter(name="internetService6CustomGroups")
    def internet_service6_custom_groups(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6CustomGroupArgs']]]]:
        return pulumi.get(self, "internet_service6_custom_groups")

    @internet_service6_custom_groups.setter
    def internet_service6_custom_groups(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6CustomGroupArgs']]]]):
        pulumi.set(self, "internet_service6_custom_groups", value)

    @property
    @pulumi.getter(name="internetService6Customs")
    def internet_service6_customs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6CustomArgs']]]]:
        return pulumi.get(self, "internet_service6_customs")

    @internet_service6_customs.setter
    def internet_service6_customs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6CustomArgs']]]]):
        pulumi.set(self, "internet_service6_customs", value)

    @property
    @pulumi.getter(name="internetService6Groups")
    def internet_service6_groups(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6GroupArgs']]]]:
        return pulumi.get(self, "internet_service6_groups")

    @internet_service6_groups.setter
    def internet_service6_groups(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6GroupArgs']]]]):
        pulumi.set(self, "internet_service6_groups", value)

    @property
    @pulumi.getter(name="internetService6Names")
    def internet_service6_names(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6NameArgs']]]]:
        return pulumi.get(self, "internet_service6_names")

    @internet_service6_names.setter
    def internet_service6_names(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6NameArgs']]]]):
        pulumi.set(self, "internet_service6_names", value)

    @property
    @pulumi.getter(name="internetService6Negate")
    def internet_service6_negate(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "internet_service6_negate")

    @internet_service6_negate.setter
    def internet_service6_negate(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "internet_service6_negate", value)

    @property
    @pulumi.getter(name="internetService6Src")
    def internet_service6_src(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "internet_service6_src")

    @internet_service6_src.setter
    def internet_service6_src(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "internet_service6_src", value)

    @property
    @pulumi.getter(name="internetService6SrcCustomGroups")
    def internet_service6_src_custom_groups(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6SrcCustomGroupArgs']]]]:
        return pulumi.get(self, "internet_service6_src_custom_groups")

    @internet_service6_src_custom_groups.setter
    def internet_service6_src_custom_groups(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6SrcCustomGroupArgs']]]]):
        pulumi.set(self, "internet_service6_src_custom_groups", value)

    @property
    @pulumi.getter(name="internetService6SrcCustoms")
    def internet_service6_src_customs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6SrcCustomArgs']]]]:
        return pulumi.get(self, "internet_service6_src_customs")

    @internet_service6_src_customs.setter
    def internet_service6_src_customs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6SrcCustomArgs']]]]):
        pulumi.set(self, "internet_service6_src_customs", value)

    @property
    @pulumi.getter(name="internetService6SrcGroups")
    def internet_service6_src_groups(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6SrcGroupArgs']]]]:
        return pulumi.get(self, "internet_service6_src_groups")

    @internet_service6_src_groups.setter
    def internet_service6_src_groups(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6SrcGroupArgs']]]]):
        pulumi.set(self, "internet_service6_src_groups", value)

    @property
    @pulumi.getter(name="internetService6SrcNames")
    def internet_service6_src_names(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6SrcNameArgs']]]]:
        return pulumi.get(self, "internet_service6_src_names")

    @internet_service6_src_names.setter
    def internet_service6_src_names(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6SrcNameArgs']]]]):
        pulumi.set(self, "internet_service6_src_names", value)

    @property
    @pulumi.getter(name="internetService6SrcNegate")
    def internet_service6_src_negate(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "internet_service6_src_negate")

    @internet_service6_src_negate.setter
    def internet_service6_src_negate(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "internet_service6_src_negate", value)

    @property
    @pulumi.getter(name="internetServiceCustomGroups")
    def internet_service_custom_groups(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceCustomGroupArgs']]]]:
        return pulumi.get(self, "internet_service_custom_groups")

    @internet_service_custom_groups.setter
    def internet_service_custom_groups(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceCustomGroupArgs']]]]):
        pulumi.set(self, "internet_service_custom_groups", value)

    @property
    @pulumi.getter(name="internetServiceCustoms")
    def internet_service_customs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceCustomArgs']]]]:
        return pulumi.get(self, "internet_service_customs")

    @internet_service_customs.setter
    def internet_service_customs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceCustomArgs']]]]):
        pulumi.set(self, "internet_service_customs", value)

    @property
    @pulumi.getter(name="internetServiceGroups")
    def internet_service_groups(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceGroupArgs']]]]:
        return pulumi.get(self, "internet_service_groups")

    @internet_service_groups.setter
    def internet_service_groups(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceGroupArgs']]]]):
        pulumi.set(self, "internet_service_groups", value)

    @property
    @pulumi.getter(name="internetServiceIds")
    def internet_service_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceIdArgs']]]]:
        return pulumi.get(self, "internet_service_ids")

    @internet_service_ids.setter
    def internet_service_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceIdArgs']]]]):
        pulumi.set(self, "internet_service_ids", value)

    @property
    @pulumi.getter(name="internetServiceNames")
    def internet_service_names(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceNameArgs']]]]:
        return pulumi.get(self, "internet_service_names")

    @internet_service_names.setter
    def internet_service_names(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceNameArgs']]]]):
        pulumi.set(self, "internet_service_names", value)

    @property
    @pulumi.getter(name="internetServiceNegate")
    def internet_service_negate(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "internet_service_negate")

    @internet_service_negate.setter
    def internet_service_negate(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "internet_service_negate", value)

    @property
    @pulumi.getter(name="internetServiceSrc")
    def internet_service_src(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "internet_service_src")

    @internet_service_src.setter
    def internet_service_src(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "internet_service_src", value)

    @property
    @pulumi.getter(name="internetServiceSrcCustomGroups")
    def internet_service_src_custom_groups(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceSrcCustomGroupArgs']]]]:
        return pulumi.get(self, "internet_service_src_custom_groups")

    @internet_service_src_custom_groups.setter
    def internet_service_src_custom_groups(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceSrcCustomGroupArgs']]]]):
        pulumi.set(self, "internet_service_src_custom_groups", value)

    @property
    @pulumi.getter(name="internetServiceSrcCustoms")
    def internet_service_src_customs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceSrcCustomArgs']]]]:
        return pulumi.get(self, "internet_service_src_customs")

    @internet_service_src_customs.setter
    def internet_service_src_customs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceSrcCustomArgs']]]]):
        pulumi.set(self, "internet_service_src_customs", value)

    @property
    @pulumi.getter(name="internetServiceSrcGroups")
    def internet_service_src_groups(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceSrcGroupArgs']]]]:
        return pulumi.get(self, "internet_service_src_groups")

    @internet_service_src_groups.setter
    def internet_service_src_groups(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceSrcGroupArgs']]]]):
        pulumi.set(self, "internet_service_src_groups", value)

    @property
    @pulumi.getter(name="internetServiceSrcIds")
    def internet_service_src_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceSrcIdArgs']]]]:
        return pulumi.get(self, "internet_service_src_ids")

    @internet_service_src_ids.setter
    def internet_service_src_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceSrcIdArgs']]]]):
        pulumi.set(self, "internet_service_src_ids", value)

    @property
    @pulumi.getter(name="internetServiceSrcNames")
    def internet_service_src_names(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceSrcNameArgs']]]]:
        return pulumi.get(self, "internet_service_src_names")

    @internet_service_src_names.setter
    def internet_service_src_names(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceSrcNameArgs']]]]):
        pulumi.set(self, "internet_service_src_names", value)

    @property
    @pulumi.getter(name="internetServiceSrcNegate")
    def internet_service_src_negate(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "internet_service_src_negate")

    @internet_service_src_negate.setter
    def internet_service_src_negate(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "internet_service_src_negate", value)

    @property
    @pulumi.getter(name="ipsSensor")
    def ips_sensor(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "ips_sensor")

    @ips_sensor.setter
    def ips_sensor(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ips_sensor", value)

    @property
    @pulumi.getter(name="ipsVoipFilter")
    def ips_voip_filter(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "ips_voip_filter")

    @ips_voip_filter.setter
    def ips_voip_filter(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ips_voip_filter", value)

    @property
    @pulumi.getter(name="learningMode")
    def learning_mode(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "learning_mode")

    @learning_mode.setter
    def learning_mode(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "learning_mode", value)

    @property
    @pulumi.getter
    def logtraffic(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "logtraffic")

    @logtraffic.setter
    def logtraffic(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "logtraffic", value)

    @property
    @pulumi.getter(name="logtrafficStart")
    def logtraffic_start(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "logtraffic_start")

    @logtraffic_start.setter
    def logtraffic_start(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "logtraffic_start", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def nat46(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "nat46")

    @nat46.setter
    def nat46(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "nat46", value)

    @property
    @pulumi.getter
    def nat64(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "nat64")

    @nat64.setter
    def nat64(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "nat64", value)

    @property
    @pulumi.getter
    def policyid(self) -> Optional[pulumi.Input[int]]:
        return pulumi.get(self, "policyid")

    @policyid.setter
    def policyid(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "policyid", value)

    @property
    @pulumi.getter(name="profileGroup")
    def profile_group(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "profile_group")

    @profile_group.setter
    def profile_group(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "profile_group", value)

    @property
    @pulumi.getter(name="profileProtocolOptions")
    def profile_protocol_options(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "profile_protocol_options")

    @profile_protocol_options.setter
    def profile_protocol_options(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "profile_protocol_options", value)

    @property
    @pulumi.getter(name="profileType")
    def profile_type(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "profile_type")

    @profile_type.setter
    def profile_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "profile_type", value)

    @property
    @pulumi.getter
    def schedule(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "schedule")

    @schedule.setter
    def schedule(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "schedule", value)

    @property
    @pulumi.getter(name="sctpFilterProfile")
    def sctp_filter_profile(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "sctp_filter_profile")

    @sctp_filter_profile.setter
    def sctp_filter_profile(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sctp_filter_profile", value)

    @property
    @pulumi.getter(name="sendDenyPacket")
    def send_deny_packet(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "send_deny_packet")

    @send_deny_packet.setter
    def send_deny_packet(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "send_deny_packet", value)

    @property
    @pulumi.getter(name="serviceNegate")
    def service_negate(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "service_negate")

    @service_negate.setter
    def service_negate(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "service_negate", value)

    @property
    @pulumi.getter
    def services(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyServiceArgs']]]]:
        return pulumi.get(self, "services")

    @services.setter
    def services(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyServiceArgs']]]]):
        pulumi.set(self, "services", value)

    @property
    @pulumi.getter
    def srcaddr4s(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicySrcaddr4Args']]]]:
        return pulumi.get(self, "srcaddr4s")

    @srcaddr4s.setter
    def srcaddr4s(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicySrcaddr4Args']]]]):
        pulumi.set(self, "srcaddr4s", value)

    @property
    @pulumi.getter(name="srcaddr6Negate")
    def srcaddr6_negate(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "srcaddr6_negate")

    @srcaddr6_negate.setter
    def srcaddr6_negate(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "srcaddr6_negate", value)

    @property
    @pulumi.getter
    def srcaddr6s(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicySrcaddr6Args']]]]:
        return pulumi.get(self, "srcaddr6s")

    @srcaddr6s.setter
    def srcaddr6s(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicySrcaddr6Args']]]]):
        pulumi.set(self, "srcaddr6s", value)

    @property
    @pulumi.getter(name="srcaddrNegate")
    def srcaddr_negate(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "srcaddr_negate")

    @srcaddr_negate.setter
    def srcaddr_negate(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "srcaddr_negate", value)

    @property
    @pulumi.getter
    def srcaddrs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicySrcaddrArgs']]]]:
        return pulumi.get(self, "srcaddrs")

    @srcaddrs.setter
    def srcaddrs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicySrcaddrArgs']]]]):
        pulumi.set(self, "srcaddrs", value)

    @property
    @pulumi.getter
    def srcintfs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicySrcintfArgs']]]]:
        return pulumi.get(self, "srcintfs")

    @srcintfs.setter
    def srcintfs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicySrcintfArgs']]]]):
        pulumi.set(self, "srcintfs", value)

    @property
    @pulumi.getter(name="sshFilterProfile")
    def ssh_filter_profile(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "ssh_filter_profile")

    @ssh_filter_profile.setter
    def ssh_filter_profile(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ssh_filter_profile", value)

    @property
    @pulumi.getter(name="sslSshProfile")
    def ssl_ssh_profile(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "ssl_ssh_profile")

    @ssl_ssh_profile.setter
    def ssl_ssh_profile(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ssl_ssh_profile", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter(name="urlCategories")
    def url_categories(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyUrlCategoryArgs']]]]:
        return pulumi.get(self, "url_categories")

    @url_categories.setter
    def url_categories(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyUrlCategoryArgs']]]]):
        pulumi.set(self, "url_categories", value)

    @property
    @pulumi.getter(name="urlCategoryUnitary")
    def url_category_unitary(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "url_category_unitary")

    @url_category_unitary.setter
    def url_category_unitary(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "url_category_unitary", value)

    @property
    @pulumi.getter
    def users(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyUserArgs']]]]:
        return pulumi.get(self, "users")

    @users.setter
    def users(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyUserArgs']]]]):
        pulumi.set(self, "users", value)

    @property
    @pulumi.getter
    def uuid(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "uuid")

    @uuid.setter
    def uuid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "uuid", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)

    @property
    @pulumi.getter(name="videofilterProfile")
    def videofilter_profile(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "videofilter_profile")

    @videofilter_profile.setter
    def videofilter_profile(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "videofilter_profile", value)

    @property
    @pulumi.getter(name="voipProfile")
    def voip_profile(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "voip_profile")

    @voip_profile.setter
    def voip_profile(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "voip_profile", value)

    @property
    @pulumi.getter(name="webfilterProfile")
    def webfilter_profile(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "webfilter_profile")

    @webfilter_profile.setter
    def webfilter_profile(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "webfilter_profile", value)


@pulumi.input_type
class _FirewallSecurityPolicyState:
    def __init__(__self__, *,
                 action: Optional[pulumi.Input[str]] = None,
                 app_categories: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyAppCategoryArgs']]]] = None,
                 app_groups: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyAppGroupArgs']]]] = None,
                 application_list: Optional[pulumi.Input[str]] = None,
                 applications: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyApplicationArgs']]]] = None,
                 av_profile: Optional[pulumi.Input[str]] = None,
                 cifs_profile: Optional[pulumi.Input[str]] = None,
                 comments: Optional[pulumi.Input[str]] = None,
                 dlp_profile: Optional[pulumi.Input[str]] = None,
                 dlp_sensor: Optional[pulumi.Input[str]] = None,
                 dnsfilter_profile: Optional[pulumi.Input[str]] = None,
                 dstaddr4s: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyDstaddr4Args']]]] = None,
                 dstaddr6_negate: Optional[pulumi.Input[str]] = None,
                 dstaddr6s: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyDstaddr6Args']]]] = None,
                 dstaddr_negate: Optional[pulumi.Input[str]] = None,
                 dstaddrs: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyDstaddrArgs']]]] = None,
                 dstintfs: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyDstintfArgs']]]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 emailfilter_profile: Optional[pulumi.Input[str]] = None,
                 enforce_default_app_port: Optional[pulumi.Input[str]] = None,
                 file_filter_profile: Optional[pulumi.Input[str]] = None,
                 fsso_groups: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyFssoGroupArgs']]]] = None,
                 get_all_tables: Optional[pulumi.Input[str]] = None,
                 groups: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyGroupArgs']]]] = None,
                 icap_profile: Optional[pulumi.Input[str]] = None,
                 internet_service: Optional[pulumi.Input[str]] = None,
                 internet_service6: Optional[pulumi.Input[str]] = None,
                 internet_service6_custom_groups: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6CustomGroupArgs']]]] = None,
                 internet_service6_customs: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6CustomArgs']]]] = None,
                 internet_service6_groups: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6GroupArgs']]]] = None,
                 internet_service6_names: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6NameArgs']]]] = None,
                 internet_service6_negate: Optional[pulumi.Input[str]] = None,
                 internet_service6_src: Optional[pulumi.Input[str]] = None,
                 internet_service6_src_custom_groups: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6SrcCustomGroupArgs']]]] = None,
                 internet_service6_src_customs: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6SrcCustomArgs']]]] = None,
                 internet_service6_src_groups: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6SrcGroupArgs']]]] = None,
                 internet_service6_src_names: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6SrcNameArgs']]]] = None,
                 internet_service6_src_negate: Optional[pulumi.Input[str]] = None,
                 internet_service_custom_groups: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceCustomGroupArgs']]]] = None,
                 internet_service_customs: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceCustomArgs']]]] = None,
                 internet_service_groups: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceGroupArgs']]]] = None,
                 internet_service_ids: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceIdArgs']]]] = None,
                 internet_service_names: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceNameArgs']]]] = None,
                 internet_service_negate: Optional[pulumi.Input[str]] = None,
                 internet_service_src: Optional[pulumi.Input[str]] = None,
                 internet_service_src_custom_groups: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceSrcCustomGroupArgs']]]] = None,
                 internet_service_src_customs: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceSrcCustomArgs']]]] = None,
                 internet_service_src_groups: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceSrcGroupArgs']]]] = None,
                 internet_service_src_ids: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceSrcIdArgs']]]] = None,
                 internet_service_src_names: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceSrcNameArgs']]]] = None,
                 internet_service_src_negate: Optional[pulumi.Input[str]] = None,
                 ips_sensor: Optional[pulumi.Input[str]] = None,
                 ips_voip_filter: Optional[pulumi.Input[str]] = None,
                 learning_mode: Optional[pulumi.Input[str]] = None,
                 logtraffic: Optional[pulumi.Input[str]] = None,
                 logtraffic_start: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 nat46: Optional[pulumi.Input[str]] = None,
                 nat64: Optional[pulumi.Input[str]] = None,
                 policyid: Optional[pulumi.Input[int]] = None,
                 profile_group: Optional[pulumi.Input[str]] = None,
                 profile_protocol_options: Optional[pulumi.Input[str]] = None,
                 profile_type: Optional[pulumi.Input[str]] = None,
                 schedule: Optional[pulumi.Input[str]] = None,
                 sctp_filter_profile: Optional[pulumi.Input[str]] = None,
                 send_deny_packet: Optional[pulumi.Input[str]] = None,
                 service_negate: Optional[pulumi.Input[str]] = None,
                 services: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyServiceArgs']]]] = None,
                 srcaddr4s: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicySrcaddr4Args']]]] = None,
                 srcaddr6_negate: Optional[pulumi.Input[str]] = None,
                 srcaddr6s: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicySrcaddr6Args']]]] = None,
                 srcaddr_negate: Optional[pulumi.Input[str]] = None,
                 srcaddrs: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicySrcaddrArgs']]]] = None,
                 srcintfs: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicySrcintfArgs']]]] = None,
                 ssh_filter_profile: Optional[pulumi.Input[str]] = None,
                 ssl_ssh_profile: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 url_categories: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyUrlCategoryArgs']]]] = None,
                 url_category_unitary: Optional[pulumi.Input[str]] = None,
                 users: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyUserArgs']]]] = None,
                 uuid: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 videofilter_profile: Optional[pulumi.Input[str]] = None,
                 voip_profile: Optional[pulumi.Input[str]] = None,
                 webfilter_profile: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering FirewallSecurityPolicy resources.
        """
        if action is not None:
            pulumi.set(__self__, "action", action)
        if app_categories is not None:
            pulumi.set(__self__, "app_categories", app_categories)
        if app_groups is not None:
            pulumi.set(__self__, "app_groups", app_groups)
        if application_list is not None:
            pulumi.set(__self__, "application_list", application_list)
        if applications is not None:
            pulumi.set(__self__, "applications", applications)
        if av_profile is not None:
            pulumi.set(__self__, "av_profile", av_profile)
        if cifs_profile is not None:
            pulumi.set(__self__, "cifs_profile", cifs_profile)
        if comments is not None:
            pulumi.set(__self__, "comments", comments)
        if dlp_profile is not None:
            pulumi.set(__self__, "dlp_profile", dlp_profile)
        if dlp_sensor is not None:
            pulumi.set(__self__, "dlp_sensor", dlp_sensor)
        if dnsfilter_profile is not None:
            pulumi.set(__self__, "dnsfilter_profile", dnsfilter_profile)
        if dstaddr4s is not None:
            pulumi.set(__self__, "dstaddr4s", dstaddr4s)
        if dstaddr6_negate is not None:
            pulumi.set(__self__, "dstaddr6_negate", dstaddr6_negate)
        if dstaddr6s is not None:
            pulumi.set(__self__, "dstaddr6s", dstaddr6s)
        if dstaddr_negate is not None:
            pulumi.set(__self__, "dstaddr_negate", dstaddr_negate)
        if dstaddrs is not None:
            pulumi.set(__self__, "dstaddrs", dstaddrs)
        if dstintfs is not None:
            pulumi.set(__self__, "dstintfs", dstintfs)
        if dynamic_sort_subtable is not None:
            pulumi.set(__self__, "dynamic_sort_subtable", dynamic_sort_subtable)
        if emailfilter_profile is not None:
            pulumi.set(__self__, "emailfilter_profile", emailfilter_profile)
        if enforce_default_app_port is not None:
            pulumi.set(__self__, "enforce_default_app_port", enforce_default_app_port)
        if file_filter_profile is not None:
            pulumi.set(__self__, "file_filter_profile", file_filter_profile)
        if fsso_groups is not None:
            pulumi.set(__self__, "fsso_groups", fsso_groups)
        if get_all_tables is not None:
            pulumi.set(__self__, "get_all_tables", get_all_tables)
        if groups is not None:
            pulumi.set(__self__, "groups", groups)
        if icap_profile is not None:
            pulumi.set(__self__, "icap_profile", icap_profile)
        if internet_service is not None:
            pulumi.set(__self__, "internet_service", internet_service)
        if internet_service6 is not None:
            pulumi.set(__self__, "internet_service6", internet_service6)
        if internet_service6_custom_groups is not None:
            pulumi.set(__self__, "internet_service6_custom_groups", internet_service6_custom_groups)
        if internet_service6_customs is not None:
            pulumi.set(__self__, "internet_service6_customs", internet_service6_customs)
        if internet_service6_groups is not None:
            pulumi.set(__self__, "internet_service6_groups", internet_service6_groups)
        if internet_service6_names is not None:
            pulumi.set(__self__, "internet_service6_names", internet_service6_names)
        if internet_service6_negate is not None:
            pulumi.set(__self__, "internet_service6_negate", internet_service6_negate)
        if internet_service6_src is not None:
            pulumi.set(__self__, "internet_service6_src", internet_service6_src)
        if internet_service6_src_custom_groups is not None:
            pulumi.set(__self__, "internet_service6_src_custom_groups", internet_service6_src_custom_groups)
        if internet_service6_src_customs is not None:
            pulumi.set(__self__, "internet_service6_src_customs", internet_service6_src_customs)
        if internet_service6_src_groups is not None:
            pulumi.set(__self__, "internet_service6_src_groups", internet_service6_src_groups)
        if internet_service6_src_names is not None:
            pulumi.set(__self__, "internet_service6_src_names", internet_service6_src_names)
        if internet_service6_src_negate is not None:
            pulumi.set(__self__, "internet_service6_src_negate", internet_service6_src_negate)
        if internet_service_custom_groups is not None:
            pulumi.set(__self__, "internet_service_custom_groups", internet_service_custom_groups)
        if internet_service_customs is not None:
            pulumi.set(__self__, "internet_service_customs", internet_service_customs)
        if internet_service_groups is not None:
            pulumi.set(__self__, "internet_service_groups", internet_service_groups)
        if internet_service_ids is not None:
            pulumi.set(__self__, "internet_service_ids", internet_service_ids)
        if internet_service_names is not None:
            pulumi.set(__self__, "internet_service_names", internet_service_names)
        if internet_service_negate is not None:
            pulumi.set(__self__, "internet_service_negate", internet_service_negate)
        if internet_service_src is not None:
            pulumi.set(__self__, "internet_service_src", internet_service_src)
        if internet_service_src_custom_groups is not None:
            pulumi.set(__self__, "internet_service_src_custom_groups", internet_service_src_custom_groups)
        if internet_service_src_customs is not None:
            pulumi.set(__self__, "internet_service_src_customs", internet_service_src_customs)
        if internet_service_src_groups is not None:
            pulumi.set(__self__, "internet_service_src_groups", internet_service_src_groups)
        if internet_service_src_ids is not None:
            pulumi.set(__self__, "internet_service_src_ids", internet_service_src_ids)
        if internet_service_src_names is not None:
            pulumi.set(__self__, "internet_service_src_names", internet_service_src_names)
        if internet_service_src_negate is not None:
            pulumi.set(__self__, "internet_service_src_negate", internet_service_src_negate)
        if ips_sensor is not None:
            pulumi.set(__self__, "ips_sensor", ips_sensor)
        if ips_voip_filter is not None:
            pulumi.set(__self__, "ips_voip_filter", ips_voip_filter)
        if learning_mode is not None:
            pulumi.set(__self__, "learning_mode", learning_mode)
        if logtraffic is not None:
            pulumi.set(__self__, "logtraffic", logtraffic)
        if logtraffic_start is not None:
            pulumi.set(__self__, "logtraffic_start", logtraffic_start)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if nat46 is not None:
            pulumi.set(__self__, "nat46", nat46)
        if nat64 is not None:
            pulumi.set(__self__, "nat64", nat64)
        if policyid is not None:
            pulumi.set(__self__, "policyid", policyid)
        if profile_group is not None:
            pulumi.set(__self__, "profile_group", profile_group)
        if profile_protocol_options is not None:
            pulumi.set(__self__, "profile_protocol_options", profile_protocol_options)
        if profile_type is not None:
            pulumi.set(__self__, "profile_type", profile_type)
        if schedule is not None:
            pulumi.set(__self__, "schedule", schedule)
        if sctp_filter_profile is not None:
            pulumi.set(__self__, "sctp_filter_profile", sctp_filter_profile)
        if send_deny_packet is not None:
            pulumi.set(__self__, "send_deny_packet", send_deny_packet)
        if service_negate is not None:
            pulumi.set(__self__, "service_negate", service_negate)
        if services is not None:
            pulumi.set(__self__, "services", services)
        if srcaddr4s is not None:
            pulumi.set(__self__, "srcaddr4s", srcaddr4s)
        if srcaddr6_negate is not None:
            pulumi.set(__self__, "srcaddr6_negate", srcaddr6_negate)
        if srcaddr6s is not None:
            pulumi.set(__self__, "srcaddr6s", srcaddr6s)
        if srcaddr_negate is not None:
            pulumi.set(__self__, "srcaddr_negate", srcaddr_negate)
        if srcaddrs is not None:
            pulumi.set(__self__, "srcaddrs", srcaddrs)
        if srcintfs is not None:
            pulumi.set(__self__, "srcintfs", srcintfs)
        if ssh_filter_profile is not None:
            pulumi.set(__self__, "ssh_filter_profile", ssh_filter_profile)
        if ssl_ssh_profile is not None:
            pulumi.set(__self__, "ssl_ssh_profile", ssl_ssh_profile)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if url_categories is not None:
            pulumi.set(__self__, "url_categories", url_categories)
        if url_category_unitary is not None:
            pulumi.set(__self__, "url_category_unitary", url_category_unitary)
        if users is not None:
            pulumi.set(__self__, "users", users)
        if uuid is not None:
            pulumi.set(__self__, "uuid", uuid)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)
        if videofilter_profile is not None:
            pulumi.set(__self__, "videofilter_profile", videofilter_profile)
        if voip_profile is not None:
            pulumi.set(__self__, "voip_profile", voip_profile)
        if webfilter_profile is not None:
            pulumi.set(__self__, "webfilter_profile", webfilter_profile)

    @property
    @pulumi.getter
    def action(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "action")

    @action.setter
    def action(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "action", value)

    @property
    @pulumi.getter(name="appCategories")
    def app_categories(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyAppCategoryArgs']]]]:
        return pulumi.get(self, "app_categories")

    @app_categories.setter
    def app_categories(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyAppCategoryArgs']]]]):
        pulumi.set(self, "app_categories", value)

    @property
    @pulumi.getter(name="appGroups")
    def app_groups(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyAppGroupArgs']]]]:
        return pulumi.get(self, "app_groups")

    @app_groups.setter
    def app_groups(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyAppGroupArgs']]]]):
        pulumi.set(self, "app_groups", value)

    @property
    @pulumi.getter(name="applicationList")
    def application_list(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "application_list")

    @application_list.setter
    def application_list(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "application_list", value)

    @property
    @pulumi.getter
    def applications(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyApplicationArgs']]]]:
        return pulumi.get(self, "applications")

    @applications.setter
    def applications(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyApplicationArgs']]]]):
        pulumi.set(self, "applications", value)

    @property
    @pulumi.getter(name="avProfile")
    def av_profile(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "av_profile")

    @av_profile.setter
    def av_profile(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "av_profile", value)

    @property
    @pulumi.getter(name="cifsProfile")
    def cifs_profile(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "cifs_profile")

    @cifs_profile.setter
    def cifs_profile(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cifs_profile", value)

    @property
    @pulumi.getter
    def comments(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "comments")

    @comments.setter
    def comments(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "comments", value)

    @property
    @pulumi.getter(name="dlpProfile")
    def dlp_profile(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "dlp_profile")

    @dlp_profile.setter
    def dlp_profile(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dlp_profile", value)

    @property
    @pulumi.getter(name="dlpSensor")
    def dlp_sensor(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "dlp_sensor")

    @dlp_sensor.setter
    def dlp_sensor(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dlp_sensor", value)

    @property
    @pulumi.getter(name="dnsfilterProfile")
    def dnsfilter_profile(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "dnsfilter_profile")

    @dnsfilter_profile.setter
    def dnsfilter_profile(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dnsfilter_profile", value)

    @property
    @pulumi.getter
    def dstaddr4s(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyDstaddr4Args']]]]:
        return pulumi.get(self, "dstaddr4s")

    @dstaddr4s.setter
    def dstaddr4s(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyDstaddr4Args']]]]):
        pulumi.set(self, "dstaddr4s", value)

    @property
    @pulumi.getter(name="dstaddr6Negate")
    def dstaddr6_negate(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "dstaddr6_negate")

    @dstaddr6_negate.setter
    def dstaddr6_negate(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dstaddr6_negate", value)

    @property
    @pulumi.getter
    def dstaddr6s(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyDstaddr6Args']]]]:
        return pulumi.get(self, "dstaddr6s")

    @dstaddr6s.setter
    def dstaddr6s(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyDstaddr6Args']]]]):
        pulumi.set(self, "dstaddr6s", value)

    @property
    @pulumi.getter(name="dstaddrNegate")
    def dstaddr_negate(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "dstaddr_negate")

    @dstaddr_negate.setter
    def dstaddr_negate(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dstaddr_negate", value)

    @property
    @pulumi.getter
    def dstaddrs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyDstaddrArgs']]]]:
        return pulumi.get(self, "dstaddrs")

    @dstaddrs.setter
    def dstaddrs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyDstaddrArgs']]]]):
        pulumi.set(self, "dstaddrs", value)

    @property
    @pulumi.getter
    def dstintfs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyDstintfArgs']]]]:
        return pulumi.get(self, "dstintfs")

    @dstintfs.setter
    def dstintfs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyDstintfArgs']]]]):
        pulumi.set(self, "dstintfs", value)

    @property
    @pulumi.getter(name="dynamicSortSubtable")
    def dynamic_sort_subtable(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "dynamic_sort_subtable")

    @dynamic_sort_subtable.setter
    def dynamic_sort_subtable(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dynamic_sort_subtable", value)

    @property
    @pulumi.getter(name="emailfilterProfile")
    def emailfilter_profile(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "emailfilter_profile")

    @emailfilter_profile.setter
    def emailfilter_profile(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "emailfilter_profile", value)

    @property
    @pulumi.getter(name="enforceDefaultAppPort")
    def enforce_default_app_port(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "enforce_default_app_port")

    @enforce_default_app_port.setter
    def enforce_default_app_port(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "enforce_default_app_port", value)

    @property
    @pulumi.getter(name="fileFilterProfile")
    def file_filter_profile(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "file_filter_profile")

    @file_filter_profile.setter
    def file_filter_profile(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "file_filter_profile", value)

    @property
    @pulumi.getter(name="fssoGroups")
    def fsso_groups(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyFssoGroupArgs']]]]:
        return pulumi.get(self, "fsso_groups")

    @fsso_groups.setter
    def fsso_groups(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyFssoGroupArgs']]]]):
        pulumi.set(self, "fsso_groups", value)

    @property
    @pulumi.getter(name="getAllTables")
    def get_all_tables(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "get_all_tables")

    @get_all_tables.setter
    def get_all_tables(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "get_all_tables", value)

    @property
    @pulumi.getter
    def groups(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyGroupArgs']]]]:
        return pulumi.get(self, "groups")

    @groups.setter
    def groups(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyGroupArgs']]]]):
        pulumi.set(self, "groups", value)

    @property
    @pulumi.getter(name="icapProfile")
    def icap_profile(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "icap_profile")

    @icap_profile.setter
    def icap_profile(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "icap_profile", value)

    @property
    @pulumi.getter(name="internetService")
    def internet_service(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "internet_service")

    @internet_service.setter
    def internet_service(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "internet_service", value)

    @property
    @pulumi.getter(name="internetService6")
    def internet_service6(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "internet_service6")

    @internet_service6.setter
    def internet_service6(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "internet_service6", value)

    @property
    @pulumi.getter(name="internetService6CustomGroups")
    def internet_service6_custom_groups(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6CustomGroupArgs']]]]:
        return pulumi.get(self, "internet_service6_custom_groups")

    @internet_service6_custom_groups.setter
    def internet_service6_custom_groups(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6CustomGroupArgs']]]]):
        pulumi.set(self, "internet_service6_custom_groups", value)

    @property
    @pulumi.getter(name="internetService6Customs")
    def internet_service6_customs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6CustomArgs']]]]:
        return pulumi.get(self, "internet_service6_customs")

    @internet_service6_customs.setter
    def internet_service6_customs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6CustomArgs']]]]):
        pulumi.set(self, "internet_service6_customs", value)

    @property
    @pulumi.getter(name="internetService6Groups")
    def internet_service6_groups(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6GroupArgs']]]]:
        return pulumi.get(self, "internet_service6_groups")

    @internet_service6_groups.setter
    def internet_service6_groups(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6GroupArgs']]]]):
        pulumi.set(self, "internet_service6_groups", value)

    @property
    @pulumi.getter(name="internetService6Names")
    def internet_service6_names(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6NameArgs']]]]:
        return pulumi.get(self, "internet_service6_names")

    @internet_service6_names.setter
    def internet_service6_names(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6NameArgs']]]]):
        pulumi.set(self, "internet_service6_names", value)

    @property
    @pulumi.getter(name="internetService6Negate")
    def internet_service6_negate(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "internet_service6_negate")

    @internet_service6_negate.setter
    def internet_service6_negate(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "internet_service6_negate", value)

    @property
    @pulumi.getter(name="internetService6Src")
    def internet_service6_src(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "internet_service6_src")

    @internet_service6_src.setter
    def internet_service6_src(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "internet_service6_src", value)

    @property
    @pulumi.getter(name="internetService6SrcCustomGroups")
    def internet_service6_src_custom_groups(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6SrcCustomGroupArgs']]]]:
        return pulumi.get(self, "internet_service6_src_custom_groups")

    @internet_service6_src_custom_groups.setter
    def internet_service6_src_custom_groups(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6SrcCustomGroupArgs']]]]):
        pulumi.set(self, "internet_service6_src_custom_groups", value)

    @property
    @pulumi.getter(name="internetService6SrcCustoms")
    def internet_service6_src_customs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6SrcCustomArgs']]]]:
        return pulumi.get(self, "internet_service6_src_customs")

    @internet_service6_src_customs.setter
    def internet_service6_src_customs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6SrcCustomArgs']]]]):
        pulumi.set(self, "internet_service6_src_customs", value)

    @property
    @pulumi.getter(name="internetService6SrcGroups")
    def internet_service6_src_groups(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6SrcGroupArgs']]]]:
        return pulumi.get(self, "internet_service6_src_groups")

    @internet_service6_src_groups.setter
    def internet_service6_src_groups(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6SrcGroupArgs']]]]):
        pulumi.set(self, "internet_service6_src_groups", value)

    @property
    @pulumi.getter(name="internetService6SrcNames")
    def internet_service6_src_names(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6SrcNameArgs']]]]:
        return pulumi.get(self, "internet_service6_src_names")

    @internet_service6_src_names.setter
    def internet_service6_src_names(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetService6SrcNameArgs']]]]):
        pulumi.set(self, "internet_service6_src_names", value)

    @property
    @pulumi.getter(name="internetService6SrcNegate")
    def internet_service6_src_negate(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "internet_service6_src_negate")

    @internet_service6_src_negate.setter
    def internet_service6_src_negate(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "internet_service6_src_negate", value)

    @property
    @pulumi.getter(name="internetServiceCustomGroups")
    def internet_service_custom_groups(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceCustomGroupArgs']]]]:
        return pulumi.get(self, "internet_service_custom_groups")

    @internet_service_custom_groups.setter
    def internet_service_custom_groups(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceCustomGroupArgs']]]]):
        pulumi.set(self, "internet_service_custom_groups", value)

    @property
    @pulumi.getter(name="internetServiceCustoms")
    def internet_service_customs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceCustomArgs']]]]:
        return pulumi.get(self, "internet_service_customs")

    @internet_service_customs.setter
    def internet_service_customs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceCustomArgs']]]]):
        pulumi.set(self, "internet_service_customs", value)

    @property
    @pulumi.getter(name="internetServiceGroups")
    def internet_service_groups(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceGroupArgs']]]]:
        return pulumi.get(self, "internet_service_groups")

    @internet_service_groups.setter
    def internet_service_groups(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceGroupArgs']]]]):
        pulumi.set(self, "internet_service_groups", value)

    @property
    @pulumi.getter(name="internetServiceIds")
    def internet_service_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceIdArgs']]]]:
        return pulumi.get(self, "internet_service_ids")

    @internet_service_ids.setter
    def internet_service_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceIdArgs']]]]):
        pulumi.set(self, "internet_service_ids", value)

    @property
    @pulumi.getter(name="internetServiceNames")
    def internet_service_names(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceNameArgs']]]]:
        return pulumi.get(self, "internet_service_names")

    @internet_service_names.setter
    def internet_service_names(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceNameArgs']]]]):
        pulumi.set(self, "internet_service_names", value)

    @property
    @pulumi.getter(name="internetServiceNegate")
    def internet_service_negate(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "internet_service_negate")

    @internet_service_negate.setter
    def internet_service_negate(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "internet_service_negate", value)

    @property
    @pulumi.getter(name="internetServiceSrc")
    def internet_service_src(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "internet_service_src")

    @internet_service_src.setter
    def internet_service_src(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "internet_service_src", value)

    @property
    @pulumi.getter(name="internetServiceSrcCustomGroups")
    def internet_service_src_custom_groups(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceSrcCustomGroupArgs']]]]:
        return pulumi.get(self, "internet_service_src_custom_groups")

    @internet_service_src_custom_groups.setter
    def internet_service_src_custom_groups(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceSrcCustomGroupArgs']]]]):
        pulumi.set(self, "internet_service_src_custom_groups", value)

    @property
    @pulumi.getter(name="internetServiceSrcCustoms")
    def internet_service_src_customs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceSrcCustomArgs']]]]:
        return pulumi.get(self, "internet_service_src_customs")

    @internet_service_src_customs.setter
    def internet_service_src_customs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceSrcCustomArgs']]]]):
        pulumi.set(self, "internet_service_src_customs", value)

    @property
    @pulumi.getter(name="internetServiceSrcGroups")
    def internet_service_src_groups(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceSrcGroupArgs']]]]:
        return pulumi.get(self, "internet_service_src_groups")

    @internet_service_src_groups.setter
    def internet_service_src_groups(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceSrcGroupArgs']]]]):
        pulumi.set(self, "internet_service_src_groups", value)

    @property
    @pulumi.getter(name="internetServiceSrcIds")
    def internet_service_src_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceSrcIdArgs']]]]:
        return pulumi.get(self, "internet_service_src_ids")

    @internet_service_src_ids.setter
    def internet_service_src_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceSrcIdArgs']]]]):
        pulumi.set(self, "internet_service_src_ids", value)

    @property
    @pulumi.getter(name="internetServiceSrcNames")
    def internet_service_src_names(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceSrcNameArgs']]]]:
        return pulumi.get(self, "internet_service_src_names")

    @internet_service_src_names.setter
    def internet_service_src_names(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyInternetServiceSrcNameArgs']]]]):
        pulumi.set(self, "internet_service_src_names", value)

    @property
    @pulumi.getter(name="internetServiceSrcNegate")
    def internet_service_src_negate(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "internet_service_src_negate")

    @internet_service_src_negate.setter
    def internet_service_src_negate(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "internet_service_src_negate", value)

    @property
    @pulumi.getter(name="ipsSensor")
    def ips_sensor(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "ips_sensor")

    @ips_sensor.setter
    def ips_sensor(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ips_sensor", value)

    @property
    @pulumi.getter(name="ipsVoipFilter")
    def ips_voip_filter(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "ips_voip_filter")

    @ips_voip_filter.setter
    def ips_voip_filter(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ips_voip_filter", value)

    @property
    @pulumi.getter(name="learningMode")
    def learning_mode(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "learning_mode")

    @learning_mode.setter
    def learning_mode(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "learning_mode", value)

    @property
    @pulumi.getter
    def logtraffic(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "logtraffic")

    @logtraffic.setter
    def logtraffic(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "logtraffic", value)

    @property
    @pulumi.getter(name="logtrafficStart")
    def logtraffic_start(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "logtraffic_start")

    @logtraffic_start.setter
    def logtraffic_start(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "logtraffic_start", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def nat46(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "nat46")

    @nat46.setter
    def nat46(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "nat46", value)

    @property
    @pulumi.getter
    def nat64(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "nat64")

    @nat64.setter
    def nat64(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "nat64", value)

    @property
    @pulumi.getter
    def policyid(self) -> Optional[pulumi.Input[int]]:
        return pulumi.get(self, "policyid")

    @policyid.setter
    def policyid(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "policyid", value)

    @property
    @pulumi.getter(name="profileGroup")
    def profile_group(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "profile_group")

    @profile_group.setter
    def profile_group(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "profile_group", value)

    @property
    @pulumi.getter(name="profileProtocolOptions")
    def profile_protocol_options(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "profile_protocol_options")

    @profile_protocol_options.setter
    def profile_protocol_options(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "profile_protocol_options", value)

    @property
    @pulumi.getter(name="profileType")
    def profile_type(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "profile_type")

    @profile_type.setter
    def profile_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "profile_type", value)

    @property
    @pulumi.getter
    def schedule(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "schedule")

    @schedule.setter
    def schedule(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "schedule", value)

    @property
    @pulumi.getter(name="sctpFilterProfile")
    def sctp_filter_profile(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "sctp_filter_profile")

    @sctp_filter_profile.setter
    def sctp_filter_profile(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sctp_filter_profile", value)

    @property
    @pulumi.getter(name="sendDenyPacket")
    def send_deny_packet(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "send_deny_packet")

    @send_deny_packet.setter
    def send_deny_packet(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "send_deny_packet", value)

    @property
    @pulumi.getter(name="serviceNegate")
    def service_negate(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "service_negate")

    @service_negate.setter
    def service_negate(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "service_negate", value)

    @property
    @pulumi.getter
    def services(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyServiceArgs']]]]:
        return pulumi.get(self, "services")

    @services.setter
    def services(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyServiceArgs']]]]):
        pulumi.set(self, "services", value)

    @property
    @pulumi.getter
    def srcaddr4s(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicySrcaddr4Args']]]]:
        return pulumi.get(self, "srcaddr4s")

    @srcaddr4s.setter
    def srcaddr4s(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicySrcaddr4Args']]]]):
        pulumi.set(self, "srcaddr4s", value)

    @property
    @pulumi.getter(name="srcaddr6Negate")
    def srcaddr6_negate(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "srcaddr6_negate")

    @srcaddr6_negate.setter
    def srcaddr6_negate(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "srcaddr6_negate", value)

    @property
    @pulumi.getter
    def srcaddr6s(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicySrcaddr6Args']]]]:
        return pulumi.get(self, "srcaddr6s")

    @srcaddr6s.setter
    def srcaddr6s(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicySrcaddr6Args']]]]):
        pulumi.set(self, "srcaddr6s", value)

    @property
    @pulumi.getter(name="srcaddrNegate")
    def srcaddr_negate(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "srcaddr_negate")

    @srcaddr_negate.setter
    def srcaddr_negate(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "srcaddr_negate", value)

    @property
    @pulumi.getter
    def srcaddrs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicySrcaddrArgs']]]]:
        return pulumi.get(self, "srcaddrs")

    @srcaddrs.setter
    def srcaddrs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicySrcaddrArgs']]]]):
        pulumi.set(self, "srcaddrs", value)

    @property
    @pulumi.getter
    def srcintfs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicySrcintfArgs']]]]:
        return pulumi.get(self, "srcintfs")

    @srcintfs.setter
    def srcintfs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicySrcintfArgs']]]]):
        pulumi.set(self, "srcintfs", value)

    @property
    @pulumi.getter(name="sshFilterProfile")
    def ssh_filter_profile(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "ssh_filter_profile")

    @ssh_filter_profile.setter
    def ssh_filter_profile(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ssh_filter_profile", value)

    @property
    @pulumi.getter(name="sslSshProfile")
    def ssl_ssh_profile(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "ssl_ssh_profile")

    @ssl_ssh_profile.setter
    def ssl_ssh_profile(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ssl_ssh_profile", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter(name="urlCategories")
    def url_categories(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyUrlCategoryArgs']]]]:
        return pulumi.get(self, "url_categories")

    @url_categories.setter
    def url_categories(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyUrlCategoryArgs']]]]):
        pulumi.set(self, "url_categories", value)

    @property
    @pulumi.getter(name="urlCategoryUnitary")
    def url_category_unitary(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "url_category_unitary")

    @url_category_unitary.setter
    def url_category_unitary(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "url_category_unitary", value)

    @property
    @pulumi.getter
    def users(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyUserArgs']]]]:
        return pulumi.get(self, "users")

    @users.setter
    def users(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallSecurityPolicyUserArgs']]]]):
        pulumi.set(self, "users", value)

    @property
    @pulumi.getter
    def uuid(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "uuid")

    @uuid.setter
    def uuid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "uuid", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)

    @property
    @pulumi.getter(name="videofilterProfile")
    def videofilter_profile(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "videofilter_profile")

    @videofilter_profile.setter
    def videofilter_profile(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "videofilter_profile", value)

    @property
    @pulumi.getter(name="voipProfile")
    def voip_profile(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "voip_profile")

    @voip_profile.setter
    def voip_profile(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "voip_profile", value)

    @property
    @pulumi.getter(name="webfilterProfile")
    def webfilter_profile(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "webfilter_profile")

    @webfilter_profile.setter
    def webfilter_profile(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "webfilter_profile", value)


class FirewallSecurityPolicy(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 action: Optional[pulumi.Input[str]] = None,
                 app_categories: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyAppCategoryArgs']]]]] = None,
                 app_groups: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyAppGroupArgs']]]]] = None,
                 application_list: Optional[pulumi.Input[str]] = None,
                 applications: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyApplicationArgs']]]]] = None,
                 av_profile: Optional[pulumi.Input[str]] = None,
                 cifs_profile: Optional[pulumi.Input[str]] = None,
                 comments: Optional[pulumi.Input[str]] = None,
                 dlp_profile: Optional[pulumi.Input[str]] = None,
                 dlp_sensor: Optional[pulumi.Input[str]] = None,
                 dnsfilter_profile: Optional[pulumi.Input[str]] = None,
                 dstaddr4s: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyDstaddr4Args']]]]] = None,
                 dstaddr6_negate: Optional[pulumi.Input[str]] = None,
                 dstaddr6s: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyDstaddr6Args']]]]] = None,
                 dstaddr_negate: Optional[pulumi.Input[str]] = None,
                 dstaddrs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyDstaddrArgs']]]]] = None,
                 dstintfs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyDstintfArgs']]]]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 emailfilter_profile: Optional[pulumi.Input[str]] = None,
                 enforce_default_app_port: Optional[pulumi.Input[str]] = None,
                 file_filter_profile: Optional[pulumi.Input[str]] = None,
                 fsso_groups: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyFssoGroupArgs']]]]] = None,
                 get_all_tables: Optional[pulumi.Input[str]] = None,
                 groups: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyGroupArgs']]]]] = None,
                 icap_profile: Optional[pulumi.Input[str]] = None,
                 internet_service: Optional[pulumi.Input[str]] = None,
                 internet_service6: Optional[pulumi.Input[str]] = None,
                 internet_service6_custom_groups: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetService6CustomGroupArgs']]]]] = None,
                 internet_service6_customs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetService6CustomArgs']]]]] = None,
                 internet_service6_groups: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetService6GroupArgs']]]]] = None,
                 internet_service6_names: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetService6NameArgs']]]]] = None,
                 internet_service6_negate: Optional[pulumi.Input[str]] = None,
                 internet_service6_src: Optional[pulumi.Input[str]] = None,
                 internet_service6_src_custom_groups: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetService6SrcCustomGroupArgs']]]]] = None,
                 internet_service6_src_customs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetService6SrcCustomArgs']]]]] = None,
                 internet_service6_src_groups: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetService6SrcGroupArgs']]]]] = None,
                 internet_service6_src_names: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetService6SrcNameArgs']]]]] = None,
                 internet_service6_src_negate: Optional[pulumi.Input[str]] = None,
                 internet_service_custom_groups: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetServiceCustomGroupArgs']]]]] = None,
                 internet_service_customs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetServiceCustomArgs']]]]] = None,
                 internet_service_groups: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetServiceGroupArgs']]]]] = None,
                 internet_service_ids: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetServiceIdArgs']]]]] = None,
                 internet_service_names: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetServiceNameArgs']]]]] = None,
                 internet_service_negate: Optional[pulumi.Input[str]] = None,
                 internet_service_src: Optional[pulumi.Input[str]] = None,
                 internet_service_src_custom_groups: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetServiceSrcCustomGroupArgs']]]]] = None,
                 internet_service_src_customs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetServiceSrcCustomArgs']]]]] = None,
                 internet_service_src_groups: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetServiceSrcGroupArgs']]]]] = None,
                 internet_service_src_ids: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetServiceSrcIdArgs']]]]] = None,
                 internet_service_src_names: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetServiceSrcNameArgs']]]]] = None,
                 internet_service_src_negate: Optional[pulumi.Input[str]] = None,
                 ips_sensor: Optional[pulumi.Input[str]] = None,
                 ips_voip_filter: Optional[pulumi.Input[str]] = None,
                 learning_mode: Optional[pulumi.Input[str]] = None,
                 logtraffic: Optional[pulumi.Input[str]] = None,
                 logtraffic_start: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 nat46: Optional[pulumi.Input[str]] = None,
                 nat64: Optional[pulumi.Input[str]] = None,
                 policyid: Optional[pulumi.Input[int]] = None,
                 profile_group: Optional[pulumi.Input[str]] = None,
                 profile_protocol_options: Optional[pulumi.Input[str]] = None,
                 profile_type: Optional[pulumi.Input[str]] = None,
                 schedule: Optional[pulumi.Input[str]] = None,
                 sctp_filter_profile: Optional[pulumi.Input[str]] = None,
                 send_deny_packet: Optional[pulumi.Input[str]] = None,
                 service_negate: Optional[pulumi.Input[str]] = None,
                 services: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyServiceArgs']]]]] = None,
                 srcaddr4s: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicySrcaddr4Args']]]]] = None,
                 srcaddr6_negate: Optional[pulumi.Input[str]] = None,
                 srcaddr6s: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicySrcaddr6Args']]]]] = None,
                 srcaddr_negate: Optional[pulumi.Input[str]] = None,
                 srcaddrs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicySrcaddrArgs']]]]] = None,
                 srcintfs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicySrcintfArgs']]]]] = None,
                 ssh_filter_profile: Optional[pulumi.Input[str]] = None,
                 ssl_ssh_profile: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 url_categories: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyUrlCategoryArgs']]]]] = None,
                 url_category_unitary: Optional[pulumi.Input[str]] = None,
                 users: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyUserArgs']]]]] = None,
                 uuid: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 videofilter_profile: Optional[pulumi.Input[str]] = None,
                 voip_profile: Optional[pulumi.Input[str]] = None,
                 webfilter_profile: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Create a FirewallSecurityPolicy resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[FirewallSecurityPolicyArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a FirewallSecurityPolicy resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param FirewallSecurityPolicyArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(FirewallSecurityPolicyArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 action: Optional[pulumi.Input[str]] = None,
                 app_categories: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyAppCategoryArgs']]]]] = None,
                 app_groups: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyAppGroupArgs']]]]] = None,
                 application_list: Optional[pulumi.Input[str]] = None,
                 applications: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyApplicationArgs']]]]] = None,
                 av_profile: Optional[pulumi.Input[str]] = None,
                 cifs_profile: Optional[pulumi.Input[str]] = None,
                 comments: Optional[pulumi.Input[str]] = None,
                 dlp_profile: Optional[pulumi.Input[str]] = None,
                 dlp_sensor: Optional[pulumi.Input[str]] = None,
                 dnsfilter_profile: Optional[pulumi.Input[str]] = None,
                 dstaddr4s: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyDstaddr4Args']]]]] = None,
                 dstaddr6_negate: Optional[pulumi.Input[str]] = None,
                 dstaddr6s: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyDstaddr6Args']]]]] = None,
                 dstaddr_negate: Optional[pulumi.Input[str]] = None,
                 dstaddrs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyDstaddrArgs']]]]] = None,
                 dstintfs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyDstintfArgs']]]]] = None,
                 dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
                 emailfilter_profile: Optional[pulumi.Input[str]] = None,
                 enforce_default_app_port: Optional[pulumi.Input[str]] = None,
                 file_filter_profile: Optional[pulumi.Input[str]] = None,
                 fsso_groups: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyFssoGroupArgs']]]]] = None,
                 get_all_tables: Optional[pulumi.Input[str]] = None,
                 groups: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyGroupArgs']]]]] = None,
                 icap_profile: Optional[pulumi.Input[str]] = None,
                 internet_service: Optional[pulumi.Input[str]] = None,
                 internet_service6: Optional[pulumi.Input[str]] = None,
                 internet_service6_custom_groups: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetService6CustomGroupArgs']]]]] = None,
                 internet_service6_customs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetService6CustomArgs']]]]] = None,
                 internet_service6_groups: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetService6GroupArgs']]]]] = None,
                 internet_service6_names: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetService6NameArgs']]]]] = None,
                 internet_service6_negate: Optional[pulumi.Input[str]] = None,
                 internet_service6_src: Optional[pulumi.Input[str]] = None,
                 internet_service6_src_custom_groups: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetService6SrcCustomGroupArgs']]]]] = None,
                 internet_service6_src_customs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetService6SrcCustomArgs']]]]] = None,
                 internet_service6_src_groups: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetService6SrcGroupArgs']]]]] = None,
                 internet_service6_src_names: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetService6SrcNameArgs']]]]] = None,
                 internet_service6_src_negate: Optional[pulumi.Input[str]] = None,
                 internet_service_custom_groups: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetServiceCustomGroupArgs']]]]] = None,
                 internet_service_customs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetServiceCustomArgs']]]]] = None,
                 internet_service_groups: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetServiceGroupArgs']]]]] = None,
                 internet_service_ids: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetServiceIdArgs']]]]] = None,
                 internet_service_names: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetServiceNameArgs']]]]] = None,
                 internet_service_negate: Optional[pulumi.Input[str]] = None,
                 internet_service_src: Optional[pulumi.Input[str]] = None,
                 internet_service_src_custom_groups: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetServiceSrcCustomGroupArgs']]]]] = None,
                 internet_service_src_customs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetServiceSrcCustomArgs']]]]] = None,
                 internet_service_src_groups: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetServiceSrcGroupArgs']]]]] = None,
                 internet_service_src_ids: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetServiceSrcIdArgs']]]]] = None,
                 internet_service_src_names: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetServiceSrcNameArgs']]]]] = None,
                 internet_service_src_negate: Optional[pulumi.Input[str]] = None,
                 ips_sensor: Optional[pulumi.Input[str]] = None,
                 ips_voip_filter: Optional[pulumi.Input[str]] = None,
                 learning_mode: Optional[pulumi.Input[str]] = None,
                 logtraffic: Optional[pulumi.Input[str]] = None,
                 logtraffic_start: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 nat46: Optional[pulumi.Input[str]] = None,
                 nat64: Optional[pulumi.Input[str]] = None,
                 policyid: Optional[pulumi.Input[int]] = None,
                 profile_group: Optional[pulumi.Input[str]] = None,
                 profile_protocol_options: Optional[pulumi.Input[str]] = None,
                 profile_type: Optional[pulumi.Input[str]] = None,
                 schedule: Optional[pulumi.Input[str]] = None,
                 sctp_filter_profile: Optional[pulumi.Input[str]] = None,
                 send_deny_packet: Optional[pulumi.Input[str]] = None,
                 service_negate: Optional[pulumi.Input[str]] = None,
                 services: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyServiceArgs']]]]] = None,
                 srcaddr4s: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicySrcaddr4Args']]]]] = None,
                 srcaddr6_negate: Optional[pulumi.Input[str]] = None,
                 srcaddr6s: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicySrcaddr6Args']]]]] = None,
                 srcaddr_negate: Optional[pulumi.Input[str]] = None,
                 srcaddrs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicySrcaddrArgs']]]]] = None,
                 srcintfs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicySrcintfArgs']]]]] = None,
                 ssh_filter_profile: Optional[pulumi.Input[str]] = None,
                 ssl_ssh_profile: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 url_categories: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyUrlCategoryArgs']]]]] = None,
                 url_category_unitary: Optional[pulumi.Input[str]] = None,
                 users: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyUserArgs']]]]] = None,
                 uuid: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 videofilter_profile: Optional[pulumi.Input[str]] = None,
                 voip_profile: Optional[pulumi.Input[str]] = None,
                 webfilter_profile: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = FirewallSecurityPolicyArgs.__new__(FirewallSecurityPolicyArgs)

            __props__.__dict__["action"] = action
            __props__.__dict__["app_categories"] = app_categories
            __props__.__dict__["app_groups"] = app_groups
            __props__.__dict__["application_list"] = application_list
            __props__.__dict__["applications"] = applications
            __props__.__dict__["av_profile"] = av_profile
            __props__.__dict__["cifs_profile"] = cifs_profile
            __props__.__dict__["comments"] = comments
            __props__.__dict__["dlp_profile"] = dlp_profile
            __props__.__dict__["dlp_sensor"] = dlp_sensor
            __props__.__dict__["dnsfilter_profile"] = dnsfilter_profile
            __props__.__dict__["dstaddr4s"] = dstaddr4s
            __props__.__dict__["dstaddr6_negate"] = dstaddr6_negate
            __props__.__dict__["dstaddr6s"] = dstaddr6s
            __props__.__dict__["dstaddr_negate"] = dstaddr_negate
            __props__.__dict__["dstaddrs"] = dstaddrs
            __props__.__dict__["dstintfs"] = dstintfs
            __props__.__dict__["dynamic_sort_subtable"] = dynamic_sort_subtable
            __props__.__dict__["emailfilter_profile"] = emailfilter_profile
            __props__.__dict__["enforce_default_app_port"] = enforce_default_app_port
            __props__.__dict__["file_filter_profile"] = file_filter_profile
            __props__.__dict__["fsso_groups"] = fsso_groups
            __props__.__dict__["get_all_tables"] = get_all_tables
            __props__.__dict__["groups"] = groups
            __props__.__dict__["icap_profile"] = icap_profile
            __props__.__dict__["internet_service"] = internet_service
            __props__.__dict__["internet_service6"] = internet_service6
            __props__.__dict__["internet_service6_custom_groups"] = internet_service6_custom_groups
            __props__.__dict__["internet_service6_customs"] = internet_service6_customs
            __props__.__dict__["internet_service6_groups"] = internet_service6_groups
            __props__.__dict__["internet_service6_names"] = internet_service6_names
            __props__.__dict__["internet_service6_negate"] = internet_service6_negate
            __props__.__dict__["internet_service6_src"] = internet_service6_src
            __props__.__dict__["internet_service6_src_custom_groups"] = internet_service6_src_custom_groups
            __props__.__dict__["internet_service6_src_customs"] = internet_service6_src_customs
            __props__.__dict__["internet_service6_src_groups"] = internet_service6_src_groups
            __props__.__dict__["internet_service6_src_names"] = internet_service6_src_names
            __props__.__dict__["internet_service6_src_negate"] = internet_service6_src_negate
            __props__.__dict__["internet_service_custom_groups"] = internet_service_custom_groups
            __props__.__dict__["internet_service_customs"] = internet_service_customs
            __props__.__dict__["internet_service_groups"] = internet_service_groups
            __props__.__dict__["internet_service_ids"] = internet_service_ids
            __props__.__dict__["internet_service_names"] = internet_service_names
            __props__.__dict__["internet_service_negate"] = internet_service_negate
            __props__.__dict__["internet_service_src"] = internet_service_src
            __props__.__dict__["internet_service_src_custom_groups"] = internet_service_src_custom_groups
            __props__.__dict__["internet_service_src_customs"] = internet_service_src_customs
            __props__.__dict__["internet_service_src_groups"] = internet_service_src_groups
            __props__.__dict__["internet_service_src_ids"] = internet_service_src_ids
            __props__.__dict__["internet_service_src_names"] = internet_service_src_names
            __props__.__dict__["internet_service_src_negate"] = internet_service_src_negate
            __props__.__dict__["ips_sensor"] = ips_sensor
            __props__.__dict__["ips_voip_filter"] = ips_voip_filter
            __props__.__dict__["learning_mode"] = learning_mode
            __props__.__dict__["logtraffic"] = logtraffic
            __props__.__dict__["logtraffic_start"] = logtraffic_start
            __props__.__dict__["name"] = name
            __props__.__dict__["nat46"] = nat46
            __props__.__dict__["nat64"] = nat64
            __props__.__dict__["policyid"] = policyid
            __props__.__dict__["profile_group"] = profile_group
            __props__.__dict__["profile_protocol_options"] = profile_protocol_options
            __props__.__dict__["profile_type"] = profile_type
            __props__.__dict__["schedule"] = schedule
            __props__.__dict__["sctp_filter_profile"] = sctp_filter_profile
            __props__.__dict__["send_deny_packet"] = send_deny_packet
            __props__.__dict__["service_negate"] = service_negate
            __props__.__dict__["services"] = services
            __props__.__dict__["srcaddr4s"] = srcaddr4s
            __props__.__dict__["srcaddr6_negate"] = srcaddr6_negate
            __props__.__dict__["srcaddr6s"] = srcaddr6s
            __props__.__dict__["srcaddr_negate"] = srcaddr_negate
            __props__.__dict__["srcaddrs"] = srcaddrs
            __props__.__dict__["srcintfs"] = srcintfs
            __props__.__dict__["ssh_filter_profile"] = ssh_filter_profile
            __props__.__dict__["ssl_ssh_profile"] = ssl_ssh_profile
            __props__.__dict__["status"] = status
            __props__.__dict__["url_categories"] = url_categories
            __props__.__dict__["url_category_unitary"] = url_category_unitary
            __props__.__dict__["users"] = users
            __props__.__dict__["uuid"] = uuid
            __props__.__dict__["vdomparam"] = vdomparam
            __props__.__dict__["videofilter_profile"] = videofilter_profile
            __props__.__dict__["voip_profile"] = voip_profile
            __props__.__dict__["webfilter_profile"] = webfilter_profile
        super(FirewallSecurityPolicy, __self__).__init__(
            'fortios:index/firewallSecurityPolicy:FirewallSecurityPolicy',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            action: Optional[pulumi.Input[str]] = None,
            app_categories: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyAppCategoryArgs']]]]] = None,
            app_groups: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyAppGroupArgs']]]]] = None,
            application_list: Optional[pulumi.Input[str]] = None,
            applications: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyApplicationArgs']]]]] = None,
            av_profile: Optional[pulumi.Input[str]] = None,
            cifs_profile: Optional[pulumi.Input[str]] = None,
            comments: Optional[pulumi.Input[str]] = None,
            dlp_profile: Optional[pulumi.Input[str]] = None,
            dlp_sensor: Optional[pulumi.Input[str]] = None,
            dnsfilter_profile: Optional[pulumi.Input[str]] = None,
            dstaddr4s: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyDstaddr4Args']]]]] = None,
            dstaddr6_negate: Optional[pulumi.Input[str]] = None,
            dstaddr6s: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyDstaddr6Args']]]]] = None,
            dstaddr_negate: Optional[pulumi.Input[str]] = None,
            dstaddrs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyDstaddrArgs']]]]] = None,
            dstintfs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyDstintfArgs']]]]] = None,
            dynamic_sort_subtable: Optional[pulumi.Input[str]] = None,
            emailfilter_profile: Optional[pulumi.Input[str]] = None,
            enforce_default_app_port: Optional[pulumi.Input[str]] = None,
            file_filter_profile: Optional[pulumi.Input[str]] = None,
            fsso_groups: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyFssoGroupArgs']]]]] = None,
            get_all_tables: Optional[pulumi.Input[str]] = None,
            groups: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyGroupArgs']]]]] = None,
            icap_profile: Optional[pulumi.Input[str]] = None,
            internet_service: Optional[pulumi.Input[str]] = None,
            internet_service6: Optional[pulumi.Input[str]] = None,
            internet_service6_custom_groups: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetService6CustomGroupArgs']]]]] = None,
            internet_service6_customs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetService6CustomArgs']]]]] = None,
            internet_service6_groups: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetService6GroupArgs']]]]] = None,
            internet_service6_names: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetService6NameArgs']]]]] = None,
            internet_service6_negate: Optional[pulumi.Input[str]] = None,
            internet_service6_src: Optional[pulumi.Input[str]] = None,
            internet_service6_src_custom_groups: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetService6SrcCustomGroupArgs']]]]] = None,
            internet_service6_src_customs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetService6SrcCustomArgs']]]]] = None,
            internet_service6_src_groups: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetService6SrcGroupArgs']]]]] = None,
            internet_service6_src_names: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetService6SrcNameArgs']]]]] = None,
            internet_service6_src_negate: Optional[pulumi.Input[str]] = None,
            internet_service_custom_groups: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetServiceCustomGroupArgs']]]]] = None,
            internet_service_customs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetServiceCustomArgs']]]]] = None,
            internet_service_groups: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetServiceGroupArgs']]]]] = None,
            internet_service_ids: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetServiceIdArgs']]]]] = None,
            internet_service_names: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetServiceNameArgs']]]]] = None,
            internet_service_negate: Optional[pulumi.Input[str]] = None,
            internet_service_src: Optional[pulumi.Input[str]] = None,
            internet_service_src_custom_groups: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetServiceSrcCustomGroupArgs']]]]] = None,
            internet_service_src_customs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetServiceSrcCustomArgs']]]]] = None,
            internet_service_src_groups: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetServiceSrcGroupArgs']]]]] = None,
            internet_service_src_ids: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetServiceSrcIdArgs']]]]] = None,
            internet_service_src_names: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyInternetServiceSrcNameArgs']]]]] = None,
            internet_service_src_negate: Optional[pulumi.Input[str]] = None,
            ips_sensor: Optional[pulumi.Input[str]] = None,
            ips_voip_filter: Optional[pulumi.Input[str]] = None,
            learning_mode: Optional[pulumi.Input[str]] = None,
            logtraffic: Optional[pulumi.Input[str]] = None,
            logtraffic_start: Optional[pulumi.Input[str]] = None,
            name: Optional[pulumi.Input[str]] = None,
            nat46: Optional[pulumi.Input[str]] = None,
            nat64: Optional[pulumi.Input[str]] = None,
            policyid: Optional[pulumi.Input[int]] = None,
            profile_group: Optional[pulumi.Input[str]] = None,
            profile_protocol_options: Optional[pulumi.Input[str]] = None,
            profile_type: Optional[pulumi.Input[str]] = None,
            schedule: Optional[pulumi.Input[str]] = None,
            sctp_filter_profile: Optional[pulumi.Input[str]] = None,
            send_deny_packet: Optional[pulumi.Input[str]] = None,
            service_negate: Optional[pulumi.Input[str]] = None,
            services: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyServiceArgs']]]]] = None,
            srcaddr4s: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicySrcaddr4Args']]]]] = None,
            srcaddr6_negate: Optional[pulumi.Input[str]] = None,
            srcaddr6s: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicySrcaddr6Args']]]]] = None,
            srcaddr_negate: Optional[pulumi.Input[str]] = None,
            srcaddrs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicySrcaddrArgs']]]]] = None,
            srcintfs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicySrcintfArgs']]]]] = None,
            ssh_filter_profile: Optional[pulumi.Input[str]] = None,
            ssl_ssh_profile: Optional[pulumi.Input[str]] = None,
            status: Optional[pulumi.Input[str]] = None,
            url_categories: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyUrlCategoryArgs']]]]] = None,
            url_category_unitary: Optional[pulumi.Input[str]] = None,
            users: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallSecurityPolicyUserArgs']]]]] = None,
            uuid: Optional[pulumi.Input[str]] = None,
            vdomparam: Optional[pulumi.Input[str]] = None,
            videofilter_profile: Optional[pulumi.Input[str]] = None,
            voip_profile: Optional[pulumi.Input[str]] = None,
            webfilter_profile: Optional[pulumi.Input[str]] = None) -> 'FirewallSecurityPolicy':
        """
        Get an existing FirewallSecurityPolicy resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _FirewallSecurityPolicyState.__new__(_FirewallSecurityPolicyState)

        __props__.__dict__["action"] = action
        __props__.__dict__["app_categories"] = app_categories
        __props__.__dict__["app_groups"] = app_groups
        __props__.__dict__["application_list"] = application_list
        __props__.__dict__["applications"] = applications
        __props__.__dict__["av_profile"] = av_profile
        __props__.__dict__["cifs_profile"] = cifs_profile
        __props__.__dict__["comments"] = comments
        __props__.__dict__["dlp_profile"] = dlp_profile
        __props__.__dict__["dlp_sensor"] = dlp_sensor
        __props__.__dict__["dnsfilter_profile"] = dnsfilter_profile
        __props__.__dict__["dstaddr4s"] = dstaddr4s
        __props__.__dict__["dstaddr6_negate"] = dstaddr6_negate
        __props__.__dict__["dstaddr6s"] = dstaddr6s
        __props__.__dict__["dstaddr_negate"] = dstaddr_negate
        __props__.__dict__["dstaddrs"] = dstaddrs
        __props__.__dict__["dstintfs"] = dstintfs
        __props__.__dict__["dynamic_sort_subtable"] = dynamic_sort_subtable
        __props__.__dict__["emailfilter_profile"] = emailfilter_profile
        __props__.__dict__["enforce_default_app_port"] = enforce_default_app_port
        __props__.__dict__["file_filter_profile"] = file_filter_profile
        __props__.__dict__["fsso_groups"] = fsso_groups
        __props__.__dict__["get_all_tables"] = get_all_tables
        __props__.__dict__["groups"] = groups
        __props__.__dict__["icap_profile"] = icap_profile
        __props__.__dict__["internet_service"] = internet_service
        __props__.__dict__["internet_service6"] = internet_service6
        __props__.__dict__["internet_service6_custom_groups"] = internet_service6_custom_groups
        __props__.__dict__["internet_service6_customs"] = internet_service6_customs
        __props__.__dict__["internet_service6_groups"] = internet_service6_groups
        __props__.__dict__["internet_service6_names"] = internet_service6_names
        __props__.__dict__["internet_service6_negate"] = internet_service6_negate
        __props__.__dict__["internet_service6_src"] = internet_service6_src
        __props__.__dict__["internet_service6_src_custom_groups"] = internet_service6_src_custom_groups
        __props__.__dict__["internet_service6_src_customs"] = internet_service6_src_customs
        __props__.__dict__["internet_service6_src_groups"] = internet_service6_src_groups
        __props__.__dict__["internet_service6_src_names"] = internet_service6_src_names
        __props__.__dict__["internet_service6_src_negate"] = internet_service6_src_negate
        __props__.__dict__["internet_service_custom_groups"] = internet_service_custom_groups
        __props__.__dict__["internet_service_customs"] = internet_service_customs
        __props__.__dict__["internet_service_groups"] = internet_service_groups
        __props__.__dict__["internet_service_ids"] = internet_service_ids
        __props__.__dict__["internet_service_names"] = internet_service_names
        __props__.__dict__["internet_service_negate"] = internet_service_negate
        __props__.__dict__["internet_service_src"] = internet_service_src
        __props__.__dict__["internet_service_src_custom_groups"] = internet_service_src_custom_groups
        __props__.__dict__["internet_service_src_customs"] = internet_service_src_customs
        __props__.__dict__["internet_service_src_groups"] = internet_service_src_groups
        __props__.__dict__["internet_service_src_ids"] = internet_service_src_ids
        __props__.__dict__["internet_service_src_names"] = internet_service_src_names
        __props__.__dict__["internet_service_src_negate"] = internet_service_src_negate
        __props__.__dict__["ips_sensor"] = ips_sensor
        __props__.__dict__["ips_voip_filter"] = ips_voip_filter
        __props__.__dict__["learning_mode"] = learning_mode
        __props__.__dict__["logtraffic"] = logtraffic
        __props__.__dict__["logtraffic_start"] = logtraffic_start
        __props__.__dict__["name"] = name
        __props__.__dict__["nat46"] = nat46
        __props__.__dict__["nat64"] = nat64
        __props__.__dict__["policyid"] = policyid
        __props__.__dict__["profile_group"] = profile_group
        __props__.__dict__["profile_protocol_options"] = profile_protocol_options
        __props__.__dict__["profile_type"] = profile_type
        __props__.__dict__["schedule"] = schedule
        __props__.__dict__["sctp_filter_profile"] = sctp_filter_profile
        __props__.__dict__["send_deny_packet"] = send_deny_packet
        __props__.__dict__["service_negate"] = service_negate
        __props__.__dict__["services"] = services
        __props__.__dict__["srcaddr4s"] = srcaddr4s
        __props__.__dict__["srcaddr6_negate"] = srcaddr6_negate
        __props__.__dict__["srcaddr6s"] = srcaddr6s
        __props__.__dict__["srcaddr_negate"] = srcaddr_negate
        __props__.__dict__["srcaddrs"] = srcaddrs
        __props__.__dict__["srcintfs"] = srcintfs
        __props__.__dict__["ssh_filter_profile"] = ssh_filter_profile
        __props__.__dict__["ssl_ssh_profile"] = ssl_ssh_profile
        __props__.__dict__["status"] = status
        __props__.__dict__["url_categories"] = url_categories
        __props__.__dict__["url_category_unitary"] = url_category_unitary
        __props__.__dict__["users"] = users
        __props__.__dict__["uuid"] = uuid
        __props__.__dict__["vdomparam"] = vdomparam
        __props__.__dict__["videofilter_profile"] = videofilter_profile
        __props__.__dict__["voip_profile"] = voip_profile
        __props__.__dict__["webfilter_profile"] = webfilter_profile
        return FirewallSecurityPolicy(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def action(self) -> pulumi.Output[str]:
        return pulumi.get(self, "action")

    @property
    @pulumi.getter(name="appCategories")
    def app_categories(self) -> pulumi.Output[Optional[Sequence['outputs.FirewallSecurityPolicyAppCategory']]]:
        return pulumi.get(self, "app_categories")

    @property
    @pulumi.getter(name="appGroups")
    def app_groups(self) -> pulumi.Output[Optional[Sequence['outputs.FirewallSecurityPolicyAppGroup']]]:
        return pulumi.get(self, "app_groups")

    @property
    @pulumi.getter(name="applicationList")
    def application_list(self) -> pulumi.Output[str]:
        return pulumi.get(self, "application_list")

    @property
    @pulumi.getter
    def applications(self) -> pulumi.Output[Optional[Sequence['outputs.FirewallSecurityPolicyApplication']]]:
        return pulumi.get(self, "applications")

    @property
    @pulumi.getter(name="avProfile")
    def av_profile(self) -> pulumi.Output[str]:
        return pulumi.get(self, "av_profile")

    @property
    @pulumi.getter(name="cifsProfile")
    def cifs_profile(self) -> pulumi.Output[str]:
        return pulumi.get(self, "cifs_profile")

    @property
    @pulumi.getter
    def comments(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "comments")

    @property
    @pulumi.getter(name="dlpProfile")
    def dlp_profile(self) -> pulumi.Output[str]:
        return pulumi.get(self, "dlp_profile")

    @property
    @pulumi.getter(name="dlpSensor")
    def dlp_sensor(self) -> pulumi.Output[str]:
        return pulumi.get(self, "dlp_sensor")

    @property
    @pulumi.getter(name="dnsfilterProfile")
    def dnsfilter_profile(self) -> pulumi.Output[str]:
        return pulumi.get(self, "dnsfilter_profile")

    @property
    @pulumi.getter
    def dstaddr4s(self) -> pulumi.Output[Optional[Sequence['outputs.FirewallSecurityPolicyDstaddr4']]]:
        return pulumi.get(self, "dstaddr4s")

    @property
    @pulumi.getter(name="dstaddr6Negate")
    def dstaddr6_negate(self) -> pulumi.Output[str]:
        return pulumi.get(self, "dstaddr6_negate")

    @property
    @pulumi.getter
    def dstaddr6s(self) -> pulumi.Output[Optional[Sequence['outputs.FirewallSecurityPolicyDstaddr6']]]:
        return pulumi.get(self, "dstaddr6s")

    @property
    @pulumi.getter(name="dstaddrNegate")
    def dstaddr_negate(self) -> pulumi.Output[str]:
        return pulumi.get(self, "dstaddr_negate")

    @property
    @pulumi.getter
    def dstaddrs(self) -> pulumi.Output[Optional[Sequence['outputs.FirewallSecurityPolicyDstaddr']]]:
        return pulumi.get(self, "dstaddrs")

    @property
    @pulumi.getter
    def dstintfs(self) -> pulumi.Output[Optional[Sequence['outputs.FirewallSecurityPolicyDstintf']]]:
        return pulumi.get(self, "dstintfs")

    @property
    @pulumi.getter(name="dynamicSortSubtable")
    def dynamic_sort_subtable(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "dynamic_sort_subtable")

    @property
    @pulumi.getter(name="emailfilterProfile")
    def emailfilter_profile(self) -> pulumi.Output[str]:
        return pulumi.get(self, "emailfilter_profile")

    @property
    @pulumi.getter(name="enforceDefaultAppPort")
    def enforce_default_app_port(self) -> pulumi.Output[str]:
        return pulumi.get(self, "enforce_default_app_port")

    @property
    @pulumi.getter(name="fileFilterProfile")
    def file_filter_profile(self) -> pulumi.Output[str]:
        return pulumi.get(self, "file_filter_profile")

    @property
    @pulumi.getter(name="fssoGroups")
    def fsso_groups(self) -> pulumi.Output[Optional[Sequence['outputs.FirewallSecurityPolicyFssoGroup']]]:
        return pulumi.get(self, "fsso_groups")

    @property
    @pulumi.getter(name="getAllTables")
    def get_all_tables(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "get_all_tables")

    @property
    @pulumi.getter
    def groups(self) -> pulumi.Output[Optional[Sequence['outputs.FirewallSecurityPolicyGroup']]]:
        return pulumi.get(self, "groups")

    @property
    @pulumi.getter(name="icapProfile")
    def icap_profile(self) -> pulumi.Output[str]:
        return pulumi.get(self, "icap_profile")

    @property
    @pulumi.getter(name="internetService")
    def internet_service(self) -> pulumi.Output[str]:
        return pulumi.get(self, "internet_service")

    @property
    @pulumi.getter(name="internetService6")
    def internet_service6(self) -> pulumi.Output[str]:
        return pulumi.get(self, "internet_service6")

    @property
    @pulumi.getter(name="internetService6CustomGroups")
    def internet_service6_custom_groups(self) -> pulumi.Output[Optional[Sequence['outputs.FirewallSecurityPolicyInternetService6CustomGroup']]]:
        return pulumi.get(self, "internet_service6_custom_groups")

    @property
    @pulumi.getter(name="internetService6Customs")
    def internet_service6_customs(self) -> pulumi.Output[Optional[Sequence['outputs.FirewallSecurityPolicyInternetService6Custom']]]:
        return pulumi.get(self, "internet_service6_customs")

    @property
    @pulumi.getter(name="internetService6Groups")
    def internet_service6_groups(self) -> pulumi.Output[Optional[Sequence['outputs.FirewallSecurityPolicyInternetService6Group']]]:
        return pulumi.get(self, "internet_service6_groups")

    @property
    @pulumi.getter(name="internetService6Names")
    def internet_service6_names(self) -> pulumi.Output[Optional[Sequence['outputs.FirewallSecurityPolicyInternetService6Name']]]:
        return pulumi.get(self, "internet_service6_names")

    @property
    @pulumi.getter(name="internetService6Negate")
    def internet_service6_negate(self) -> pulumi.Output[str]:
        return pulumi.get(self, "internet_service6_negate")

    @property
    @pulumi.getter(name="internetService6Src")
    def internet_service6_src(self) -> pulumi.Output[str]:
        return pulumi.get(self, "internet_service6_src")

    @property
    @pulumi.getter(name="internetService6SrcCustomGroups")
    def internet_service6_src_custom_groups(self) -> pulumi.Output[Optional[Sequence['outputs.FirewallSecurityPolicyInternetService6SrcCustomGroup']]]:
        return pulumi.get(self, "internet_service6_src_custom_groups")

    @property
    @pulumi.getter(name="internetService6SrcCustoms")
    def internet_service6_src_customs(self) -> pulumi.Output[Optional[Sequence['outputs.FirewallSecurityPolicyInternetService6SrcCustom']]]:
        return pulumi.get(self, "internet_service6_src_customs")

    @property
    @pulumi.getter(name="internetService6SrcGroups")
    def internet_service6_src_groups(self) -> pulumi.Output[Optional[Sequence['outputs.FirewallSecurityPolicyInternetService6SrcGroup']]]:
        return pulumi.get(self, "internet_service6_src_groups")

    @property
    @pulumi.getter(name="internetService6SrcNames")
    def internet_service6_src_names(self) -> pulumi.Output[Optional[Sequence['outputs.FirewallSecurityPolicyInternetService6SrcName']]]:
        return pulumi.get(self, "internet_service6_src_names")

    @property
    @pulumi.getter(name="internetService6SrcNegate")
    def internet_service6_src_negate(self) -> pulumi.Output[str]:
        return pulumi.get(self, "internet_service6_src_negate")

    @property
    @pulumi.getter(name="internetServiceCustomGroups")
    def internet_service_custom_groups(self) -> pulumi.Output[Optional[Sequence['outputs.FirewallSecurityPolicyInternetServiceCustomGroup']]]:
        return pulumi.get(self, "internet_service_custom_groups")

    @property
    @pulumi.getter(name="internetServiceCustoms")
    def internet_service_customs(self) -> pulumi.Output[Optional[Sequence['outputs.FirewallSecurityPolicyInternetServiceCustom']]]:
        return pulumi.get(self, "internet_service_customs")

    @property
    @pulumi.getter(name="internetServiceGroups")
    def internet_service_groups(self) -> pulumi.Output[Optional[Sequence['outputs.FirewallSecurityPolicyInternetServiceGroup']]]:
        return pulumi.get(self, "internet_service_groups")

    @property
    @pulumi.getter(name="internetServiceIds")
    def internet_service_ids(self) -> pulumi.Output[Optional[Sequence['outputs.FirewallSecurityPolicyInternetServiceId']]]:
        return pulumi.get(self, "internet_service_ids")

    @property
    @pulumi.getter(name="internetServiceNames")
    def internet_service_names(self) -> pulumi.Output[Optional[Sequence['outputs.FirewallSecurityPolicyInternetServiceName']]]:
        return pulumi.get(self, "internet_service_names")

    @property
    @pulumi.getter(name="internetServiceNegate")
    def internet_service_negate(self) -> pulumi.Output[str]:
        return pulumi.get(self, "internet_service_negate")

    @property
    @pulumi.getter(name="internetServiceSrc")
    def internet_service_src(self) -> pulumi.Output[str]:
        return pulumi.get(self, "internet_service_src")

    @property
    @pulumi.getter(name="internetServiceSrcCustomGroups")
    def internet_service_src_custom_groups(self) -> pulumi.Output[Optional[Sequence['outputs.FirewallSecurityPolicyInternetServiceSrcCustomGroup']]]:
        return pulumi.get(self, "internet_service_src_custom_groups")

    @property
    @pulumi.getter(name="internetServiceSrcCustoms")
    def internet_service_src_customs(self) -> pulumi.Output[Optional[Sequence['outputs.FirewallSecurityPolicyInternetServiceSrcCustom']]]:
        return pulumi.get(self, "internet_service_src_customs")

    @property
    @pulumi.getter(name="internetServiceSrcGroups")
    def internet_service_src_groups(self) -> pulumi.Output[Optional[Sequence['outputs.FirewallSecurityPolicyInternetServiceSrcGroup']]]:
        return pulumi.get(self, "internet_service_src_groups")

    @property
    @pulumi.getter(name="internetServiceSrcIds")
    def internet_service_src_ids(self) -> pulumi.Output[Optional[Sequence['outputs.FirewallSecurityPolicyInternetServiceSrcId']]]:
        return pulumi.get(self, "internet_service_src_ids")

    @property
    @pulumi.getter(name="internetServiceSrcNames")
    def internet_service_src_names(self) -> pulumi.Output[Optional[Sequence['outputs.FirewallSecurityPolicyInternetServiceSrcName']]]:
        return pulumi.get(self, "internet_service_src_names")

    @property
    @pulumi.getter(name="internetServiceSrcNegate")
    def internet_service_src_negate(self) -> pulumi.Output[str]:
        return pulumi.get(self, "internet_service_src_negate")

    @property
    @pulumi.getter(name="ipsSensor")
    def ips_sensor(self) -> pulumi.Output[str]:
        return pulumi.get(self, "ips_sensor")

    @property
    @pulumi.getter(name="ipsVoipFilter")
    def ips_voip_filter(self) -> pulumi.Output[str]:
        return pulumi.get(self, "ips_voip_filter")

    @property
    @pulumi.getter(name="learningMode")
    def learning_mode(self) -> pulumi.Output[str]:
        return pulumi.get(self, "learning_mode")

    @property
    @pulumi.getter
    def logtraffic(self) -> pulumi.Output[str]:
        return pulumi.get(self, "logtraffic")

    @property
    @pulumi.getter(name="logtrafficStart")
    def logtraffic_start(self) -> pulumi.Output[str]:
        return pulumi.get(self, "logtraffic_start")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def nat46(self) -> pulumi.Output[str]:
        return pulumi.get(self, "nat46")

    @property
    @pulumi.getter
    def nat64(self) -> pulumi.Output[str]:
        return pulumi.get(self, "nat64")

    @property
    @pulumi.getter
    def policyid(self) -> pulumi.Output[int]:
        return pulumi.get(self, "policyid")

    @property
    @pulumi.getter(name="profileGroup")
    def profile_group(self) -> pulumi.Output[str]:
        return pulumi.get(self, "profile_group")

    @property
    @pulumi.getter(name="profileProtocolOptions")
    def profile_protocol_options(self) -> pulumi.Output[str]:
        return pulumi.get(self, "profile_protocol_options")

    @property
    @pulumi.getter(name="profileType")
    def profile_type(self) -> pulumi.Output[str]:
        return pulumi.get(self, "profile_type")

    @property
    @pulumi.getter
    def schedule(self) -> pulumi.Output[str]:
        return pulumi.get(self, "schedule")

    @property
    @pulumi.getter(name="sctpFilterProfile")
    def sctp_filter_profile(self) -> pulumi.Output[str]:
        return pulumi.get(self, "sctp_filter_profile")

    @property
    @pulumi.getter(name="sendDenyPacket")
    def send_deny_packet(self) -> pulumi.Output[str]:
        return pulumi.get(self, "send_deny_packet")

    @property
    @pulumi.getter(name="serviceNegate")
    def service_negate(self) -> pulumi.Output[str]:
        return pulumi.get(self, "service_negate")

    @property
    @pulumi.getter
    def services(self) -> pulumi.Output[Optional[Sequence['outputs.FirewallSecurityPolicyService']]]:
        return pulumi.get(self, "services")

    @property
    @pulumi.getter
    def srcaddr4s(self) -> pulumi.Output[Optional[Sequence['outputs.FirewallSecurityPolicySrcaddr4']]]:
        return pulumi.get(self, "srcaddr4s")

    @property
    @pulumi.getter(name="srcaddr6Negate")
    def srcaddr6_negate(self) -> pulumi.Output[str]:
        return pulumi.get(self, "srcaddr6_negate")

    @property
    @pulumi.getter
    def srcaddr6s(self) -> pulumi.Output[Optional[Sequence['outputs.FirewallSecurityPolicySrcaddr6']]]:
        return pulumi.get(self, "srcaddr6s")

    @property
    @pulumi.getter(name="srcaddrNegate")
    def srcaddr_negate(self) -> pulumi.Output[str]:
        return pulumi.get(self, "srcaddr_negate")

    @property
    @pulumi.getter
    def srcaddrs(self) -> pulumi.Output[Optional[Sequence['outputs.FirewallSecurityPolicySrcaddr']]]:
        return pulumi.get(self, "srcaddrs")

    @property
    @pulumi.getter
    def srcintfs(self) -> pulumi.Output[Optional[Sequence['outputs.FirewallSecurityPolicySrcintf']]]:
        return pulumi.get(self, "srcintfs")

    @property
    @pulumi.getter(name="sshFilterProfile")
    def ssh_filter_profile(self) -> pulumi.Output[str]:
        return pulumi.get(self, "ssh_filter_profile")

    @property
    @pulumi.getter(name="sslSshProfile")
    def ssl_ssh_profile(self) -> pulumi.Output[str]:
        return pulumi.get(self, "ssl_ssh_profile")

    @property
    @pulumi.getter
    def status(self) -> pulumi.Output[str]:
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="urlCategories")
    def url_categories(self) -> pulumi.Output[Optional[Sequence['outputs.FirewallSecurityPolicyUrlCategory']]]:
        return pulumi.get(self, "url_categories")

    @property
    @pulumi.getter(name="urlCategoryUnitary")
    def url_category_unitary(self) -> pulumi.Output[str]:
        return pulumi.get(self, "url_category_unitary")

    @property
    @pulumi.getter
    def users(self) -> pulumi.Output[Optional[Sequence['outputs.FirewallSecurityPolicyUser']]]:
        return pulumi.get(self, "users")

    @property
    @pulumi.getter
    def uuid(self) -> pulumi.Output[str]:
        return pulumi.get(self, "uuid")

    @property
    @pulumi.getter
    def vdomparam(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "vdomparam")

    @property
    @pulumi.getter(name="videofilterProfile")
    def videofilter_profile(self) -> pulumi.Output[str]:
        return pulumi.get(self, "videofilter_profile")

    @property
    @pulumi.getter(name="voipProfile")
    def voip_profile(self) -> pulumi.Output[str]:
        return pulumi.get(self, "voip_profile")

    @property
    @pulumi.getter(name="webfilterProfile")
    def webfilter_profile(self) -> pulumi.Output[str]:
        return pulumi.get(self, "webfilter_profile")

