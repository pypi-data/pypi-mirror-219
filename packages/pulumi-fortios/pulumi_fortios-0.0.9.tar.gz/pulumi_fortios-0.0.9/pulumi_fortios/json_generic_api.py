# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = ['JSONGenericAPIArgs', 'JSONGenericAPI']

@pulumi.input_type
class JSONGenericAPIArgs:
    def __init__(__self__, *,
                 method: pulumi.Input[str],
                 path: pulumi.Input[str],
                 force_recreate: Optional[pulumi.Input[str]] = None,
                 json: Optional[pulumi.Input[str]] = None,
                 specialparams: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a JSONGenericAPI resource.
        """
        pulumi.set(__self__, "method", method)
        pulumi.set(__self__, "path", path)
        if force_recreate is not None:
            pulumi.set(__self__, "force_recreate", force_recreate)
        if json is not None:
            pulumi.set(__self__, "json", json)
        if specialparams is not None:
            pulumi.set(__self__, "specialparams", specialparams)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter
    def method(self) -> pulumi.Input[str]:
        return pulumi.get(self, "method")

    @method.setter
    def method(self, value: pulumi.Input[str]):
        pulumi.set(self, "method", value)

    @property
    @pulumi.getter
    def path(self) -> pulumi.Input[str]:
        return pulumi.get(self, "path")

    @path.setter
    def path(self, value: pulumi.Input[str]):
        pulumi.set(self, "path", value)

    @property
    @pulumi.getter(name="forceRecreate")
    def force_recreate(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "force_recreate")

    @force_recreate.setter
    def force_recreate(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "force_recreate", value)

    @property
    @pulumi.getter
    def json(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "json")

    @json.setter
    def json(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "json", value)

    @property
    @pulumi.getter
    def specialparams(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "specialparams")

    @specialparams.setter
    def specialparams(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "specialparams", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


@pulumi.input_type
class _JSONGenericAPIState:
    def __init__(__self__, *,
                 force_recreate: Optional[pulumi.Input[str]] = None,
                 json: Optional[pulumi.Input[str]] = None,
                 method: Optional[pulumi.Input[str]] = None,
                 path: Optional[pulumi.Input[str]] = None,
                 response: Optional[pulumi.Input[str]] = None,
                 specialparams: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering JSONGenericAPI resources.
        """
        if force_recreate is not None:
            pulumi.set(__self__, "force_recreate", force_recreate)
        if json is not None:
            pulumi.set(__self__, "json", json)
        if method is not None:
            pulumi.set(__self__, "method", method)
        if path is not None:
            pulumi.set(__self__, "path", path)
        if response is not None:
            pulumi.set(__self__, "response", response)
        if specialparams is not None:
            pulumi.set(__self__, "specialparams", specialparams)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter(name="forceRecreate")
    def force_recreate(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "force_recreate")

    @force_recreate.setter
    def force_recreate(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "force_recreate", value)

    @property
    @pulumi.getter
    def json(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "json")

    @json.setter
    def json(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "json", value)

    @property
    @pulumi.getter
    def method(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "method")

    @method.setter
    def method(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "method", value)

    @property
    @pulumi.getter
    def path(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "path")

    @path.setter
    def path(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "path", value)

    @property
    @pulumi.getter
    def response(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "response")

    @response.setter
    def response(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "response", value)

    @property
    @pulumi.getter
    def specialparams(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "specialparams")

    @specialparams.setter
    def specialparams(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "specialparams", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)


class JSONGenericAPI(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 force_recreate: Optional[pulumi.Input[str]] = None,
                 json: Optional[pulumi.Input[str]] = None,
                 method: Optional[pulumi.Input[str]] = None,
                 path: Optional[pulumi.Input[str]] = None,
                 specialparams: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Create a JSONGenericAPI resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: JSONGenericAPIArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a JSONGenericAPI resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param JSONGenericAPIArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(JSONGenericAPIArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 force_recreate: Optional[pulumi.Input[str]] = None,
                 json: Optional[pulumi.Input[str]] = None,
                 method: Optional[pulumi.Input[str]] = None,
                 path: Optional[pulumi.Input[str]] = None,
                 specialparams: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = JSONGenericAPIArgs.__new__(JSONGenericAPIArgs)

            __props__.__dict__["force_recreate"] = force_recreate
            __props__.__dict__["json"] = json
            if method is None and not opts.urn:
                raise TypeError("Missing required property 'method'")
            __props__.__dict__["method"] = method
            if path is None and not opts.urn:
                raise TypeError("Missing required property 'path'")
            __props__.__dict__["path"] = path
            __props__.__dict__["specialparams"] = specialparams
            __props__.__dict__["vdomparam"] = vdomparam
            __props__.__dict__["response"] = None
        super(JSONGenericAPI, __self__).__init__(
            'fortios:index/jSONGenericAPI:JSONGenericAPI',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            force_recreate: Optional[pulumi.Input[str]] = None,
            json: Optional[pulumi.Input[str]] = None,
            method: Optional[pulumi.Input[str]] = None,
            path: Optional[pulumi.Input[str]] = None,
            response: Optional[pulumi.Input[str]] = None,
            specialparams: Optional[pulumi.Input[str]] = None,
            vdomparam: Optional[pulumi.Input[str]] = None) -> 'JSONGenericAPI':
        """
        Get an existing JSONGenericAPI resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _JSONGenericAPIState.__new__(_JSONGenericAPIState)

        __props__.__dict__["force_recreate"] = force_recreate
        __props__.__dict__["json"] = json
        __props__.__dict__["method"] = method
        __props__.__dict__["path"] = path
        __props__.__dict__["response"] = response
        __props__.__dict__["specialparams"] = specialparams
        __props__.__dict__["vdomparam"] = vdomparam
        return JSONGenericAPI(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="forceRecreate")
    def force_recreate(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "force_recreate")

    @property
    @pulumi.getter
    def json(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "json")

    @property
    @pulumi.getter
    def method(self) -> pulumi.Output[str]:
        return pulumi.get(self, "method")

    @property
    @pulumi.getter
    def path(self) -> pulumi.Output[str]:
        return pulumi.get(self, "path")

    @property
    @pulumi.getter
    def response(self) -> pulumi.Output[str]:
        return pulumi.get(self, "response")

    @property
    @pulumi.getter
    def specialparams(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "specialparams")

    @property
    @pulumi.getter
    def vdomparam(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "vdomparam")

