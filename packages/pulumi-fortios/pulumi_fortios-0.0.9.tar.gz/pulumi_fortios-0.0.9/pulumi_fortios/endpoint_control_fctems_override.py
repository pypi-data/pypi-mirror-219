# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = ['EndpointControlFctemsOverrideArgs', 'EndpointControlFctemsOverride']

@pulumi.input_type
class EndpointControlFctemsOverrideArgs:
    def __init__(__self__, *,
                 call_timeout: Optional[pulumi.Input[int]] = None,
                 capabilities: Optional[pulumi.Input[str]] = None,
                 cloud_server_type: Optional[pulumi.Input[str]] = None,
                 dirty_reason: Optional[pulumi.Input[str]] = None,
                 ems_id: Optional[pulumi.Input[int]] = None,
                 fortinetone_cloud_authentication: Optional[pulumi.Input[str]] = None,
                 https_port: Optional[pulumi.Input[int]] = None,
                 interface: Optional[pulumi.Input[str]] = None,
                 interface_select_method: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 out_of_sync_threshold: Optional[pulumi.Input[int]] = None,
                 preserve_ssl_session: Optional[pulumi.Input[str]] = None,
                 pull_avatars: Optional[pulumi.Input[str]] = None,
                 pull_malware_hash: Optional[pulumi.Input[str]] = None,
                 pull_sysinfo: Optional[pulumi.Input[str]] = None,
                 pull_tags: Optional[pulumi.Input[str]] = None,
                 pull_vulnerabilities: Optional[pulumi.Input[str]] = None,
                 serial_number: Optional[pulumi.Input[str]] = None,
                 server: Optional[pulumi.Input[str]] = None,
                 source_ip: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 tenant_id: Optional[pulumi.Input[str]] = None,
                 trust_ca_cn: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 websocket_override: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a EndpointControlFctemsOverride resource.
        """
        if call_timeout is not None:
            pulumi.set(__self__, "call_timeout", call_timeout)
        if capabilities is not None:
            pulumi.set(__self__, "capabilities", capabilities)
        if cloud_server_type is not None:
            pulumi.set(__self__, "cloud_server_type", cloud_server_type)
        if dirty_reason is not None:
            pulumi.set(__self__, "dirty_reason", dirty_reason)
        if ems_id is not None:
            pulumi.set(__self__, "ems_id", ems_id)
        if fortinetone_cloud_authentication is not None:
            pulumi.set(__self__, "fortinetone_cloud_authentication", fortinetone_cloud_authentication)
        if https_port is not None:
            pulumi.set(__self__, "https_port", https_port)
        if interface is not None:
            pulumi.set(__self__, "interface", interface)
        if interface_select_method is not None:
            pulumi.set(__self__, "interface_select_method", interface_select_method)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if out_of_sync_threshold is not None:
            pulumi.set(__self__, "out_of_sync_threshold", out_of_sync_threshold)
        if preserve_ssl_session is not None:
            pulumi.set(__self__, "preserve_ssl_session", preserve_ssl_session)
        if pull_avatars is not None:
            pulumi.set(__self__, "pull_avatars", pull_avatars)
        if pull_malware_hash is not None:
            pulumi.set(__self__, "pull_malware_hash", pull_malware_hash)
        if pull_sysinfo is not None:
            pulumi.set(__self__, "pull_sysinfo", pull_sysinfo)
        if pull_tags is not None:
            pulumi.set(__self__, "pull_tags", pull_tags)
        if pull_vulnerabilities is not None:
            pulumi.set(__self__, "pull_vulnerabilities", pull_vulnerabilities)
        if serial_number is not None:
            pulumi.set(__self__, "serial_number", serial_number)
        if server is not None:
            pulumi.set(__self__, "server", server)
        if source_ip is not None:
            pulumi.set(__self__, "source_ip", source_ip)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if tenant_id is not None:
            pulumi.set(__self__, "tenant_id", tenant_id)
        if trust_ca_cn is not None:
            pulumi.set(__self__, "trust_ca_cn", trust_ca_cn)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)
        if websocket_override is not None:
            pulumi.set(__self__, "websocket_override", websocket_override)

    @property
    @pulumi.getter(name="callTimeout")
    def call_timeout(self) -> Optional[pulumi.Input[int]]:
        return pulumi.get(self, "call_timeout")

    @call_timeout.setter
    def call_timeout(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "call_timeout", value)

    @property
    @pulumi.getter
    def capabilities(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "capabilities")

    @capabilities.setter
    def capabilities(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "capabilities", value)

    @property
    @pulumi.getter(name="cloudServerType")
    def cloud_server_type(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "cloud_server_type")

    @cloud_server_type.setter
    def cloud_server_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cloud_server_type", value)

    @property
    @pulumi.getter(name="dirtyReason")
    def dirty_reason(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "dirty_reason")

    @dirty_reason.setter
    def dirty_reason(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dirty_reason", value)

    @property
    @pulumi.getter(name="emsId")
    def ems_id(self) -> Optional[pulumi.Input[int]]:
        return pulumi.get(self, "ems_id")

    @ems_id.setter
    def ems_id(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "ems_id", value)

    @property
    @pulumi.getter(name="fortinetoneCloudAuthentication")
    def fortinetone_cloud_authentication(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "fortinetone_cloud_authentication")

    @fortinetone_cloud_authentication.setter
    def fortinetone_cloud_authentication(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "fortinetone_cloud_authentication", value)

    @property
    @pulumi.getter(name="httpsPort")
    def https_port(self) -> Optional[pulumi.Input[int]]:
        return pulumi.get(self, "https_port")

    @https_port.setter
    def https_port(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "https_port", value)

    @property
    @pulumi.getter
    def interface(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "interface")

    @interface.setter
    def interface(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "interface", value)

    @property
    @pulumi.getter(name="interfaceSelectMethod")
    def interface_select_method(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "interface_select_method")

    @interface_select_method.setter
    def interface_select_method(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "interface_select_method", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="outOfSyncThreshold")
    def out_of_sync_threshold(self) -> Optional[pulumi.Input[int]]:
        return pulumi.get(self, "out_of_sync_threshold")

    @out_of_sync_threshold.setter
    def out_of_sync_threshold(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "out_of_sync_threshold", value)

    @property
    @pulumi.getter(name="preserveSslSession")
    def preserve_ssl_session(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "preserve_ssl_session")

    @preserve_ssl_session.setter
    def preserve_ssl_session(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "preserve_ssl_session", value)

    @property
    @pulumi.getter(name="pullAvatars")
    def pull_avatars(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "pull_avatars")

    @pull_avatars.setter
    def pull_avatars(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "pull_avatars", value)

    @property
    @pulumi.getter(name="pullMalwareHash")
    def pull_malware_hash(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "pull_malware_hash")

    @pull_malware_hash.setter
    def pull_malware_hash(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "pull_malware_hash", value)

    @property
    @pulumi.getter(name="pullSysinfo")
    def pull_sysinfo(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "pull_sysinfo")

    @pull_sysinfo.setter
    def pull_sysinfo(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "pull_sysinfo", value)

    @property
    @pulumi.getter(name="pullTags")
    def pull_tags(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "pull_tags")

    @pull_tags.setter
    def pull_tags(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "pull_tags", value)

    @property
    @pulumi.getter(name="pullVulnerabilities")
    def pull_vulnerabilities(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "pull_vulnerabilities")

    @pull_vulnerabilities.setter
    def pull_vulnerabilities(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "pull_vulnerabilities", value)

    @property
    @pulumi.getter(name="serialNumber")
    def serial_number(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "serial_number")

    @serial_number.setter
    def serial_number(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "serial_number", value)

    @property
    @pulumi.getter
    def server(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "server")

    @server.setter
    def server(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "server", value)

    @property
    @pulumi.getter(name="sourceIp")
    def source_ip(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "source_ip")

    @source_ip.setter
    def source_ip(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "source_ip", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter(name="tenantId")
    def tenant_id(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "tenant_id")

    @tenant_id.setter
    def tenant_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "tenant_id", value)

    @property
    @pulumi.getter(name="trustCaCn")
    def trust_ca_cn(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "trust_ca_cn")

    @trust_ca_cn.setter
    def trust_ca_cn(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "trust_ca_cn", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)

    @property
    @pulumi.getter(name="websocketOverride")
    def websocket_override(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "websocket_override")

    @websocket_override.setter
    def websocket_override(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "websocket_override", value)


@pulumi.input_type
class _EndpointControlFctemsOverrideState:
    def __init__(__self__, *,
                 call_timeout: Optional[pulumi.Input[int]] = None,
                 capabilities: Optional[pulumi.Input[str]] = None,
                 cloud_server_type: Optional[pulumi.Input[str]] = None,
                 dirty_reason: Optional[pulumi.Input[str]] = None,
                 ems_id: Optional[pulumi.Input[int]] = None,
                 fortinetone_cloud_authentication: Optional[pulumi.Input[str]] = None,
                 https_port: Optional[pulumi.Input[int]] = None,
                 interface: Optional[pulumi.Input[str]] = None,
                 interface_select_method: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 out_of_sync_threshold: Optional[pulumi.Input[int]] = None,
                 preserve_ssl_session: Optional[pulumi.Input[str]] = None,
                 pull_avatars: Optional[pulumi.Input[str]] = None,
                 pull_malware_hash: Optional[pulumi.Input[str]] = None,
                 pull_sysinfo: Optional[pulumi.Input[str]] = None,
                 pull_tags: Optional[pulumi.Input[str]] = None,
                 pull_vulnerabilities: Optional[pulumi.Input[str]] = None,
                 serial_number: Optional[pulumi.Input[str]] = None,
                 server: Optional[pulumi.Input[str]] = None,
                 source_ip: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 tenant_id: Optional[pulumi.Input[str]] = None,
                 trust_ca_cn: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 websocket_override: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering EndpointControlFctemsOverride resources.
        """
        if call_timeout is not None:
            pulumi.set(__self__, "call_timeout", call_timeout)
        if capabilities is not None:
            pulumi.set(__self__, "capabilities", capabilities)
        if cloud_server_type is not None:
            pulumi.set(__self__, "cloud_server_type", cloud_server_type)
        if dirty_reason is not None:
            pulumi.set(__self__, "dirty_reason", dirty_reason)
        if ems_id is not None:
            pulumi.set(__self__, "ems_id", ems_id)
        if fortinetone_cloud_authentication is not None:
            pulumi.set(__self__, "fortinetone_cloud_authentication", fortinetone_cloud_authentication)
        if https_port is not None:
            pulumi.set(__self__, "https_port", https_port)
        if interface is not None:
            pulumi.set(__self__, "interface", interface)
        if interface_select_method is not None:
            pulumi.set(__self__, "interface_select_method", interface_select_method)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if out_of_sync_threshold is not None:
            pulumi.set(__self__, "out_of_sync_threshold", out_of_sync_threshold)
        if preserve_ssl_session is not None:
            pulumi.set(__self__, "preserve_ssl_session", preserve_ssl_session)
        if pull_avatars is not None:
            pulumi.set(__self__, "pull_avatars", pull_avatars)
        if pull_malware_hash is not None:
            pulumi.set(__self__, "pull_malware_hash", pull_malware_hash)
        if pull_sysinfo is not None:
            pulumi.set(__self__, "pull_sysinfo", pull_sysinfo)
        if pull_tags is not None:
            pulumi.set(__self__, "pull_tags", pull_tags)
        if pull_vulnerabilities is not None:
            pulumi.set(__self__, "pull_vulnerabilities", pull_vulnerabilities)
        if serial_number is not None:
            pulumi.set(__self__, "serial_number", serial_number)
        if server is not None:
            pulumi.set(__self__, "server", server)
        if source_ip is not None:
            pulumi.set(__self__, "source_ip", source_ip)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if tenant_id is not None:
            pulumi.set(__self__, "tenant_id", tenant_id)
        if trust_ca_cn is not None:
            pulumi.set(__self__, "trust_ca_cn", trust_ca_cn)
        if vdomparam is not None:
            pulumi.set(__self__, "vdomparam", vdomparam)
        if websocket_override is not None:
            pulumi.set(__self__, "websocket_override", websocket_override)

    @property
    @pulumi.getter(name="callTimeout")
    def call_timeout(self) -> Optional[pulumi.Input[int]]:
        return pulumi.get(self, "call_timeout")

    @call_timeout.setter
    def call_timeout(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "call_timeout", value)

    @property
    @pulumi.getter
    def capabilities(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "capabilities")

    @capabilities.setter
    def capabilities(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "capabilities", value)

    @property
    @pulumi.getter(name="cloudServerType")
    def cloud_server_type(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "cloud_server_type")

    @cloud_server_type.setter
    def cloud_server_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cloud_server_type", value)

    @property
    @pulumi.getter(name="dirtyReason")
    def dirty_reason(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "dirty_reason")

    @dirty_reason.setter
    def dirty_reason(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "dirty_reason", value)

    @property
    @pulumi.getter(name="emsId")
    def ems_id(self) -> Optional[pulumi.Input[int]]:
        return pulumi.get(self, "ems_id")

    @ems_id.setter
    def ems_id(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "ems_id", value)

    @property
    @pulumi.getter(name="fortinetoneCloudAuthentication")
    def fortinetone_cloud_authentication(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "fortinetone_cloud_authentication")

    @fortinetone_cloud_authentication.setter
    def fortinetone_cloud_authentication(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "fortinetone_cloud_authentication", value)

    @property
    @pulumi.getter(name="httpsPort")
    def https_port(self) -> Optional[pulumi.Input[int]]:
        return pulumi.get(self, "https_port")

    @https_port.setter
    def https_port(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "https_port", value)

    @property
    @pulumi.getter
    def interface(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "interface")

    @interface.setter
    def interface(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "interface", value)

    @property
    @pulumi.getter(name="interfaceSelectMethod")
    def interface_select_method(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "interface_select_method")

    @interface_select_method.setter
    def interface_select_method(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "interface_select_method", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="outOfSyncThreshold")
    def out_of_sync_threshold(self) -> Optional[pulumi.Input[int]]:
        return pulumi.get(self, "out_of_sync_threshold")

    @out_of_sync_threshold.setter
    def out_of_sync_threshold(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "out_of_sync_threshold", value)

    @property
    @pulumi.getter(name="preserveSslSession")
    def preserve_ssl_session(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "preserve_ssl_session")

    @preserve_ssl_session.setter
    def preserve_ssl_session(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "preserve_ssl_session", value)

    @property
    @pulumi.getter(name="pullAvatars")
    def pull_avatars(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "pull_avatars")

    @pull_avatars.setter
    def pull_avatars(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "pull_avatars", value)

    @property
    @pulumi.getter(name="pullMalwareHash")
    def pull_malware_hash(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "pull_malware_hash")

    @pull_malware_hash.setter
    def pull_malware_hash(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "pull_malware_hash", value)

    @property
    @pulumi.getter(name="pullSysinfo")
    def pull_sysinfo(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "pull_sysinfo")

    @pull_sysinfo.setter
    def pull_sysinfo(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "pull_sysinfo", value)

    @property
    @pulumi.getter(name="pullTags")
    def pull_tags(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "pull_tags")

    @pull_tags.setter
    def pull_tags(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "pull_tags", value)

    @property
    @pulumi.getter(name="pullVulnerabilities")
    def pull_vulnerabilities(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "pull_vulnerabilities")

    @pull_vulnerabilities.setter
    def pull_vulnerabilities(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "pull_vulnerabilities", value)

    @property
    @pulumi.getter(name="serialNumber")
    def serial_number(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "serial_number")

    @serial_number.setter
    def serial_number(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "serial_number", value)

    @property
    @pulumi.getter
    def server(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "server")

    @server.setter
    def server(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "server", value)

    @property
    @pulumi.getter(name="sourceIp")
    def source_ip(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "source_ip")

    @source_ip.setter
    def source_ip(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "source_ip", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter(name="tenantId")
    def tenant_id(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "tenant_id")

    @tenant_id.setter
    def tenant_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "tenant_id", value)

    @property
    @pulumi.getter(name="trustCaCn")
    def trust_ca_cn(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "trust_ca_cn")

    @trust_ca_cn.setter
    def trust_ca_cn(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "trust_ca_cn", value)

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "vdomparam")

    @vdomparam.setter
    def vdomparam(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdomparam", value)

    @property
    @pulumi.getter(name="websocketOverride")
    def websocket_override(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "websocket_override")

    @websocket_override.setter
    def websocket_override(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "websocket_override", value)


class EndpointControlFctemsOverride(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 call_timeout: Optional[pulumi.Input[int]] = None,
                 capabilities: Optional[pulumi.Input[str]] = None,
                 cloud_server_type: Optional[pulumi.Input[str]] = None,
                 dirty_reason: Optional[pulumi.Input[str]] = None,
                 ems_id: Optional[pulumi.Input[int]] = None,
                 fortinetone_cloud_authentication: Optional[pulumi.Input[str]] = None,
                 https_port: Optional[pulumi.Input[int]] = None,
                 interface: Optional[pulumi.Input[str]] = None,
                 interface_select_method: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 out_of_sync_threshold: Optional[pulumi.Input[int]] = None,
                 preserve_ssl_session: Optional[pulumi.Input[str]] = None,
                 pull_avatars: Optional[pulumi.Input[str]] = None,
                 pull_malware_hash: Optional[pulumi.Input[str]] = None,
                 pull_sysinfo: Optional[pulumi.Input[str]] = None,
                 pull_tags: Optional[pulumi.Input[str]] = None,
                 pull_vulnerabilities: Optional[pulumi.Input[str]] = None,
                 serial_number: Optional[pulumi.Input[str]] = None,
                 server: Optional[pulumi.Input[str]] = None,
                 source_ip: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 tenant_id: Optional[pulumi.Input[str]] = None,
                 trust_ca_cn: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 websocket_override: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Create a EndpointControlFctemsOverride resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[EndpointControlFctemsOverrideArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a EndpointControlFctemsOverride resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param EndpointControlFctemsOverrideArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(EndpointControlFctemsOverrideArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 call_timeout: Optional[pulumi.Input[int]] = None,
                 capabilities: Optional[pulumi.Input[str]] = None,
                 cloud_server_type: Optional[pulumi.Input[str]] = None,
                 dirty_reason: Optional[pulumi.Input[str]] = None,
                 ems_id: Optional[pulumi.Input[int]] = None,
                 fortinetone_cloud_authentication: Optional[pulumi.Input[str]] = None,
                 https_port: Optional[pulumi.Input[int]] = None,
                 interface: Optional[pulumi.Input[str]] = None,
                 interface_select_method: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 out_of_sync_threshold: Optional[pulumi.Input[int]] = None,
                 preserve_ssl_session: Optional[pulumi.Input[str]] = None,
                 pull_avatars: Optional[pulumi.Input[str]] = None,
                 pull_malware_hash: Optional[pulumi.Input[str]] = None,
                 pull_sysinfo: Optional[pulumi.Input[str]] = None,
                 pull_tags: Optional[pulumi.Input[str]] = None,
                 pull_vulnerabilities: Optional[pulumi.Input[str]] = None,
                 serial_number: Optional[pulumi.Input[str]] = None,
                 server: Optional[pulumi.Input[str]] = None,
                 source_ip: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 tenant_id: Optional[pulumi.Input[str]] = None,
                 trust_ca_cn: Optional[pulumi.Input[str]] = None,
                 vdomparam: Optional[pulumi.Input[str]] = None,
                 websocket_override: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = EndpointControlFctemsOverrideArgs.__new__(EndpointControlFctemsOverrideArgs)

            __props__.__dict__["call_timeout"] = call_timeout
            __props__.__dict__["capabilities"] = capabilities
            __props__.__dict__["cloud_server_type"] = cloud_server_type
            __props__.__dict__["dirty_reason"] = dirty_reason
            __props__.__dict__["ems_id"] = ems_id
            __props__.__dict__["fortinetone_cloud_authentication"] = fortinetone_cloud_authentication
            __props__.__dict__["https_port"] = https_port
            __props__.__dict__["interface"] = interface
            __props__.__dict__["interface_select_method"] = interface_select_method
            __props__.__dict__["name"] = name
            __props__.__dict__["out_of_sync_threshold"] = out_of_sync_threshold
            __props__.__dict__["preserve_ssl_session"] = preserve_ssl_session
            __props__.__dict__["pull_avatars"] = pull_avatars
            __props__.__dict__["pull_malware_hash"] = pull_malware_hash
            __props__.__dict__["pull_sysinfo"] = pull_sysinfo
            __props__.__dict__["pull_tags"] = pull_tags
            __props__.__dict__["pull_vulnerabilities"] = pull_vulnerabilities
            __props__.__dict__["serial_number"] = serial_number
            __props__.__dict__["server"] = server
            __props__.__dict__["source_ip"] = source_ip
            __props__.__dict__["status"] = status
            __props__.__dict__["tenant_id"] = tenant_id
            __props__.__dict__["trust_ca_cn"] = trust_ca_cn
            __props__.__dict__["vdomparam"] = vdomparam
            __props__.__dict__["websocket_override"] = websocket_override
        super(EndpointControlFctemsOverride, __self__).__init__(
            'fortios:index/endpointControlFctemsOverride:EndpointControlFctemsOverride',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            call_timeout: Optional[pulumi.Input[int]] = None,
            capabilities: Optional[pulumi.Input[str]] = None,
            cloud_server_type: Optional[pulumi.Input[str]] = None,
            dirty_reason: Optional[pulumi.Input[str]] = None,
            ems_id: Optional[pulumi.Input[int]] = None,
            fortinetone_cloud_authentication: Optional[pulumi.Input[str]] = None,
            https_port: Optional[pulumi.Input[int]] = None,
            interface: Optional[pulumi.Input[str]] = None,
            interface_select_method: Optional[pulumi.Input[str]] = None,
            name: Optional[pulumi.Input[str]] = None,
            out_of_sync_threshold: Optional[pulumi.Input[int]] = None,
            preserve_ssl_session: Optional[pulumi.Input[str]] = None,
            pull_avatars: Optional[pulumi.Input[str]] = None,
            pull_malware_hash: Optional[pulumi.Input[str]] = None,
            pull_sysinfo: Optional[pulumi.Input[str]] = None,
            pull_tags: Optional[pulumi.Input[str]] = None,
            pull_vulnerabilities: Optional[pulumi.Input[str]] = None,
            serial_number: Optional[pulumi.Input[str]] = None,
            server: Optional[pulumi.Input[str]] = None,
            source_ip: Optional[pulumi.Input[str]] = None,
            status: Optional[pulumi.Input[str]] = None,
            tenant_id: Optional[pulumi.Input[str]] = None,
            trust_ca_cn: Optional[pulumi.Input[str]] = None,
            vdomparam: Optional[pulumi.Input[str]] = None,
            websocket_override: Optional[pulumi.Input[str]] = None) -> 'EndpointControlFctemsOverride':
        """
        Get an existing EndpointControlFctemsOverride resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _EndpointControlFctemsOverrideState.__new__(_EndpointControlFctemsOverrideState)

        __props__.__dict__["call_timeout"] = call_timeout
        __props__.__dict__["capabilities"] = capabilities
        __props__.__dict__["cloud_server_type"] = cloud_server_type
        __props__.__dict__["dirty_reason"] = dirty_reason
        __props__.__dict__["ems_id"] = ems_id
        __props__.__dict__["fortinetone_cloud_authentication"] = fortinetone_cloud_authentication
        __props__.__dict__["https_port"] = https_port
        __props__.__dict__["interface"] = interface
        __props__.__dict__["interface_select_method"] = interface_select_method
        __props__.__dict__["name"] = name
        __props__.__dict__["out_of_sync_threshold"] = out_of_sync_threshold
        __props__.__dict__["preserve_ssl_session"] = preserve_ssl_session
        __props__.__dict__["pull_avatars"] = pull_avatars
        __props__.__dict__["pull_malware_hash"] = pull_malware_hash
        __props__.__dict__["pull_sysinfo"] = pull_sysinfo
        __props__.__dict__["pull_tags"] = pull_tags
        __props__.__dict__["pull_vulnerabilities"] = pull_vulnerabilities
        __props__.__dict__["serial_number"] = serial_number
        __props__.__dict__["server"] = server
        __props__.__dict__["source_ip"] = source_ip
        __props__.__dict__["status"] = status
        __props__.__dict__["tenant_id"] = tenant_id
        __props__.__dict__["trust_ca_cn"] = trust_ca_cn
        __props__.__dict__["vdomparam"] = vdomparam
        __props__.__dict__["websocket_override"] = websocket_override
        return EndpointControlFctemsOverride(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="callTimeout")
    def call_timeout(self) -> pulumi.Output[int]:
        return pulumi.get(self, "call_timeout")

    @property
    @pulumi.getter
    def capabilities(self) -> pulumi.Output[str]:
        return pulumi.get(self, "capabilities")

    @property
    @pulumi.getter(name="cloudServerType")
    def cloud_server_type(self) -> pulumi.Output[str]:
        return pulumi.get(self, "cloud_server_type")

    @property
    @pulumi.getter(name="dirtyReason")
    def dirty_reason(self) -> pulumi.Output[str]:
        return pulumi.get(self, "dirty_reason")

    @property
    @pulumi.getter(name="emsId")
    def ems_id(self) -> pulumi.Output[int]:
        return pulumi.get(self, "ems_id")

    @property
    @pulumi.getter(name="fortinetoneCloudAuthentication")
    def fortinetone_cloud_authentication(self) -> pulumi.Output[str]:
        return pulumi.get(self, "fortinetone_cloud_authentication")

    @property
    @pulumi.getter(name="httpsPort")
    def https_port(self) -> pulumi.Output[int]:
        return pulumi.get(self, "https_port")

    @property
    @pulumi.getter
    def interface(self) -> pulumi.Output[str]:
        return pulumi.get(self, "interface")

    @property
    @pulumi.getter(name="interfaceSelectMethod")
    def interface_select_method(self) -> pulumi.Output[str]:
        return pulumi.get(self, "interface_select_method")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="outOfSyncThreshold")
    def out_of_sync_threshold(self) -> pulumi.Output[int]:
        return pulumi.get(self, "out_of_sync_threshold")

    @property
    @pulumi.getter(name="preserveSslSession")
    def preserve_ssl_session(self) -> pulumi.Output[str]:
        return pulumi.get(self, "preserve_ssl_session")

    @property
    @pulumi.getter(name="pullAvatars")
    def pull_avatars(self) -> pulumi.Output[str]:
        return pulumi.get(self, "pull_avatars")

    @property
    @pulumi.getter(name="pullMalwareHash")
    def pull_malware_hash(self) -> pulumi.Output[str]:
        return pulumi.get(self, "pull_malware_hash")

    @property
    @pulumi.getter(name="pullSysinfo")
    def pull_sysinfo(self) -> pulumi.Output[str]:
        return pulumi.get(self, "pull_sysinfo")

    @property
    @pulumi.getter(name="pullTags")
    def pull_tags(self) -> pulumi.Output[str]:
        return pulumi.get(self, "pull_tags")

    @property
    @pulumi.getter(name="pullVulnerabilities")
    def pull_vulnerabilities(self) -> pulumi.Output[str]:
        return pulumi.get(self, "pull_vulnerabilities")

    @property
    @pulumi.getter(name="serialNumber")
    def serial_number(self) -> pulumi.Output[str]:
        return pulumi.get(self, "serial_number")

    @property
    @pulumi.getter
    def server(self) -> pulumi.Output[str]:
        return pulumi.get(self, "server")

    @property
    @pulumi.getter(name="sourceIp")
    def source_ip(self) -> pulumi.Output[str]:
        return pulumi.get(self, "source_ip")

    @property
    @pulumi.getter
    def status(self) -> pulumi.Output[str]:
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="tenantId")
    def tenant_id(self) -> pulumi.Output[str]:
        return pulumi.get(self, "tenant_id")

    @property
    @pulumi.getter(name="trustCaCn")
    def trust_ca_cn(self) -> pulumi.Output[str]:
        return pulumi.get(self, "trust_ca_cn")

    @property
    @pulumi.getter
    def vdomparam(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "vdomparam")

    @property
    @pulumi.getter(name="websocketOverride")
    def websocket_override(self) -> pulumi.Output[str]:
        return pulumi.get(self, "websocket_override")

