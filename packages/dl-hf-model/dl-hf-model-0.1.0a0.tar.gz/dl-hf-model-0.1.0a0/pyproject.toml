[tool.poetry]
name = "dl-hf-model"
version = "0.1.0-alpha.0"
description = "Download and cache a hf model for a given url, save to models dir"
authors = ["ffreemt"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/ffreemt/dl-hf-model"

[tool.poetry.dependencies]
python = "^3.10"
set-loglevel = "^0.1.2"
typer = "^0.4.1"
install = "^1.3.5"
huggingface-hub = "^0.16.4"
loguru = "^0.7.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.0.278"
pytest = "^7.1"
flake8 = "^3.9.2"
isort = "^5.10.1"
black = "^22.3.0"
pylint = "^2.14.2"
pyright = "^1.1.254"
pydocstyle = "^6.1.1"
toml = "^0.10.2"
poethepoet = "^0.10.0"

[tool.poe.executor]
type = "poetry"

[tool.poe.tasks]
memo = "echo poe test or poetry run poe test"
test = "pytest tests"
pyright = "pyright dl_hf_model"
flake8 = "flake8 dl_hf_model --ignore F401,E501,F841"
check = ["pyright", "flake8"]
export = "poetry export --without-hashes -f requirements.txt -o requirements.txt"
build = "poetry build"
publish = "poetry publish"
release = ["test", "build", "publish"]
lint = { cmd = "pylint dl_hf_model" }
isort = "isort tests dl_hf_model"
black = "black tests dl_hf_model"
format = ["isort", "black"]
docstyle = "pydocstyle --convention=google tests dl_hf_model"
prerelease = {cmd = "poetry version prerelease && sync-version"}
tunnel = {cmd = "ssh -CN ip_or_hostname_defined_in_hosts -L 9091:127.0.0.1:9091"}

[tool.poetry.scripts]
"dl-hf-model" = "dl_hf_model.__main__:app"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --doctest-modules"
log_cli = true
testpaths = [
    "tests",
    # "integration",
]

[tool.black]
skip-string-normalization = 0

[tool.isort]
profile = "black"
multi_line_output = 3
