[tool]

[tool.poetry]
name = "django_url_security"
version = "v0.0.1"
homepage = "https://github.com/Edrolo/django-url-security"
description = "Django URL Security provides tests to ensure all the private endpoints in your Django project are private."
authors = ["Matt Fisher <m@ttfisher.com>"]
readme = "README.md"
license =  "MIT"
classifiers=[
    'License :: OSI Approved :: MIT License',
    'Natural Language :: English',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
]
include = [
    "LICENSE",
    "django_url_security/py.typed"
]

[tool.poetry.dependencies]
python = "^3.8"
importlib_metadata = "^3.4.0"
django = "^3.2"
parameterized = "^0.9.0"

[tool.poetry.group.dev.dependencies]
mkdocs-material = "^6.1.5"
pytest = "^7.0"
pytest-cov = "^4.1.0"
pylint = "^2.17.0"
mypy = "1.4.1"
pip = "^23.1.2"
setuptools = "^68.0.0"
pre-commit = "^3.3.3"
blue = "^0.9.1"
pytest-django = "^4.5.2"

[tool.blue]
line-length=100

[tool.pylint.reports]
output-format="colorized"
reports="y"
include-ids="yes"
msg-template="{msg_id}:{line:3d},{column}: {obj}: {msg}"

[tool.pytest.ini_options]
addopts = "--cov=django_url_security --cov-branch --cov-report term-missing  -vv --color=yes --cov-fail-under 100"
python_files = "tests.py test_*.py *_tests.py"
django_find_project = false
pythonpath = ['.', 'example_project']
DJANGO_SETTINGS_MODULE = 'example_site.settings'

[tool.ruff]
select = [
    # See: https://beta.ruff.rs/docs/rules/
    'F', # Pyflakes
    'E', # pycodestyle Error
#    'W', # pycodestyle Warning
#    'C90', # mccabe
    'I', # isort
    'N', # pep8-naming
#    'D', # pydocstyle
    'UP', # pyupgrade
#    'YTT', # flake8-2020
#    'ANN', # flake8-annotations
#    'S', # flake8-bandit
#    'BLE', # flake8-blind-except
#    'FBT', # flake8-boolean-trap
    'B', # flake8-bugbear
#    'A', # flake8-builtins
    'COM', # flake8-commas
    'C4', # flake8-comprehensions
#    'DTZ', # flake8-datetimez
#    'T10', # flake8-debugger
    'DJ', # flake8-django
#    'EM', # flake8-errmsg
#    'EXE', # flake8-executable
#    'ISC', # flake8-implicit-str-concat
    'ICN', # flake8-import-conventions
#    'G', # flake8-logging-format  <== good candidate
#    'INP', # flake8-no-pep420
#    'PIE', # flake8-pie
#    'T20', # flake8-print
#    'PYI', # flake8-pyi
#    'PT', # flake8-pytest-style
#    'Q', # flake8-quotes
#    'RSE', # flake8-raise
#    'RET', # flake8-return
#    'SLF', # flake8-self
#    'SIM', # flake8-simplify
#    'TID', # flake8-tidy-imports
#    'TCH', # flake8-type-checking
#    'ARG', # flake8-unused-arguments
    'PTH', # flake8-use-pathlib
#    'ERA', # eradicate
#    'PD', # pandas-vet
#    'PGH', # pygrep-hooks
#    'PL', # Pylint (PLC*)
#    'PLC', # Pylint Convention
#    'PLE', # Pylint Error
#    'PLR', # Pylint Refactor
#    'PLW', # Pylint Warning
    'TRY', # tryceratops
#    'NPY', # NumPy-specific rules
    'RUF', # Ruff-specific rules
]
ignore = []
line-length = 100
target-version = "py38"
exclude = []

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
