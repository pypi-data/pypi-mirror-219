import typing
from TransformsAI.Animo import GridObject, ObjectInfo, VoxelGrid, GridTransform
from TransformsAI.Animo.Numerics import Vec2Int, Vec3Int
from System import Guid, ValueTuple_2
from System.Collections.Generic import List_1
from TransformsAI.Animo.Intents import Intent, UseIntent
from TransformsAI.Animo.Constants import TypeIds

class FluteObject(GridObject):
    def __init__(self) -> None: ...
    Info : ObjectInfo
    @property
    def BurnAmount(self) -> int: ...
    @property
    def Cell(self) -> Vec2Int: ...
    @property
    def Container(self) -> GridObject: ...
    @Container.setter
    def Container(self, value: GridObject) -> GridObject: ...
    @property
    def Direction(self) -> Vec2Int: ...
    @property
    def Grid(self) -> VoxelGrid: ...
    @property
    def InstanceId(self) -> Guid: ...
    @property
    def IntentsFiredThisTurn(self) -> List_1[Intent]: ...
    @property
    def IsDestroyed(self) -> bool: ...
    @property
    def IsOnGrid(self) -> bool: ...
    @property
    def IsStoodUpon(self) -> bool: ...
    @property
    def MainIntent(self) -> Intent: ...
    @property
    def Position(self) -> Vec3Int: ...
    @property
    def PushedPosition(self) -> typing.Optional[Vec3Int]: ...
    @PushedPosition.setter
    def PushedPosition(self, value: typing.Optional[Vec3Int]) -> typing.Optional[Vec3Int]: ...
    @property
    def StateObservation(self) -> ValueTuple_2[float, float]: ...
    @property
    def Transform(self) -> GridTransform: ...
    @property
    def TransformOnGrid(self) -> None: ...
    @TransformOnGrid.setter
    def TransformOnGrid(self, value: typing.Optional[GridTransform]) -> None: ...
    @property
    def TypeId(self) -> TypeIds: ...
    @property
    def UsedIntent(self) -> UseIntent: ...
    @property
    def VariantId(self) -> int: ...
    @VariantId.setter
    def VariantId(self, value: int) -> int: ...

