datasets:
  cifar100_sub_splits: &cifar100_sub_splits !import_call
    _name: &dataset_name 'cifar100'
    _root: &root_dir !join ['~/datasets/', *dataset_name]
    key: 'torchdistill.datasets.util.split_dataset'
    init:
      kwargs:
        dataset_id: 'original training dataset'
        dataset: !import_call
          key: 'torchvision.datasets.CIFAR100'
          init:
            kwargs:
              root: *root_dir
              train: True
              download: True
        lengths: [0.9, 0.1]
        generator_seed: 42
        sub_splits_configs:
          - transform: !import_call
              key: 'torchvision.transforms.Compose'
              init:
                kwargs:
                  transforms:
                  - !import_call
                    key: 'torchvision.transforms.RandomCrop'
                    init:
                      kwargs:
                        size: 32
                        padding: 4
                  - !import_call
                    key: 'torchvision.transforms.RandomHorizontalFlip'
                    init:
                      kwargs:
                        p: 0.5
                  - !import_call
                    key: 'torchvision.transforms.ToTensor'
                    init:
                  - !import_call
                    key: 'torchvision.transforms.Normalize'
                    init:
                      kwargs: &normalize_kwargs
                        mean: [0.5070754, 0.48655024, 0.44091907]
                        std: [0.26733398, 0.25643876, 0.2761503]
          - transform: !import_call
              key: 'torchvision.transforms.Compose'
              init:
                kwargs:
                  transforms:
                    - !import_call
                      key: 'torchvision.transforms.ToTensor'
                      init:
                    - !import_call
                      key: 'torchvision.transforms.Normalize'
                      init:
                        kwargs: *normalize_kwargs
  &cifar100_train cifar100/sub_train: !simple_access
    data: *cifar100_sub_splits
    index_or_key: 0
  &cifar100_val cifar100/sub_val: !simple_access
    data: *cifar100_sub_splits
    index_or_key: 1
  &cifar100_test cifar100/test: !import_call
    key: 'torchvision.datasets.CIFAR100'
    init:
      kwargs:
        root: *root_dir
        train: False
        download: True
        transform: !import_call
          key: 'torchvision.transforms.Compose'
          init:
            kwargs:
              transforms:
                - !import_call
                  key: 'torchvision.transforms.ToTensor'
                  init:
                - !import_call
                  key: 'torchvision.transforms.Normalize'
                  init:
                    kwargs: *normalize_kwargs

models:
  model:
    key: &student_model_key 'wide_resnet40_4'
    kwargs:
      dropout_p: 0.0
      num_classes: 100
      pretrained: False
    _experiment: &student_experiment !join [*dataset_name, '-', *student_model_key]
    src_ckpt:
    dst_ckpt: !join ['./resource/ckpt/', *dataset_name, '/ce/', *student_experiment, '-hyperparameter_tuning.pt']

train:
  log_freq: 100
  num_epochs: 200
  train_data_loader:
    dataset_id: *cifar100_train
    sampler:
      class_or_func: !import_get
        key: 'torch.utils.data.RandomSampler'
      kwargs:
    kwargs:
      batch_size: 128
      num_workers: 16
      pin_memory: True
      drop_last: False
    cache_output:
  val_data_loader:
    dataset_id: *cifar100_val
    sampler: &val_sampler
      class_or_func: !import_get
        key: 'torch.utils.data.SequentialSampler'
      kwargs:
    kwargs:
      batch_size: 128
      num_workers: 16
      pin_memory: True
      drop_last: False
  model:
    adaptations:
    sequential: []
    wrapper: 'DistributedDataParallel'
    requires_grad: True
    frozen_modules: []
  optimizer:
    key: 'SGD'
    kwargs:
      lr: 0.1
      momentum: 0.9
      weight_decay: 0.0005
  scheduler:
    key: 'MultiStepLR'
    kwargs:
      milestones: [60, 120, 160]
      gamma: 0.2
  criterion:
    key: 'WeightedSumLoss'
    kwargs:
      sub_terms:
        ce:
          criterion:
            key: 'CrossEntropyLoss'
            kwargs:
              reduction: 'mean'
          criterion_wrapper:
            key: 'SimpleLossWrapper'
            kwargs:
              input:
                is_from_teacher: False
                module_path: '.'
                io: 'output'
              target:
                uses_label: True
          weight: 1.0

test:
  test_data_loader:
    dataset_id: *cifar100_test
    sampler: *val_sampler
    kwargs:
      batch_size: 1
      num_workers: 16
      pin_memory: True
      drop_last: False
