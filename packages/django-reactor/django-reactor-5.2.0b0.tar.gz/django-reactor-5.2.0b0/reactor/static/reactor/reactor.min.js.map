{
  "version": 3,
  "sources": ["../../../node_modules/reconnecting-websocket/dist/reconnecting-websocket-mjs.js", "../../../node_modules/morphdom/dist/morphdom-esm.js", "reactor-boost.js", "reactor.js"],
  "sourcesContent": ["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\n\nvar Event = /** @class */ (function () {\r\n    function Event(type, target) {\r\n        this.target = target;\r\n        this.type = type;\r\n    }\r\n    return Event;\r\n}());\r\nvar ErrorEvent = /** @class */ (function (_super) {\r\n    __extends(ErrorEvent, _super);\r\n    function ErrorEvent(error, target) {\r\n        var _this = _super.call(this, 'error', target) || this;\r\n        _this.message = error.message;\r\n        _this.error = error;\r\n        return _this;\r\n    }\r\n    return ErrorEvent;\r\n}(Event));\r\nvar CloseEvent = /** @class */ (function (_super) {\r\n    __extends(CloseEvent, _super);\r\n    function CloseEvent(code, reason, target) {\r\n        if (code === void 0) { code = 1000; }\r\n        if (reason === void 0) { reason = ''; }\r\n        var _this = _super.call(this, 'close', target) || this;\r\n        _this.wasClean = true;\r\n        _this.code = code;\r\n        _this.reason = reason;\r\n        return _this;\r\n    }\r\n    return CloseEvent;\r\n}(Event));\n\n/*!\r\n * Reconnecting WebSocket\r\n * by Pedro Ladaria <pedro.ladaria@gmail.com>\r\n * https://github.com/pladaria/reconnecting-websocket\r\n * License MIT\r\n */\r\nvar getGlobalWebSocket = function () {\r\n    if (typeof WebSocket !== 'undefined') {\r\n        // @ts-ignore\r\n        return WebSocket;\r\n    }\r\n};\r\n/**\r\n * Returns true if given argument looks like a WebSocket class\r\n */\r\nvar isWebSocket = function (w) { return typeof w !== 'undefined' && !!w && w.CLOSING === 2; };\r\nvar DEFAULT = {\r\n    maxReconnectionDelay: 10000,\r\n    minReconnectionDelay: 1000 + Math.random() * 4000,\r\n    minUptime: 5000,\r\n    reconnectionDelayGrowFactor: 1.3,\r\n    connectionTimeout: 4000,\r\n    maxRetries: Infinity,\r\n    maxEnqueuedMessages: Infinity,\r\n    startClosed: false,\r\n    debug: false,\r\n};\r\nvar ReconnectingWebSocket = /** @class */ (function () {\r\n    function ReconnectingWebSocket(url, protocols, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        this._listeners = {\r\n            error: [],\r\n            message: [],\r\n            open: [],\r\n            close: [],\r\n        };\r\n        this._retryCount = -1;\r\n        this._shouldReconnect = true;\r\n        this._connectLock = false;\r\n        this._binaryType = 'blob';\r\n        this._closeCalled = false;\r\n        this._messageQueue = [];\r\n        /**\r\n         * An event listener to be called when the WebSocket connection's readyState changes to CLOSED\r\n         */\r\n        this.onclose = null;\r\n        /**\r\n         * An event listener to be called when an error occurs\r\n         */\r\n        this.onerror = null;\r\n        /**\r\n         * An event listener to be called when a message is received from the server\r\n         */\r\n        this.onmessage = null;\r\n        /**\r\n         * An event listener to be called when the WebSocket connection's readyState changes to OPEN;\r\n         * this indicates that the connection is ready to send and receive data\r\n         */\r\n        this.onopen = null;\r\n        this._handleOpen = function (event) {\r\n            _this._debug('open event');\r\n            var _a = _this._options.minUptime, minUptime = _a === void 0 ? DEFAULT.minUptime : _a;\r\n            clearTimeout(_this._connectTimeout);\r\n            _this._uptimeTimeout = setTimeout(function () { return _this._acceptOpen(); }, minUptime);\r\n            _this._ws.binaryType = _this._binaryType;\r\n            // send enqueued messages (messages sent before websocket open event)\r\n            _this._messageQueue.forEach(function (message) { return _this._ws.send(message); });\r\n            _this._messageQueue = [];\r\n            if (_this.onopen) {\r\n                _this.onopen(event);\r\n            }\r\n            _this._listeners.open.forEach(function (listener) { return _this._callEventListener(event, listener); });\r\n        };\r\n        this._handleMessage = function (event) {\r\n            _this._debug('message event');\r\n            if (_this.onmessage) {\r\n                _this.onmessage(event);\r\n            }\r\n            _this._listeners.message.forEach(function (listener) { return _this._callEventListener(event, listener); });\r\n        };\r\n        this._handleError = function (event) {\r\n            _this._debug('error event', event.message);\r\n            _this._disconnect(undefined, event.message === 'TIMEOUT' ? 'timeout' : undefined);\r\n            if (_this.onerror) {\r\n                _this.onerror(event);\r\n            }\r\n            _this._debug('exec error listeners');\r\n            _this._listeners.error.forEach(function (listener) { return _this._callEventListener(event, listener); });\r\n            _this._connect();\r\n        };\r\n        this._handleClose = function (event) {\r\n            _this._debug('close event');\r\n            _this._clearTimeouts();\r\n            if (_this._shouldReconnect) {\r\n                _this._connect();\r\n            }\r\n            if (_this.onclose) {\r\n                _this.onclose(event);\r\n            }\r\n            _this._listeners.close.forEach(function (listener) { return _this._callEventListener(event, listener); });\r\n        };\r\n        this._url = url;\r\n        this._protocols = protocols;\r\n        this._options = options;\r\n        if (this._options.startClosed) {\r\n            this._shouldReconnect = false;\r\n        }\r\n        this._connect();\r\n    }\r\n    Object.defineProperty(ReconnectingWebSocket, \"CONNECTING\", {\r\n        get: function () {\r\n            return 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket, \"OPEN\", {\r\n        get: function () {\r\n            return 1;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket, \"CLOSING\", {\r\n        get: function () {\r\n            return 2;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket, \"CLOSED\", {\r\n        get: function () {\r\n            return 3;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"CONNECTING\", {\r\n        get: function () {\r\n            return ReconnectingWebSocket.CONNECTING;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"OPEN\", {\r\n        get: function () {\r\n            return ReconnectingWebSocket.OPEN;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"CLOSING\", {\r\n        get: function () {\r\n            return ReconnectingWebSocket.CLOSING;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"CLOSED\", {\r\n        get: function () {\r\n            return ReconnectingWebSocket.CLOSED;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"binaryType\", {\r\n        get: function () {\r\n            return this._ws ? this._ws.binaryType : this._binaryType;\r\n        },\r\n        set: function (value) {\r\n            this._binaryType = value;\r\n            if (this._ws) {\r\n                this._ws.binaryType = value;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"retryCount\", {\r\n        /**\r\n         * Returns the number or connection retries\r\n         */\r\n        get: function () {\r\n            return Math.max(this._retryCount, 0);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"bufferedAmount\", {\r\n        /**\r\n         * The number of bytes of data that have been queued using calls to send() but not yet\r\n         * transmitted to the network. This value resets to zero once all queued data has been sent.\r\n         * This value does not reset to zero when the connection is closed; if you keep calling send(),\r\n         * this will continue to climb. Read only\r\n         */\r\n        get: function () {\r\n            var bytes = this._messageQueue.reduce(function (acc, message) {\r\n                if (typeof message === 'string') {\r\n                    acc += message.length; // not byte size\r\n                }\r\n                else if (message instanceof Blob) {\r\n                    acc += message.size;\r\n                }\r\n                else {\r\n                    acc += message.byteLength;\r\n                }\r\n                return acc;\r\n            }, 0);\r\n            return bytes + (this._ws ? this._ws.bufferedAmount : 0);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"extensions\", {\r\n        /**\r\n         * The extensions selected by the server. This is currently only the empty string or a list of\r\n         * extensions as negotiated by the connection\r\n         */\r\n        get: function () {\r\n            return this._ws ? this._ws.extensions : '';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"protocol\", {\r\n        /**\r\n         * A string indicating the name of the sub-protocol the server selected;\r\n         * this will be one of the strings specified in the protocols parameter when creating the\r\n         * WebSocket object\r\n         */\r\n        get: function () {\r\n            return this._ws ? this._ws.protocol : '';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"readyState\", {\r\n        /**\r\n         * The current state of the connection; this is one of the Ready state constants\r\n         */\r\n        get: function () {\r\n            if (this._ws) {\r\n                return this._ws.readyState;\r\n            }\r\n            return this._options.startClosed\r\n                ? ReconnectingWebSocket.CLOSED\r\n                : ReconnectingWebSocket.CONNECTING;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"url\", {\r\n        /**\r\n         * The URL as resolved by the constructor\r\n         */\r\n        get: function () {\r\n            return this._ws ? this._ws.url : '';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Closes the WebSocket connection or connection attempt, if any. If the connection is already\r\n     * CLOSED, this method does nothing\r\n     */\r\n    ReconnectingWebSocket.prototype.close = function (code, reason) {\r\n        if (code === void 0) { code = 1000; }\r\n        this._closeCalled = true;\r\n        this._shouldReconnect = false;\r\n        this._clearTimeouts();\r\n        if (!this._ws) {\r\n            this._debug('close enqueued: no ws instance');\r\n            return;\r\n        }\r\n        if (this._ws.readyState === this.CLOSED) {\r\n            this._debug('close: already closed');\r\n            return;\r\n        }\r\n        this._ws.close(code, reason);\r\n    };\r\n    /**\r\n     * Closes the WebSocket connection or connection attempt and connects again.\r\n     * Resets retry counter;\r\n     */\r\n    ReconnectingWebSocket.prototype.reconnect = function (code, reason) {\r\n        this._shouldReconnect = true;\r\n        this._closeCalled = false;\r\n        this._retryCount = -1;\r\n        if (!this._ws || this._ws.readyState === this.CLOSED) {\r\n            this._connect();\r\n        }\r\n        else {\r\n            this._disconnect(code, reason);\r\n            this._connect();\r\n        }\r\n    };\r\n    /**\r\n     * Enqueue specified data to be transmitted to the server over the WebSocket connection\r\n     */\r\n    ReconnectingWebSocket.prototype.send = function (data) {\r\n        if (this._ws && this._ws.readyState === this.OPEN) {\r\n            this._debug('send', data);\r\n            this._ws.send(data);\r\n        }\r\n        else {\r\n            var _a = this._options.maxEnqueuedMessages, maxEnqueuedMessages = _a === void 0 ? DEFAULT.maxEnqueuedMessages : _a;\r\n            if (this._messageQueue.length < maxEnqueuedMessages) {\r\n                this._debug('enqueue', data);\r\n                this._messageQueue.push(data);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Register an event handler of a specific event type\r\n     */\r\n    ReconnectingWebSocket.prototype.addEventListener = function (type, listener) {\r\n        if (this._listeners[type]) {\r\n            // @ts-ignore\r\n            this._listeners[type].push(listener);\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype.dispatchEvent = function (event) {\r\n        var e_1, _a;\r\n        var listeners = this._listeners[event.type];\r\n        if (listeners) {\r\n            try {\r\n                for (var listeners_1 = __values(listeners), listeners_1_1 = listeners_1.next(); !listeners_1_1.done; listeners_1_1 = listeners_1.next()) {\r\n                    var listener = listeners_1_1.value;\r\n                    this._callEventListener(event, listener);\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (listeners_1_1 && !listeners_1_1.done && (_a = listeners_1.return)) _a.call(listeners_1);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Removes an event listener\r\n     */\r\n    ReconnectingWebSocket.prototype.removeEventListener = function (type, listener) {\r\n        if (this._listeners[type]) {\r\n            // @ts-ignore\r\n            this._listeners[type] = this._listeners[type].filter(function (l) { return l !== listener; });\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype._debug = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (this._options.debug) {\r\n            // not using spread because compiled version uses Symbols\r\n            // tslint:disable-next-line\r\n            console.log.apply(console, __spread(['RWS>'], args));\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype._getNextDelay = function () {\r\n        var _a = this._options, _b = _a.reconnectionDelayGrowFactor, reconnectionDelayGrowFactor = _b === void 0 ? DEFAULT.reconnectionDelayGrowFactor : _b, _c = _a.minReconnectionDelay, minReconnectionDelay = _c === void 0 ? DEFAULT.minReconnectionDelay : _c, _d = _a.maxReconnectionDelay, maxReconnectionDelay = _d === void 0 ? DEFAULT.maxReconnectionDelay : _d;\r\n        var delay = 0;\r\n        if (this._retryCount > 0) {\r\n            delay =\r\n                minReconnectionDelay * Math.pow(reconnectionDelayGrowFactor, this._retryCount - 1);\r\n            if (delay > maxReconnectionDelay) {\r\n                delay = maxReconnectionDelay;\r\n            }\r\n        }\r\n        this._debug('next delay', delay);\r\n        return delay;\r\n    };\r\n    ReconnectingWebSocket.prototype._wait = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            setTimeout(resolve, _this._getNextDelay());\r\n        });\r\n    };\r\n    ReconnectingWebSocket.prototype._getNextUrl = function (urlProvider) {\r\n        if (typeof urlProvider === 'string') {\r\n            return Promise.resolve(urlProvider);\r\n        }\r\n        if (typeof urlProvider === 'function') {\r\n            var url = urlProvider();\r\n            if (typeof url === 'string') {\r\n                return Promise.resolve(url);\r\n            }\r\n            if (!!url.then) {\r\n                return url;\r\n            }\r\n        }\r\n        throw Error('Invalid URL');\r\n    };\r\n    ReconnectingWebSocket.prototype._connect = function () {\r\n        var _this = this;\r\n        if (this._connectLock || !this._shouldReconnect) {\r\n            return;\r\n        }\r\n        this._connectLock = true;\r\n        var _a = this._options, _b = _a.maxRetries, maxRetries = _b === void 0 ? DEFAULT.maxRetries : _b, _c = _a.connectionTimeout, connectionTimeout = _c === void 0 ? DEFAULT.connectionTimeout : _c, _d = _a.WebSocket, WebSocket = _d === void 0 ? getGlobalWebSocket() : _d;\r\n        if (this._retryCount >= maxRetries) {\r\n            this._debug('max retries reached', this._retryCount, '>=', maxRetries);\r\n            return;\r\n        }\r\n        this._retryCount++;\r\n        this._debug('connect', this._retryCount);\r\n        this._removeListeners();\r\n        if (!isWebSocket(WebSocket)) {\r\n            throw Error('No valid WebSocket class provided');\r\n        }\r\n        this._wait()\r\n            .then(function () { return _this._getNextUrl(_this._url); })\r\n            .then(function (url) {\r\n            // close could be called before creating the ws\r\n            if (_this._closeCalled) {\r\n                return;\r\n            }\r\n            _this._debug('connect', { url: url, protocols: _this._protocols });\r\n            _this._ws = _this._protocols\r\n                ? new WebSocket(url, _this._protocols)\r\n                : new WebSocket(url);\r\n            _this._ws.binaryType = _this._binaryType;\r\n            _this._connectLock = false;\r\n            _this._addListeners();\r\n            _this._connectTimeout = setTimeout(function () { return _this._handleTimeout(); }, connectionTimeout);\r\n        });\r\n    };\r\n    ReconnectingWebSocket.prototype._handleTimeout = function () {\r\n        this._debug('timeout event');\r\n        this._handleError(new ErrorEvent(Error('TIMEOUT'), this));\r\n    };\r\n    ReconnectingWebSocket.prototype._disconnect = function (code, reason) {\r\n        if (code === void 0) { code = 1000; }\r\n        this._clearTimeouts();\r\n        if (!this._ws) {\r\n            return;\r\n        }\r\n        this._removeListeners();\r\n        try {\r\n            this._ws.close(code, reason);\r\n            this._handleClose(new CloseEvent(code, reason, this));\r\n        }\r\n        catch (error) {\r\n            // ignore\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype._acceptOpen = function () {\r\n        this._debug('accept open');\r\n        this._retryCount = 0;\r\n    };\r\n    ReconnectingWebSocket.prototype._callEventListener = function (event, listener) {\r\n        if ('handleEvent' in listener) {\r\n            // @ts-ignore\r\n            listener.handleEvent(event);\r\n        }\r\n        else {\r\n            // @ts-ignore\r\n            listener(event);\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype._removeListeners = function () {\r\n        if (!this._ws) {\r\n            return;\r\n        }\r\n        this._debug('removeListeners');\r\n        this._ws.removeEventListener('open', this._handleOpen);\r\n        this._ws.removeEventListener('close', this._handleClose);\r\n        this._ws.removeEventListener('message', this._handleMessage);\r\n        // @ts-ignore\r\n        this._ws.removeEventListener('error', this._handleError);\r\n    };\r\n    ReconnectingWebSocket.prototype._addListeners = function () {\r\n        if (!this._ws) {\r\n            return;\r\n        }\r\n        this._debug('addListeners');\r\n        this._ws.addEventListener('open', this._handleOpen);\r\n        this._ws.addEventListener('close', this._handleClose);\r\n        this._ws.addEventListener('message', this._handleMessage);\r\n        // @ts-ignore\r\n        this._ws.addEventListener('error', this._handleError);\r\n    };\r\n    ReconnectingWebSocket.prototype._clearTimeouts = function () {\r\n        clearTimeout(this._connectTimeout);\r\n        clearTimeout(this._uptimeTimeout);\r\n    };\r\n    return ReconnectingWebSocket;\r\n}());\n\nexport default ReconnectingWebSocket;\n", "var DOCUMENT_FRAGMENT_NODE = 11;\n\nfunction morphAttrs(fromNode, toNode) {\n    var toNodeAttrs = toNode.attributes;\n    var attr;\n    var attrName;\n    var attrNamespaceURI;\n    var attrValue;\n    var fromValue;\n\n    // document-fragments dont have attributes so lets not do anything\n    if (toNode.nodeType === DOCUMENT_FRAGMENT_NODE || fromNode.nodeType === DOCUMENT_FRAGMENT_NODE) {\n      return;\n    }\n\n    // update attributes on original DOM element\n    for (var i = toNodeAttrs.length - 1; i >= 0; i--) {\n        attr = toNodeAttrs[i];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n        attrValue = attr.value;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n            fromValue = fromNode.getAttributeNS(attrNamespaceURI, attrName);\n\n            if (fromValue !== attrValue) {\n                if (attr.prefix === 'xmlns'){\n                    attrName = attr.name; // It's not allowed to set an attribute with the XMLNS namespace without specifying the `xmlns` prefix\n                }\n                fromNode.setAttributeNS(attrNamespaceURI, attrName, attrValue);\n            }\n        } else {\n            fromValue = fromNode.getAttribute(attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttribute(attrName, attrValue);\n            }\n        }\n    }\n\n    // Remove any extra attributes found on the original DOM element that\n    // weren't found on the target element.\n    var fromNodeAttrs = fromNode.attributes;\n\n    for (var d = fromNodeAttrs.length - 1; d >= 0; d--) {\n        attr = fromNodeAttrs[d];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n\n            if (!toNode.hasAttributeNS(attrNamespaceURI, attrName)) {\n                fromNode.removeAttributeNS(attrNamespaceURI, attrName);\n            }\n        } else {\n            if (!toNode.hasAttribute(attrName)) {\n                fromNode.removeAttribute(attrName);\n            }\n        }\n    }\n}\n\nvar range; // Create a range object for efficently rendering strings to elements.\nvar NS_XHTML = 'http://www.w3.org/1999/xhtml';\n\nvar doc = typeof document === 'undefined' ? undefined : document;\nvar HAS_TEMPLATE_SUPPORT = !!doc && 'content' in doc.createElement('template');\nvar HAS_RANGE_SUPPORT = !!doc && doc.createRange && 'createContextualFragment' in doc.createRange();\n\nfunction createFragmentFromTemplate(str) {\n    var template = doc.createElement('template');\n    template.innerHTML = str;\n    return template.content.childNodes[0];\n}\n\nfunction createFragmentFromRange(str) {\n    if (!range) {\n        range = doc.createRange();\n        range.selectNode(doc.body);\n    }\n\n    var fragment = range.createContextualFragment(str);\n    return fragment.childNodes[0];\n}\n\nfunction createFragmentFromWrap(str) {\n    var fragment = doc.createElement('body');\n    fragment.innerHTML = str;\n    return fragment.childNodes[0];\n}\n\n/**\n * This is about the same\n * var html = new DOMParser().parseFromString(str, 'text/html');\n * return html.body.firstChild;\n *\n * @method toElement\n * @param {String} str\n */\nfunction toElement(str) {\n    str = str.trim();\n    if (HAS_TEMPLATE_SUPPORT) {\n      // avoid restrictions on content for things like `<tr><th>Hi</th></tr>` which\n      // createContextualFragment doesn't support\n      // <template> support not available in IE\n      return createFragmentFromTemplate(str);\n    } else if (HAS_RANGE_SUPPORT) {\n      return createFragmentFromRange(str);\n    }\n\n    return createFragmentFromWrap(str);\n}\n\n/**\n * Returns true if two node's names are the same.\n *\n * NOTE: We don't bother checking `namespaceURI` because you will never find two HTML elements with the same\n *       nodeName and different namespace URIs.\n *\n * @param {Element} a\n * @param {Element} b The target element\n * @return {boolean}\n */\nfunction compareNodeNames(fromEl, toEl) {\n    var fromNodeName = fromEl.nodeName;\n    var toNodeName = toEl.nodeName;\n    var fromCodeStart, toCodeStart;\n\n    if (fromNodeName === toNodeName) {\n        return true;\n    }\n\n    fromCodeStart = fromNodeName.charCodeAt(0);\n    toCodeStart = toNodeName.charCodeAt(0);\n\n    // If the target element is a virtual DOM node or SVG node then we may\n    // need to normalize the tag name before comparing. Normal HTML elements that are\n    // in the \"http://www.w3.org/1999/xhtml\"\n    // are converted to upper case\n    if (fromCodeStart <= 90 && toCodeStart >= 97) { // from is upper and to is lower\n        return fromNodeName === toNodeName.toUpperCase();\n    } else if (toCodeStart <= 90 && fromCodeStart >= 97) { // to is upper and from is lower\n        return toNodeName === fromNodeName.toUpperCase();\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create an element, optionally with a known namespace URI.\n *\n * @param {string} name the element name, e.g. 'div' or 'svg'\n * @param {string} [namespaceURI] the element's namespace URI, i.e. the value of\n * its `xmlns` attribute or its inferred namespace.\n *\n * @return {Element}\n */\nfunction createElementNS(name, namespaceURI) {\n    return !namespaceURI || namespaceURI === NS_XHTML ?\n        doc.createElement(name) :\n        doc.createElementNS(namespaceURI, name);\n}\n\n/**\n * Copies the children of one DOM element to another DOM element\n */\nfunction moveChildren(fromEl, toEl) {\n    var curChild = fromEl.firstChild;\n    while (curChild) {\n        var nextChild = curChild.nextSibling;\n        toEl.appendChild(curChild);\n        curChild = nextChild;\n    }\n    return toEl;\n}\n\nfunction syncBooleanAttrProp(fromEl, toEl, name) {\n    if (fromEl[name] !== toEl[name]) {\n        fromEl[name] = toEl[name];\n        if (fromEl[name]) {\n            fromEl.setAttribute(name, '');\n        } else {\n            fromEl.removeAttribute(name);\n        }\n    }\n}\n\nvar specialElHandlers = {\n    OPTION: function(fromEl, toEl) {\n        var parentNode = fromEl.parentNode;\n        if (parentNode) {\n            var parentName = parentNode.nodeName.toUpperCase();\n            if (parentName === 'OPTGROUP') {\n                parentNode = parentNode.parentNode;\n                parentName = parentNode && parentNode.nodeName.toUpperCase();\n            }\n            if (parentName === 'SELECT' && !parentNode.hasAttribute('multiple')) {\n                if (fromEl.hasAttribute('selected') && !toEl.selected) {\n                    // Workaround for MS Edge bug where the 'selected' attribute can only be\n                    // removed if set to a non-empty value:\n                    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12087679/\n                    fromEl.setAttribute('selected', 'selected');\n                    fromEl.removeAttribute('selected');\n                }\n                // We have to reset select element's selectedIndex to -1, otherwise setting\n                // fromEl.selected using the syncBooleanAttrProp below has no effect.\n                // The correct selectedIndex will be set in the SELECT special handler below.\n                parentNode.selectedIndex = -1;\n            }\n        }\n        syncBooleanAttrProp(fromEl, toEl, 'selected');\n    },\n    /**\n     * The \"value\" attribute is special for the <input> element since it sets\n     * the initial value. Changing the \"value\" attribute without changing the\n     * \"value\" property will have no effect since it is only used to the set the\n     * initial value.  Similar for the \"checked\" attribute, and \"disabled\".\n     */\n    INPUT: function(fromEl, toEl) {\n        syncBooleanAttrProp(fromEl, toEl, 'checked');\n        syncBooleanAttrProp(fromEl, toEl, 'disabled');\n\n        if (fromEl.value !== toEl.value) {\n            fromEl.value = toEl.value;\n        }\n\n        if (!toEl.hasAttribute('value')) {\n            fromEl.removeAttribute('value');\n        }\n    },\n\n    TEXTAREA: function(fromEl, toEl) {\n        var newValue = toEl.value;\n        if (fromEl.value !== newValue) {\n            fromEl.value = newValue;\n        }\n\n        var firstChild = fromEl.firstChild;\n        if (firstChild) {\n            // Needed for IE. Apparently IE sets the placeholder as the\n            // node value and vise versa. This ignores an empty update.\n            var oldValue = firstChild.nodeValue;\n\n            if (oldValue == newValue || (!newValue && oldValue == fromEl.placeholder)) {\n                return;\n            }\n\n            firstChild.nodeValue = newValue;\n        }\n    },\n    SELECT: function(fromEl, toEl) {\n        if (!toEl.hasAttribute('multiple')) {\n            var selectedIndex = -1;\n            var i = 0;\n            // We have to loop through children of fromEl, not toEl since nodes can be moved\n            // from toEl to fromEl directly when morphing.\n            // At the time this special handler is invoked, all children have already been morphed\n            // and appended to / removed from fromEl, so using fromEl here is safe and correct.\n            var curChild = fromEl.firstChild;\n            var optgroup;\n            var nodeName;\n            while(curChild) {\n                nodeName = curChild.nodeName && curChild.nodeName.toUpperCase();\n                if (nodeName === 'OPTGROUP') {\n                    optgroup = curChild;\n                    curChild = optgroup.firstChild;\n                } else {\n                    if (nodeName === 'OPTION') {\n                        if (curChild.hasAttribute('selected')) {\n                            selectedIndex = i;\n                            break;\n                        }\n                        i++;\n                    }\n                    curChild = curChild.nextSibling;\n                    if (!curChild && optgroup) {\n                        curChild = optgroup.nextSibling;\n                        optgroup = null;\n                    }\n                }\n            }\n\n            fromEl.selectedIndex = selectedIndex;\n        }\n    }\n};\n\nvar ELEMENT_NODE = 1;\nvar DOCUMENT_FRAGMENT_NODE$1 = 11;\nvar TEXT_NODE = 3;\nvar COMMENT_NODE = 8;\n\nfunction noop() {}\n\nfunction defaultGetNodeKey(node) {\n  if (node) {\n    return (node.getAttribute && node.getAttribute('id')) || node.id;\n  }\n}\n\nfunction morphdomFactory(morphAttrs) {\n\n  return function morphdom(fromNode, toNode, options) {\n    if (!options) {\n      options = {};\n    }\n\n    if (typeof toNode === 'string') {\n      if (fromNode.nodeName === '#document' || fromNode.nodeName === 'HTML' || fromNode.nodeName === 'BODY') {\n        var toNodeHtml = toNode;\n        toNode = doc.createElement('html');\n        toNode.innerHTML = toNodeHtml;\n      } else {\n        toNode = toElement(toNode);\n      }\n    } else if (toNode.nodeType === DOCUMENT_FRAGMENT_NODE$1) {\n      toNode = toNode.firstElementChild;\n    }\n\n    var getNodeKey = options.getNodeKey || defaultGetNodeKey;\n    var onBeforeNodeAdded = options.onBeforeNodeAdded || noop;\n    var onNodeAdded = options.onNodeAdded || noop;\n    var onBeforeElUpdated = options.onBeforeElUpdated || noop;\n    var onElUpdated = options.onElUpdated || noop;\n    var onBeforeNodeDiscarded = options.onBeforeNodeDiscarded || noop;\n    var onNodeDiscarded = options.onNodeDiscarded || noop;\n    var onBeforeElChildrenUpdated = options.onBeforeElChildrenUpdated || noop;\n    var skipFromChildren = options.skipFromChildren || noop;\n    var addChild = options.addChild || function(parent, child){ return parent.appendChild(child); };\n    var childrenOnly = options.childrenOnly === true;\n\n    // This object is used as a lookup to quickly find all keyed elements in the original DOM tree.\n    var fromNodesLookup = Object.create(null);\n    var keyedRemovalList = [];\n\n    function addKeyedRemoval(key) {\n      keyedRemovalList.push(key);\n    }\n\n    function walkDiscardedChildNodes(node, skipKeyedNodes) {\n      if (node.nodeType === ELEMENT_NODE) {\n        var curChild = node.firstChild;\n        while (curChild) {\n\n          var key = undefined;\n\n          if (skipKeyedNodes && (key = getNodeKey(curChild))) {\n            // If we are skipping keyed nodes then we add the key\n            // to a list so that it can be handled at the very end.\n            addKeyedRemoval(key);\n          } else {\n            // Only report the node as discarded if it is not keyed. We do this because\n            // at the end we loop through all keyed elements that were unmatched\n            // and then discard them in one final pass.\n            onNodeDiscarded(curChild);\n            if (curChild.firstChild) {\n              walkDiscardedChildNodes(curChild, skipKeyedNodes);\n            }\n          }\n\n          curChild = curChild.nextSibling;\n        }\n      }\n    }\n\n    /**\n    * Removes a DOM node out of the original DOM\n    *\n    * @param  {Node} node The node to remove\n    * @param  {Node} parentNode The nodes parent\n    * @param  {Boolean} skipKeyedNodes If true then elements with keys will be skipped and not discarded.\n    * @return {undefined}\n    */\n    function removeNode(node, parentNode, skipKeyedNodes) {\n      if (onBeforeNodeDiscarded(node) === false) {\n        return;\n      }\n\n      if (parentNode) {\n        parentNode.removeChild(node);\n      }\n\n      onNodeDiscarded(node);\n      walkDiscardedChildNodes(node, skipKeyedNodes);\n    }\n\n    // // TreeWalker implementation is no faster, but keeping this around in case this changes in the future\n    // function indexTree(root) {\n    //     var treeWalker = document.createTreeWalker(\n    //         root,\n    //         NodeFilter.SHOW_ELEMENT);\n    //\n    //     var el;\n    //     while((el = treeWalker.nextNode())) {\n    //         var key = getNodeKey(el);\n    //         if (key) {\n    //             fromNodesLookup[key] = el;\n    //         }\n    //     }\n    // }\n\n    // // NodeIterator implementation is no faster, but keeping this around in case this changes in the future\n    //\n    // function indexTree(node) {\n    //     var nodeIterator = document.createNodeIterator(node, NodeFilter.SHOW_ELEMENT);\n    //     var el;\n    //     while((el = nodeIterator.nextNode())) {\n    //         var key = getNodeKey(el);\n    //         if (key) {\n    //             fromNodesLookup[key] = el;\n    //         }\n    //     }\n    // }\n\n    function indexTree(node) {\n      if (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE$1) {\n        var curChild = node.firstChild;\n        while (curChild) {\n          var key = getNodeKey(curChild);\n          if (key) {\n            fromNodesLookup[key] = curChild;\n          }\n\n          // Walk recursively\n          indexTree(curChild);\n\n          curChild = curChild.nextSibling;\n        }\n      }\n    }\n\n    indexTree(fromNode);\n\n    function handleNodeAdded(el) {\n      onNodeAdded(el);\n\n      var curChild = el.firstChild;\n      while (curChild) {\n        var nextSibling = curChild.nextSibling;\n\n        var key = getNodeKey(curChild);\n        if (key) {\n          var unmatchedFromEl = fromNodesLookup[key];\n          // if we find a duplicate #id node in cache, replace `el` with cache value\n          // and morph it to the child node.\n          if (unmatchedFromEl && compareNodeNames(curChild, unmatchedFromEl)) {\n            curChild.parentNode.replaceChild(unmatchedFromEl, curChild);\n            morphEl(unmatchedFromEl, curChild);\n          } else {\n            handleNodeAdded(curChild);\n          }\n        } else {\n          // recursively call for curChild and it's children to see if we find something in\n          // fromNodesLookup\n          handleNodeAdded(curChild);\n        }\n\n        curChild = nextSibling;\n      }\n    }\n\n    function cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey) {\n      // We have processed all of the \"to nodes\". If curFromNodeChild is\n      // non-null then we still have some from nodes left over that need\n      // to be removed\n      while (curFromNodeChild) {\n        var fromNextSibling = curFromNodeChild.nextSibling;\n        if ((curFromNodeKey = getNodeKey(curFromNodeChild))) {\n          // Since the node is keyed it might be matched up later so we defer\n          // the actual removal to later\n          addKeyedRemoval(curFromNodeKey);\n        } else {\n          // NOTE: we skip nested keyed nodes from being removed since there is\n          //       still a chance they will be matched up later\n          removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n        }\n        curFromNodeChild = fromNextSibling;\n      }\n    }\n\n    function morphEl(fromEl, toEl, childrenOnly) {\n      var toElKey = getNodeKey(toEl);\n\n      if (toElKey) {\n        // If an element with an ID is being morphed then it will be in the final\n        // DOM so clear it out of the saved elements collection\n        delete fromNodesLookup[toElKey];\n      }\n\n      if (!childrenOnly) {\n        // optional\n        if (onBeforeElUpdated(fromEl, toEl) === false) {\n          return;\n        }\n\n        // update attributes on original DOM element first\n        morphAttrs(fromEl, toEl);\n        // optional\n        onElUpdated(fromEl);\n\n        if (onBeforeElChildrenUpdated(fromEl, toEl) === false) {\n          return;\n        }\n      }\n\n      if (fromEl.nodeName !== 'TEXTAREA') {\n        morphChildren(fromEl, toEl);\n      } else {\n        specialElHandlers.TEXTAREA(fromEl, toEl);\n      }\n    }\n\n    function morphChildren(fromEl, toEl) {\n      var skipFrom = skipFromChildren(fromEl);\n      var curToNodeChild = toEl.firstChild;\n      var curFromNodeChild = fromEl.firstChild;\n      var curToNodeKey;\n      var curFromNodeKey;\n\n      var fromNextSibling;\n      var toNextSibling;\n      var matchingFromEl;\n\n      // walk the children\n      outer: while (curToNodeChild) {\n        toNextSibling = curToNodeChild.nextSibling;\n        curToNodeKey = getNodeKey(curToNodeChild);\n\n        // walk the fromNode children all the way through\n        while (!skipFrom && curFromNodeChild) {\n          fromNextSibling = curFromNodeChild.nextSibling;\n\n          if (curToNodeChild.isSameNode && curToNodeChild.isSameNode(curFromNodeChild)) {\n            curToNodeChild = toNextSibling;\n            curFromNodeChild = fromNextSibling;\n            continue outer;\n          }\n\n          curFromNodeKey = getNodeKey(curFromNodeChild);\n\n          var curFromNodeType = curFromNodeChild.nodeType;\n\n          // this means if the curFromNodeChild doesnt have a match with the curToNodeChild\n          var isCompatible = undefined;\n\n          if (curFromNodeType === curToNodeChild.nodeType) {\n            if (curFromNodeType === ELEMENT_NODE) {\n              // Both nodes being compared are Element nodes\n\n              if (curToNodeKey) {\n                // The target node has a key so we want to match it up with the correct element\n                // in the original DOM tree\n                if (curToNodeKey !== curFromNodeKey) {\n                  // The current element in the original DOM tree does not have a matching key so\n                  // let's check our lookup to see if there is a matching element in the original\n                  // DOM tree\n                  if ((matchingFromEl = fromNodesLookup[curToNodeKey])) {\n                    if (fromNextSibling === matchingFromEl) {\n                      // Special case for single element removals. To avoid removing the original\n                      // DOM node out of the tree (since that can break CSS transitions, etc.),\n                      // we will instead discard the current node and wait until the next\n                      // iteration to properly match up the keyed target element with its matching\n                      // element in the original tree\n                      isCompatible = false;\n                    } else {\n                      // We found a matching keyed element somewhere in the original DOM tree.\n                      // Let's move the original DOM node into the current position and morph\n                      // it.\n\n                      // NOTE: We use insertBefore instead of replaceChild because we want to go through\n                      // the `removeNode()` function for the node that is being discarded so that\n                      // all lifecycle hooks are correctly invoked\n                      fromEl.insertBefore(matchingFromEl, curFromNodeChild);\n\n                      // fromNextSibling = curFromNodeChild.nextSibling;\n\n                      if (curFromNodeKey) {\n                        // Since the node is keyed it might be matched up later so we defer\n                        // the actual removal to later\n                        addKeyedRemoval(curFromNodeKey);\n                      } else {\n                        // NOTE: we skip nested keyed nodes from being removed since there is\n                        //       still a chance they will be matched up later\n                        removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                      }\n\n                      curFromNodeChild = matchingFromEl;\n                    }\n                  } else {\n                    // The nodes are not compatible since the \"to\" node has a key and there\n                    // is no matching keyed node in the source tree\n                    isCompatible = false;\n                  }\n                }\n              } else if (curFromNodeKey) {\n                // The original has a key\n                isCompatible = false;\n              }\n\n              isCompatible = isCompatible !== false && compareNodeNames(curFromNodeChild, curToNodeChild);\n              if (isCompatible) {\n                // We found compatible DOM elements so transform\n                // the current \"from\" node to match the current\n                // target DOM node.\n                // MORPH\n                morphEl(curFromNodeChild, curToNodeChild);\n              }\n\n            } else if (curFromNodeType === TEXT_NODE || curFromNodeType == COMMENT_NODE) {\n              // Both nodes being compared are Text or Comment nodes\n              isCompatible = true;\n              // Simply update nodeValue on the original node to\n              // change the text value\n              if (curFromNodeChild.nodeValue !== curToNodeChild.nodeValue) {\n                curFromNodeChild.nodeValue = curToNodeChild.nodeValue;\n              }\n\n            }\n          }\n\n          if (isCompatible) {\n            // Advance both the \"to\" child and the \"from\" child since we found a match\n            // Nothing else to do as we already recursively called morphChildren above\n            curToNodeChild = toNextSibling;\n            curFromNodeChild = fromNextSibling;\n            continue outer;\n          }\n\n          // No compatible match so remove the old node from the DOM and continue trying to find a\n          // match in the original DOM. However, we only do this if the from node is not keyed\n          // since it is possible that a keyed node might match up with a node somewhere else in the\n          // target tree and we don't want to discard it just yet since it still might find a\n          // home in the final DOM tree. After everything is done we will remove any keyed nodes\n          // that didn't find a home\n          if (curFromNodeKey) {\n            // Since the node is keyed it might be matched up later so we defer\n            // the actual removal to later\n            addKeyedRemoval(curFromNodeKey);\n          } else {\n            // NOTE: we skip nested keyed nodes from being removed since there is\n            //       still a chance they will be matched up later\n            removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n          }\n\n          curFromNodeChild = fromNextSibling;\n        } // END: while(curFromNodeChild) {}\n\n        // If we got this far then we did not find a candidate match for\n        // our \"to node\" and we exhausted all of the children \"from\"\n        // nodes. Therefore, we will just append the current \"to\" node\n        // to the end\n        if (curToNodeKey && (matchingFromEl = fromNodesLookup[curToNodeKey]) && compareNodeNames(matchingFromEl, curToNodeChild)) {\n          // MORPH\n          if(!skipFrom){ addChild(fromEl, matchingFromEl); }\n          morphEl(matchingFromEl, curToNodeChild);\n        } else {\n          var onBeforeNodeAddedResult = onBeforeNodeAdded(curToNodeChild);\n          if (onBeforeNodeAddedResult !== false) {\n            if (onBeforeNodeAddedResult) {\n              curToNodeChild = onBeforeNodeAddedResult;\n            }\n\n            if (curToNodeChild.actualize) {\n              curToNodeChild = curToNodeChild.actualize(fromEl.ownerDocument || doc);\n            }\n            addChild(fromEl, curToNodeChild);\n            handleNodeAdded(curToNodeChild);\n          }\n        }\n\n        curToNodeChild = toNextSibling;\n        curFromNodeChild = fromNextSibling;\n      }\n\n      cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey);\n\n      var specialElHandler = specialElHandlers[fromEl.nodeName];\n      if (specialElHandler) {\n        specialElHandler(fromEl, toEl);\n      }\n    } // END: morphChildren(...)\n\n    var morphedNode = fromNode;\n    var morphedNodeType = morphedNode.nodeType;\n    var toNodeType = toNode.nodeType;\n\n    if (!childrenOnly) {\n      // Handle the case where we are given two DOM nodes that are not\n      // compatible (e.g. <div> --> <span> or <div> --> TEXT)\n      if (morphedNodeType === ELEMENT_NODE) {\n        if (toNodeType === ELEMENT_NODE) {\n          if (!compareNodeNames(fromNode, toNode)) {\n            onNodeDiscarded(fromNode);\n            morphedNode = moveChildren(fromNode, createElementNS(toNode.nodeName, toNode.namespaceURI));\n          }\n        } else {\n          // Going from an element node to a text node\n          morphedNode = toNode;\n        }\n      } else if (morphedNodeType === TEXT_NODE || morphedNodeType === COMMENT_NODE) { // Text or comment node\n        if (toNodeType === morphedNodeType) {\n          if (morphedNode.nodeValue !== toNode.nodeValue) {\n            morphedNode.nodeValue = toNode.nodeValue;\n          }\n\n          return morphedNode;\n        } else {\n          // Text node to something else\n          morphedNode = toNode;\n        }\n      }\n    }\n\n    if (morphedNode === toNode) {\n      // The \"to node\" was not compatible with the \"from node\" so we had to\n      // toss out the \"from node\" and use the \"to node\"\n      onNodeDiscarded(fromNode);\n    } else {\n      if (toNode.isSameNode && toNode.isSameNode(morphedNode)) {\n        return;\n      }\n\n      morphEl(morphedNode, toNode, childrenOnly);\n\n      // We now need to loop over any keyed nodes that might need to be\n      // removed. We only do the removal if we know that the keyed node\n      // never found a match. When a keyed node is matched up we remove\n      // it out of fromNodesLookup and we use fromNodesLookup to determine\n      // if a keyed node has been matched up or not\n      if (keyedRemovalList) {\n        for (var i=0, len=keyedRemovalList.length; i<len; i++) {\n          var elToRemove = fromNodesLookup[keyedRemovalList[i]];\n          if (elToRemove) {\n            removeNode(elToRemove, elToRemove.parentNode, false);\n          }\n        }\n      }\n    }\n\n    if (!childrenOnly && morphedNode !== fromNode && fromNode.parentNode) {\n      if (morphedNode.actualize) {\n        morphedNode = morphedNode.actualize(fromNode.ownerDocument || doc);\n      }\n      // If we had to swap out the from node with a new node because the old\n      // node was not compatible with the target node then we need to\n      // replace the old DOM node in the original DOM tree. This is only\n      // possible if the original DOM node was part of a DOM tree which\n      // we know is the case if it has a parent node.\n      fromNode.parentNode.replaceChild(morphedNode, fromNode);\n    }\n\n    return morphedNode;\n  };\n}\n\nvar morphdom = morphdomFactory(morphAttrs);\n\nexport default morphdom;\n", "import morphdom from \"morphdom\";\n\nfunction morph(oldNode, newNode) {\n  morphdom(oldNode, newNode);\n}\n\nconst BOOST_PAGES = JSON.parse(\n  document.querySelector(\"meta[name=reactor-boost]\")?.dataset.enabled || \"false\"\n);\n\nconsole.log(\"BOOST_PAGES\", BOOST_PAGES);\n\nclass NavEvents extends EventTarget {\n  send() {\n    console.log(\"LOAD\", document.location.href);\n    this.dispatchEvent(new Event(\"newLocation\"));\n  }\n}\n\nlet navEvent = new NavEvents();\n\nif (BOOST_PAGES) {\n  document.addEventListener(\"click\", (e) => {\n    let link = e.target;\n    link = link.tagName.toLowerCase() !== \"a\" ? link.closest(\"a\") : link;\n    if (\n      link &&\n      link.href &&\n      (!link.target || link.target === \"_self\") &&\n      link.origin == document.location.origin &&\n      e.button === 0 && // left click only\n      !e.metaKey && // open in new tab (mac)\n      !e.ctrlKey && // open in new tab (win & linux)\n      !e.altKey && // download\n      !e.shiftKey\n    ) {\n      e.preventDefault();\n      HistoryCache.load(link.href);\n    }\n  });\n}\n\nfunction replaceBodyContent(newBody, scrollY = undefined) {\n  document.body.innerHTML = newBody;\n  if (scrollY === undefined) {\n    document.querySelector(\"[autofocus]\")?.focus();\n  } else {\n    window.scrollTo(0, scrollY);\n  }\n}\n\nfunction hasSameOriginAsDocument(url) {\n  if (url.startsWith(\"http://\") || url.startsWith(\"https://\")) {\n    return new URL(url).origin === document.location.origin;\n  } else {\n    return true;\n  }\n}\n\nclass HistoryCache {\n  static async load(url) {\n    if (BOOST_PAGES) {\n      // this._saveCurrentPage();\n      if (hasSameOriginAsDocument(url)) {\n        this.push(url);\n      } else {\n        document.location.assign(url);\n      }\n    } else {\n      document.location.assign(url);\n    }\n  }\n\n  static back() {\n    window.history.back();\n  }\n\n  static async push(path) {\n    if (document.body == null) debugger;\n    history.replaceState(\n      {\n        content: document.body.innerHTML,\n        scrollY: window.scrollY,\n      },\n      document.title,\n      document.location.href\n    );\n    history.pushState({}, document.title, path);\n    this.replaceContentFromUrl(path);\n  }\n\n  static async replaceContentFromUrl(url) {\n    navEvent.send();\n    let response = await fetch(url);\n    let content = await response.text();\n    let doc = new DOMParser().parseFromString(content, \"text/html\");\n    document.title = doc.querySelector(\"title\")?.text ?? \"\";\n    replaceBodyContent(doc.body.innerHTML);\n  }\n\n  static replace(path) {\n    history.replaceState({}, document.title, path);\n  }\n}\n\nwindow.addEventListener(\"popstate\", (event) => {\n  navEvent.send();\n  if (event.state?.content !== undefined) {\n    replaceBodyContent(event.state.content, event.state.scrollY);\n  }\n  HistoryCache.replaceContentFromUrl(document.location.href);\n});\n\nexport default {\n  HistoryCache: HistoryCache,\n  morph: morph,\n  navEvent: navEvent,\n};\n", "import ReconnectingWebSocket from \"reconnecting-websocket\";\nimport boost from \"./reactor-boost\";\n\n// Connection\n\nconst parser = new DOMParser();\n\nclass ServerConnection extends EventTarget {\n  open(path = \"__reactor__\") {\n    let protocol = location.protocol.replace(\"http\", \"ws\");\n    this.socket = new ReconnectingWebSocket(\n      `${protocol}//${location.host}/${path}`,\n      [],\n      {\n        maxEnqueuedMessages: 0,\n      }\n    );\n\n    this.socket.addEventListener(\"open\", () => {\n      console.log(\"WS: OPEN\");\n      this.sendQueryString();\n      this.dispatchEvent(new Event(\"open\"));\n    });\n\n    this.socket.addEventListener(\"message\", (event) =>\n      this._processMessage(event)\n    );\n\n    this.socket.addEventListener(\"close\", () => {\n      console.log(\"WS: CLOSE\");\n      this.dispatchEvent(new Event(\"close\"));\n    });\n\n    boost.navEvent.addEventListener(\"newLocation\", () => {\n      this.sendQueryString();\n    });\n  }\n\n  get isOpen() {\n    return this.socket?.readyState == ReconnectingWebSocket.OPEN;\n  }\n\n  _processMessage(event) {\n    let { command, payload } = JSON.parse(event.data);\n    switch (command) {\n      case \"render\":\n        var { id, diff } = payload;\n        console.log(\"<<< RENDER\", id);\n        document.getElementById(id)?.applyDiff(diff);\n        break;\n      case \"append\":\n      case \"prepend\":\n      case \"insert_after\":\n      case \"insert_before\":\n      case \"replace_with\":\n        var { id, html } = payload;\n        console.log(`<<< ${command.toUpperCase()}`, id);\n        html = parser.parseFromString(html, \"text/html\").body.firstChild;\n        var element = document.getElementById(id);\n        if (element) {\n          switch (command) {\n            case \"append\":\n              element.append(html);\n              break;\n            case \"prepend\":\n              element.prepend(html);\n              break;\n            case \"insert_after\":\n              element.after(html);\n              break;\n            case \"insert_before\":\n              element.before(html);\n              break;\n            case \"replace_with\":\n              boost.morph(element, html);\n              break;\n          }\n        }\n        break;\n      case \"remove\":\n        var { id } = payload;\n        console.log(\"<<< REMOVE\", id);\n        document.getElementById(id)?.remove();\n        break;\n      case \"focus_on\":\n        var { selector } = payload;\n        console.log(\n          \"<<< FOCUS-ON\",\n          `\"${selector}\"`,\n          document.querySelector(selector)\n        );\n        window.requestAnimationFrame(() =>\n          document.querySelector(selector)?.focus()\n        );\n        break;\n      case \"scroll_into_view\":\n        var { id, behavior, block, inline } = payload;\n        window.requestAnimationFrame(() =>\n          document\n            .getElementById(id)\n            ?.scrollIntoView({ behavior, block, inline })\n        );\n        break;\n      case \"url_change\":\n        var { url } = payload;\n        console.log(\"<< URL\", payload.command, url);\n        switch (payload.command) {\n          case \"redirect\":\n            boost.HistoryCache.load(url);\n            break;\n          case \"replace\":\n            boost.HistoryCache.replace(url);\n            break;\n          case \"push\":\n            boost.HistoryCache.push(url);\n            break;\n        }\n        break;\n\n      case \"set_query_string\":\n        var { qs } = payload;\n        qs = qs.length ? `?${qs}` : \"\";\n        console.log(\"<< SET URL PARAMS\", qs);\n        boost.HistoryCache.replace(document.location.pathname + qs);\n        break;\n\n      case \"back\":\n        boost.HistoryCache.back();\n        break;\n      default:\n        console.error(`Unknown command \"${command}\"`, payload);\n    }\n  }\n\n  sendQueryString() {\n    // \"?a=x&...\" -> \"a=x&...\"\n    let qs = document.location.search.slice(1);\n    console.log(\"QS\", qs);\n    this._send(\"query_string\", { qs });\n  }\n\n  sendJoin(name, component_id, parent_id, state) {\n    console.log(\">>> JOIN\", name, component_id);\n    this._send(\"join\", { name, parent_id, state });\n  }\n\n  sendLeave(id) {\n    console.log(\">>> LEAVE\", id);\n    this._send(\"leave\", { id });\n  }\n\n  sendUserEvent(id, command, implicit_args, explicit_args) {\n    console.log(\">>> USER_EVENT\", id, command, explicit_args);\n    this._send(\"user_event\", { id, command, implicit_args, explicit_args });\n  }\n\n  _send(command, payload) {\n    if (this.isOpen) {\n      this.socket.send(JSON.stringify({ command, payload }));\n    }\n  }\n}\n\nlet connection = new ServerConnection();\n\nfor ({ dataset } of document.querySelectorAll(\"meta[name=reactor-component]\")) {\n  let baseElement = document.createElement(dataset.extends);\n\n  class ReactorComponent extends baseElement.constructor {\n    constructor(...args) {\n      super(...args);\n      this._lastReceivedHtml = [];\n      this.joinBind = () => this.join();\n      this.wentOffline = () => this.classList.add(\"reactor-disconnected\");\n    }\n\n    connectedCallback() {\n      connection.addEventListener(\"open\", this.joinBind);\n      connection.addEventListener(\"close\", this.wentOffline);\n      this.join();\n    }\n\n    disconnectedCallback() {\n      connection.removeEventListener(\"open\", this.joinBind);\n      connection.removeEventListener(\"close\", this.wentOffline);\n      this.leave();\n    }\n\n    join() {\n      this.classList.remove(\"reactor-disconnected\");\n      connection.sendJoin(\n        this.dataset.name,\n        this.id,\n        this.parentId,\n        this.dataset.state\n      );\n    }\n\n    leave() {\n      connection.sendLeave(this.id);\n    }\n\n    applyDiff(diff) {\n      window.requestAnimationFrame(() => {\n        let html = this.getHtml(diff);\n        boost.morph(this, html);\n      });\n    }\n\n    getHtml(diff) {\n      let fragments = [];\n      let cursor = 0;\n      for (let fragment of diff) {\n        if (typeof fragment === \"string\") {\n          fragments.push(fragment);\n        } else if (fragment < 0) {\n          cursor -= fragment;\n        } else {\n          fragments.push(\n            ...this._lastReceivedHtml.slice(cursor, cursor + fragment)\n          );\n          cursor += fragment;\n        }\n      }\n      this._lastReceivedHtml = fragments;\n      return fragments.join(\" \");\n    }\n\n    /**\n     * Returns the id of the parent component\n     *\n     * @returns {?String}\n     */\n    get parentId() {\n      return this.parentComponent?.id;\n    }\n\n    /**\n     * Returns the high parent reactor component if any is found component\n     *\n     * @returns {?ReactorComponent}\n     */\n    get parentComponent() {\n      return this.parentElement?.closest(\"[reactor-component]\");\n    }\n\n    /**\n     * Dispatches a command to this component and sends it to the backend\n     * @param {String} command\n     * @param {Object} args\n     * @param {?HTMLFormElement} form\n     */\n    dispatch(command, args, formScope) {\n      connection.sendUserEvent(\n        this.id,\n        command,\n        this.serialize(formScope),\n        args\n      );\n    }\n\n    /**\n     * Serialize all elements inside `element` with a [name] attribute into\n     * a an array of `[element[name], element[value]]`\n     * @param {HTMLElement} element\n     */\n    serialize(element) {\n      let result = {};\n      for (let el of element.querySelectorAll(\"[name]\")) {\n        // Avoid serializing data of a nested component\n        if (el.closest(\"[reactor-component]\") !== this) {\n          continue;\n        }\n\n        let value = null;\n        switch (el.type.toLowerCase()) {\n          case \"checkbox\":\n          case \"radio\":\n            value = el.checked ? el.value || true : null;\n            break;\n          case \"select-multiple\":\n            value = el.selectedOptions.map((option) => option.value);\n            break;\n          default:\n            value = el.value;\n            break;\n        }\n\n        if (value !== null) {\n          let key = el.getAttribute(\"name\");\n          let values = result[key] ?? [];\n          values.push(value);\n          result[key] = values;\n        }\n      }\n      return result;\n    }\n  }\n\n  customElements.define(dataset.tagName, ReactorComponent, {\n    extends: dataset.extends,\n  });\n}\n\nconnection.open();\nvar debounceTimeout = undefined;\n\nwindow.reactor = {\n  /**\n   * Forwards a user event to a component\n   * @param {HTMLElement} element\n   * @param {String} name\n   * @param {Object} args\n   */\n  send(element, name, args) {\n    let component = element.closest(\"[reactor-component]\");\n    if (component !== null) {\n      let form = element.closest(\"form\");\n      let formScope = component.contains(form) ? form : component;\n      component.dispatch(name, args, formScope);\n    }\n  },\n\n  /**\n   * Debounce a function call\n   * @param {Number} delay\n   * @returns\n   */\n  debounce(delay) {\n    return (f) => {\n      return (...args) => {\n        clearTimeout(debounceTimeout);\n        debounceTimeout = setTimeout(() => f(...args), delay);\n      };\n    };\n  },\n};\n"],
  "mappings": "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",
  "names": []
}
