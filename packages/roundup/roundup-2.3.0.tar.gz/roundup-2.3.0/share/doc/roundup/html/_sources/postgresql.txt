.. index:: postgres; deployment notes

==========================
PostgreSQL/psycopg Backend
==========================

This are notes about PostqreSQL backend based on the psycopg adapter for
Roundup issue tracker.

Prerequisites
=============

To use PostgreSQL as backend for storing roundup data, you should
additionally install:

1. PostgreSQL_ 8.x or higher

2. The psycopg_ python interface to PostgreSQL_

Note that you currently need at least version 2.8 of psycopg_ -- the
postgresql backend will work with 2.7 but if you're using the native
postgresql indexer you need at least 2.8. Also if you want to run the
tests, these also need 2.8. If your distribution has an older version we
suggest that you install into a python virtual environment.

.. _psycopg: https://www.psycopg.org/
.. _PostgreSQL: https://www.postgresql.org/


Running the PostgreSQL unit tests
=================================

The user that you're running the tests as will need to be able to access
the postgresql database on the local machine and create and drop
databases. See the config values in 'test/db_test_base.py' 
about which database connection, name and user will be used.

At this time the following command will setup the user::

  sudo -u postgres psql -c "CREATE ROLE rounduptest WITH CREATEDB LOGIN PASSWORD 'rounduptest';" -U postgres

Note ``rounduptest`` is a well known account, so you should
remove/disable the account after testing and set up a suitable
production account. You need to remove any database owned by
``rounduptest`` first. So something like this should work::


  sudo -u postgres psql -c "DROP DATABASE rounduptest;" -U postgres
  sudo -u postgres psql -c "DROP ROLE rounduptest;" -U postgres

If the ``rounduptest`` database is left in a broken state
(e.g. because of a crash during testing) dropping the database and
restarting the tests should fix it.
   
Credit
======

The postgresql backend was originally submitted by Federico Di Gregorio
<fog@initd.org>

