{"version":3,"sources":["ArgsContext.tsx","NodeContent.tsx","EdgeContent.tsx","Node.tsx","Tree.tsx","index.tsx"],"names":["default_args","ArgsContext","createContext","NodeContent","_ref","id","args","useContext","data","show_node_ids","node_data","find","a","node_id","_jsx","_Fragment","children","_jsxs","className","onClick","e","value","Streamlit","setComponentValue","style","backgroundColor","color","contents","map","content","i","EdgeContent","isLeft","left","condition","Node","depth","expanded","expanded_depth","_useState","useState","childrenVisible","_useState2","_slicedToArray","setChildrenVisible","hasChildren","right","childrenVisibleStyle","opacity","maxHeight","maxWidth","overflowX","transform","invertColor","hex","indexOf","slice","length","console","log","Error","r","parseInt","toString","g","b","padZero","colorToRGB","concat","str","len","Array","join","withStreamlitConnection","props","key","theme","lastFrameHeight","setLastFrameHeight","treeRef","useRef","originalStyle","_objectSpread","text_outline_color_mix","text_outline_color","text_outline_alpha","base","button_color","button_hover_color","edge_color","edge_hover_color","node_border_color","node_color","node_hover_color","text_color","text_hover_color","Object","entries","forEach","_ref2","replaceAll","document","getElementById","setProperty","setStyle","useEffect","intervalId","setInterval","current","clientHeight","setFrameHeight","clearInterval","treeToPng","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","element","useWidth","canvas","dataURL","wrap","_context","prev","next","querySelector","scrollWidth","clientWidth","html2canvas","width","windowWidth","scale","sent","toDataURL","downloadjs","stop","apply","arguments","Provider","ref","ReactDOM","render","React","StrictMode","StreamlitProvider","Tree"],"mappings":"2RAEMA,EAAoB,CAAC,EACdC,EAAcC,wBAAcF,G,OCwC1BG,EAtCK,SAAHC,GAAwB,IAAlBC,EAAED,EAAFC,GACfC,EAAOC,qBAAWN,GAClBO,EAAqBF,EAAKE,KAC1BC,EAAyBH,EAAKG,cAC9BC,EAAYF,EAAKG,MAAK,SAACC,GAAC,OAAKA,EAAEC,UAAYR,CAAE,IAMnD,OACES,cAAAC,WAAA,CAAAC,SACEC,eAAA,OAAKC,UAAU,OAAMF,SAAA,CAClBP,GACCK,cAAA,OACEI,UAAU,oBACVC,QAAS,SAACC,GAVA,IAACC,IAWGhB,EAVtBiB,YAAUC,kBAAkBF,EAWpB,EACAG,MAAO,CAAEC,gBAAiBf,EAAWgB,OAAQV,SAE7CF,cAAA,OAAAE,SAAMN,EAAWG,YAGrBC,cAAA,OAAKI,UAAU,qBAAoBF,SAChCN,EAAWiB,SAASC,KAAI,SAAUC,EAASC,GAC1C,OACEhB,cAAA,OAAKI,UAAU,0BAAyBF,SACrCa,GAD2CC,EAIlD,UAKV,EClBeC,EAdK,SAAH3B,GAAkC,IAA5BC,EAAED,EAAFC,GAGfK,GAHyBN,EAAN4B,OACZzB,qBAAWN,GACQO,KACTG,MAAK,SAACC,GAAC,OAAKA,EAAEC,UAAYR,CAAE,KAEnD,OACES,cAAAC,WAAA,CAAAC,SACEF,cAAA,OAAKI,UAAU,eAAcF,SACjBN,EAAWuB,KAAKC,aAIlC,ECoEeC,EA/DF,SAAPA,EAAI/B,GAA+B,IAAzBC,EAAED,EAAFC,GAAI+B,EAAKhC,EAALgC,MACZ9B,EAAOC,qBAAWN,GAClBO,EAAqBF,EAAKE,KAC1B6B,EAAWD,EAAQ9B,EAAKgC,eAExB5B,EAAYF,EAAKG,MAAK,SAACC,GAAC,OAAKA,EAAEC,UAAYR,CAAE,IACnDkC,EAA8CC,mBACd,MAA9B9B,EAAW+B,gBAA0B/B,EAAW+B,gBAAkBJ,GACnEK,EAAAC,YAAAJ,EAAA,GAFME,EAAeC,EAAA,GAAEE,EAAkBF,EAAA,GAI1ChC,EAAW+B,gBAAkBA,EAE7B,IAAMI,EAAiC,MAAnBnC,EAAWuB,MAAoC,MAApBvB,EAAWoC,MACpDC,EAAuBN,EACzB,CAAC,EACA,CACCO,QAAS,EACTC,UAAW,EACXC,SAAU,EACVC,UAAW,UASjB,OACElC,eAAAF,WAAA,CAAAC,SAAA,CACEF,cAACX,EAAW,CAACE,GAAIA,EAAI+B,MAAOA,IAC3BS,GACC/B,cAAA,OACEI,UAAU,eACVC,QAAS,SAACC,GAThBwB,GAAoBH,EASyB,EACvCjB,MAAOiB,EAAkB,CAAC,EAAI,CAAEW,UAAW,gBAI9CP,GACC5B,eAAA,MAAIO,MAAOuB,EAAqB/B,SAAA,CAC9BC,eAAA,MAAAD,SAAA,CACEF,cAACiB,EAAW,CAAC1B,GAAIA,EAAI2B,QAAQ,GAAW3B,GACxCS,cAACqB,EAAI,CACH9B,GAAIK,EAAWuB,KAAK5B,GAEpB+B,MAAOA,EAAQ,GADV1B,EAAWuB,KAAK5B,OAIzBY,eAAA,MAAAD,SAAA,CACEF,cAACiB,EAAW,CAAC1B,GAAIA,EAAI2B,QAAQ,GAAY3B,GACzCS,cAACqB,EAAI,CACH9B,GAAIK,EAAWoC,MAAMzC,GAErB+B,MAAOA,EAAQ,GADV1B,EAAWoC,MAAMzC,YAQpC,ECpDMgD,G,MAAc,SAACC,GAQnB,GAPyB,IAArBA,EAAIC,QAAQ,OACdD,EAAMA,EAAIE,MAAM,IAGC,IAAfF,EAAIG,SACNH,EAAMA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAEtC,IAAfA,EAAIG,OAEN,MADAC,QAAQC,IAAI,MAAOL,GACb,IAAIM,MAAM,sBAGlB,IAAIC,GAAK,IAAMC,SAASR,EAAIE,MAAM,EAAG,GAAI,KAAKO,SAAS,IACrDC,GAAK,IAAMF,SAASR,EAAIE,MAAM,EAAG,GAAI,KAAKO,SAAS,IACnDE,GAAK,IAAMH,SAASR,EAAIE,MAAM,EAAG,GAAI,KAAKO,SAAS,IAErD,MAAO,IAAMG,EAAQL,EAAG,GAAKK,EAAQF,EAAG,GAAKE,EAAQD,EAAG,EAC1D,GAEME,EAAa,SAACb,GAQlB,GAPyB,IAArBA,EAAIC,QAAQ,OACdD,EAAMA,EAAIE,MAAM,IAGC,IAAfF,EAAIG,SACNH,EAAMA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAEtC,IAAfA,EAAIG,OACN,MAAM,IAAIG,MAAM,4BAGlB,IAAIC,EAAIC,SAASR,EAAIE,MAAM,EAAG,GAAI,IAChCQ,EAAIF,SAASR,EAAIE,MAAM,EAAG,GAAI,IAC9BS,EAAIH,SAASR,EAAIE,MAAM,EAAG,GAAI,IAGhC,MADO,GAAAY,OAAMP,EAAC,MAAAO,OAAKJ,EAAC,MAAAI,OAAKH,EAE3B,EAEMC,EAAU,SAACG,EAAaC,GAG5B,OAFAA,EAAMA,GAAO,GACD,IAAIC,MAAMD,GAAKE,KAAK,KAChBH,GAAKb,OAAOc,EAC9B,EAyFeG,qCAzDF,SAACC,GACZ,IAAMpE,EAAOoE,EAAMpE,KACbqE,EAAMrE,EAAKqE,IACXnD,EAAmBlB,EAAKkB,MACxBoD,EAAQF,EAAME,MACpBrC,EAA8CC,mBAAS,GAAEE,EAAAC,YAAAJ,EAAA,GAAlDsC,EAAenC,EAAA,GAAEoC,EAAkBpC,EAAA,GACpCqC,EAAeC,iBAAO,OApCb,SAACC,EAA0BL,GAC1C,IAAMpD,EAAK0D,YAAA,GAAQD,GACnBzD,EAAM2D,uBAAsB,QAAAf,OAAWD,EACrC3C,EAAM4D,oBACP,MAAAhB,OAAK5C,EAAM6D,mBAAkB,KAEX,SAAfT,EAAMU,OACR9D,EAAM+D,aAAelC,EAAY7B,EAAM+D,cACvC/D,EAAMgE,mBAAqBnC,EAAY7B,EAAMgE,oBAC7ChE,EAAMiE,WAAapC,EAAY7B,EAAMiE,YACrCjE,EAAMkE,iBAAmBrC,EAAY7B,EAAMkE,kBAC3ClE,EAAMmE,kBAAoBtC,EAAY7B,EAAMmE,mBAC5CnE,EAAMoE,WAAavC,EAAY7B,EAAMoE,YACrCpE,EAAMqE,iBAAmBxC,EAAY7B,EAAMqE,kBAC3CrE,EAAMsE,WAAazC,EAAY7B,EAAMsE,YACrCtE,EAAMuE,iBAAmB1C,EAAY7B,EAAMuE,kBAC3CvE,EAAM4D,mBAAqB/B,EAAY7B,EAAM4D,oBAC7C5D,EAAM2D,uBAAsB,QAAAf,OAAWD,EACrC3C,EAAM4D,oBACP,MAAAhB,OAAK5C,EAAM6D,mBAAkB,MAEhCW,OAAOC,QAAQzE,GAAO0E,SAAQ,SAAA9F,GAAmB,IAAD+F,EAAAxD,YAAAvC,EAAA,GAAhBuE,EAAGwB,EAAA,GAAE9E,EAAK8E,EAAA,GACxCxB,EAAG,KAAAP,OAAQO,EAAIyB,WAAW,IAAK,MAC/BC,SAASC,eAAe,QAAS9E,MAAM+E,YAAY5B,EAAKtD,EAC1D,IACAgF,SACGC,eAAe,QACf9E,MAAM+E,YAAY,oBAAqB3B,EAAMnD,gBAClD,CAUE+E,CAAShF,EAAOoD,GAEhB6B,qBAAU,WACR,IAAMC,EAAaC,aAAY,WACN,MAAnB5B,EAAQ6B,SACV9B,EAAmBC,EAAQ6B,QAASC,aAExC,GAAG,IAOH,OANAvF,YAAUwF,iBAMH,kBAAMC,cAAcL,EAAW,CACxC,GAAG,CAAC7B,IAEJ,IAAMmC,EAAS,eAAAC,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAN,cAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGoB,OAF9BP,EAAUjB,SAASyB,cAAc,SACvCpE,QAAQC,IAAI2D,EAAQS,YAAaT,EAAQU,aACnCT,EAAWD,EAAQS,YAAWJ,EAAAE,KAAA,EACfI,IAAY5B,SAASyB,cAAc,SAAW,CACjEI,MAAOX,EACPY,YAAaZ,EACba,MAAO,IACP,OAJIZ,EAAMG,EAAAU,KAKNZ,EAAUD,EAAOc,UAAU,aACjCC,IAAWd,EAAQ,GAADrD,OAAKO,EAAG,QAAQ,aAAY,wBAAAgD,EAAAa,OAAA,GAAAnB,EAAA,KAC/C,kBAXc,OAAAJ,EAAAwB,MAAA,KAAAC,UAAA,KAef,OACEzH,eAAChB,EAAY0I,SAAQ,CAACtH,MAAOf,EAAKU,SAAA,CAChCF,cAAA,UAAQI,UAAU,kBAAkBC,QAAS,SAACC,GAAC,OAAK4F,GAAW,EAAChG,SAAC,sBAGjEF,cAAA,OAAKI,UAAU,OAAO0H,IAAK7D,EAAQ/D,SACjCF,cAAA,MAAII,UAAU,WAAUF,SACtBF,cAAA,MAAAE,SACEF,cAACqB,EAAI,CAAC9B,GAAI,EAAG+B,MAAO,UAI1BtB,cAAA,WAGN,ICjKA+H,IAASC,OACPhI,cAACiI,IAAMC,WAAU,CAAAhI,SACfF,cAACmI,oBAAiB,CAAAjI,SAChBF,cAACoI,EAAI,QAGT7C,SAASC,eAAe,Q","file":"static/js/main.50b0a73e.chunk.js","sourcesContent":["import { createContext } from \"react\"\r\n\r\nconst default_args: any = {}\r\nexport const ArgsContext = createContext(default_args)\r\n","import { useContext } from \"react\"\r\nimport { Streamlit } from \"streamlit-component-lib\"\r\nimport { ArgsContext } from \"./ArgsContext\"\r\nimport type { NodeObject, NodeId } from \"./Node\"\r\n\r\nconst NodeContent = ({ id }: NodeId) => {\r\n  const args = useContext(ArgsContext)\r\n  const data: NodeObject[] = args.data\r\n  const show_node_ids: boolean = args.show_node_ids\r\n  const node_data = data.find((a) => a.node_id === id)\r\n\r\n  const updateValue = (value: number) => {\r\n    Streamlit.setComponentValue(value)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"node\">\r\n        {show_node_ids && (\r\n          <div\r\n            className=\"node-content-left\"\r\n            onClick={(e) => {\r\n              updateValue(id)\r\n            }}\r\n            style={{ backgroundColor: node_data!.color }}\r\n          >\r\n            <div>{node_data!.node_id}</div>\r\n          </div>\r\n        )}\r\n        <div className=\"node-content-right\">\r\n          {node_data!.contents.map(function (content, i) {\r\n            return (\r\n              <div className=\"node-content-right-item\" key={i}>\r\n                {content}\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NodeContent\r\n","import { useContext } from \"react\"\r\nimport { ArgsContext } from \"./ArgsContext\"\r\nimport type { NodeObject } from \"./Node\"\r\n\r\ninterface EdgeType {\r\n  id: number\r\n  isLeft: boolean\r\n}\r\n\r\nconst EdgeContent = ({ id, isLeft }: EdgeType) => {\r\n  const args = useContext(ArgsContext)\r\n  const data: NodeObject[] = args.data\r\n  const node_data = data.find((a) => a.node_id === id)\r\n\r\n  return (\r\n    <>\r\n      <div className=\"edge-content\">\r\n        {isLeft ? node_data!.left.condition : node_data!.left.condition}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EdgeContent\r\n","import { useState, useContext } from \"react\"\r\nimport { ArgsContext } from \"./ArgsContext\"\r\n\r\nimport NodeContent from \"./NodeContent\"\r\nimport EdgeContent from \"./EdgeContent\"\r\n\r\nexport interface NodeObject {\r\n  node_id: number\r\n  left: {\r\n    id: number\r\n    condition: string\r\n  }\r\n  right: {\r\n    id: number\r\n    condition: string\r\n  }\r\n  contents: string[]\r\n  color: string\r\n  childrenVisible: boolean\r\n}\r\n\r\nexport interface NodeId {\r\n  id: number\r\n  depth: number\r\n}\r\n\r\nconst Node = ({ id, depth }: NodeId) => {\r\n  const args = useContext(ArgsContext)\r\n  const data: NodeObject[] = args.data\r\n  const expanded = depth < args.expanded_depth\r\n\r\n  const node_data = data.find((a) => a.node_id === id)\r\n  const [childrenVisible, setChildrenVisible] = useState(\r\n    node_data!.childrenVisible != null ? node_data!.childrenVisible : expanded\r\n  )\r\n\r\n  node_data!.childrenVisible = childrenVisible\r\n\r\n  const hasChildren = node_data!.left != null && node_data!.right != null\r\n  const childrenVisibleStyle = childrenVisible\r\n    ? {}\r\n    : ({\r\n        opacity: 0,\r\n        maxHeight: 0,\r\n        maxWidth: 0,\r\n        overflowX: \"hidden\",\r\n      } as React.CSSProperties)\r\n\r\n  // console.log(\"id \", id, node_data, hasChildren)\r\n\r\n  function switchChildrenVisible() {\r\n    setChildrenVisible(!childrenVisible)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <NodeContent id={id} depth={depth} />\r\n      {hasChildren && (\r\n        <div\r\n          className=\"child-button\"\r\n          onClick={(e) => switchChildrenVisible()}\r\n          style={childrenVisible ? {} : { transform: \"scaleX(-1)\" }}\r\n        ></div>\r\n      )}\r\n\r\n      {hasChildren && (\r\n        <ul style={childrenVisibleStyle}>\r\n          <li>\r\n            <EdgeContent id={id} isLeft={true} key={id} />\r\n            <Node\r\n              id={node_data!.left.id}\r\n              key={node_data!.left.id}\r\n              depth={depth + 1}\r\n            />\r\n          </li>\r\n          <li>\r\n            <EdgeContent id={id} isLeft={false} key={id} />\r\n            <Node\r\n              id={node_data!.right.id}\r\n              key={node_data!.right.id}\r\n              depth={depth + 1}\r\n            />\r\n          </li>\r\n        </ul>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Node\r\n","import {\n  ComponentProps,\n  Streamlit,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { useEffect, useState, useRef } from \"react\"\n\nimport downloadjs from \"downloadjs\"\nimport html2canvas from \"html2canvas\"\nimport { ArgsContext } from \"./ArgsContext\"\nimport Node from \"./Node\"\nimport \"./Node.scss\"\n\ninterface styleType {\n  button_color: string\n  button_hover_color: string\n  edge_color: string\n  edge_hover_color: string\n  edge_size: string\n  font_family: string\n  font_size: string\n  max_height: string\n  node_border_color: string\n  node_color: string\n  node_hover_color: string\n  node_size: string\n  padding_quantum: string\n  text_color: string\n  text_hover_color: string\n  text_outline_alpha: string\n  text_outline_color: string\n  text_outline_color_mix: string\n  transition_time: string\n}\n\nconst invertColor = (hex: string) => {\n  if (hex.indexOf(\"#\") === 0) {\n    hex = hex.slice(1)\n  }\n  // convert 3-digit hex to 6-digits.\n  if (hex.length === 3) {\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2]\n  }\n  if (hex.length !== 6) {\n    console.log(\"dfs\", hex)\n    throw new Error(\"Invalid HEX color.\")\n  }\n  // invert color components\n  var r = (255 - parseInt(hex.slice(0, 2), 16)).toString(16),\n    g = (255 - parseInt(hex.slice(2, 4), 16)).toString(16),\n    b = (255 - parseInt(hex.slice(4, 6), 16)).toString(16)\n  // pad each with zeros and return\n  return \"#\" + padZero(r, 2) + padZero(g, 2) + padZero(b, 2)\n}\n\nconst colorToRGB = (hex: string) => {\n  if (hex.indexOf(\"#\") === 0) {\n    hex = hex.slice(1)\n  }\n  // convert 3-digit hex to 6-digits.\n  if (hex.length === 3) {\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2]\n  }\n  if (hex.length !== 6) {\n    throw new Error(\"Invalid Alpha-HEX color.\")\n  }\n  // break color components\n  var r = parseInt(hex.slice(0, 2), 16),\n    g = parseInt(hex.slice(2, 4), 16),\n    b = parseInt(hex.slice(4, 6), 16)\n  // pad each with zeros and return\n  var rgb = `${r}, ${g}, ${b}`\n  return rgb\n}\n\nconst padZero = (str: string, len: number) => {\n  len = len || 2\n  var zeros = new Array(len).join(\"0\")\n  return (zeros + str).slice(-len)\n}\n\nconst setStyle = (originalStyle: styleType, theme: any) => {\n  const style = { ...originalStyle }\n  style.text_outline_color_mix = `rgba(${colorToRGB(\n    style.text_outline_color\n  )}, ${style.text_outline_alpha})`\n\n  if (theme.base === \"dark\") {\n    style.button_color = invertColor(style.button_color)\n    style.button_hover_color = invertColor(style.button_hover_color)\n    style.edge_color = invertColor(style.edge_color)\n    style.edge_hover_color = invertColor(style.edge_hover_color)\n    style.node_border_color = invertColor(style.node_border_color)\n    style.node_color = invertColor(style.node_color)\n    style.node_hover_color = invertColor(style.node_hover_color)\n    style.text_color = invertColor(style.text_color)\n    style.text_hover_color = invertColor(style.text_hover_color)\n    style.text_outline_color = invertColor(style.text_outline_color)\n    style.text_outline_color_mix = `rgba(${colorToRGB(\n      style.text_outline_color\n    )}, ${style.text_outline_alpha})`\n  }\n  Object.entries(style).forEach(([key, value]) => {\n    key = `--${key.replaceAll(\"_\", \"-\")}`\n    document.getElementById(\"root\")!.style.setProperty(key, value)\n  })\n  document\n    .getElementById(\"root\")!\n    .style.setProperty(\"--backgroundColor\", theme.backgroundColor)\n}\n\nconst Tree = (props: ComponentProps) => {\n  const args = props.args\n  const key = args.key\n  const style: styleType = args.style\n  const theme = props.theme\n  const [lastFrameHeight, setLastFrameHeight] = useState(0)\n  const treeRef: any = useRef(null)\n\n  setStyle(style, theme)\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (treeRef.current != null) {\n        setLastFrameHeight(treeRef.current!.clientHeight)\n      }\n    }, 20)\n    Streamlit.setFrameHeight()\n    // console.log(\n    //   lastFrameHeight,\n    //   Streamlit.lastFrameHeight,\n    //   treeRef.current!.clientHeight\n    // )\n    return () => clearInterval(intervalId)\n  }, [lastFrameHeight])\n\n  const treeToPng = async () => {\n    const element = document.querySelector(\".tree\")!\n    console.log(element.scrollWidth, element.clientWidth)\n    const useWidth = element.scrollWidth\n    const canvas = await html2canvas(document.querySelector(\".tree\")!, {\n      width: useWidth,\n      windowWidth: useWidth,\n      scale: 4,\n    })\n    const dataURL = canvas.toDataURL(\"image/jpg\")\n    downloadjs(dataURL, `${key}.jpg`, \"image/jpg\")\n  }\n\n  // const style: React.CSSProperties = {}\n\n  return (\n    <ArgsContext.Provider value={args}>\n      <button className=\"download-button\" onClick={(e) => treeToPng()}>\n        Download as Image\n      </button>\n      <div className=\"tree\" ref={treeRef}>\n        <ul className=\"rootNode\">\n          <li>\n            <Node id={0} depth={0} />\n          </li>\n        </ul>\n      </div>\n      <br />\n    </ArgsContext.Provider>\n  )\n}\n\nexport default withStreamlitConnection(Tree)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { StreamlitProvider } from \"streamlit-component-lib-react-hooks\"\nimport Tree from \"./Tree\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <StreamlitProvider>\n      <Tree />\n    </StreamlitProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}