# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime


class TtsRequest(pydantic.BaseModel):
    speech: str = pydantic.Field(
        description=(
            '<span style="white-space: nowrap">`non-empty`</span> <span style="white-space: nowrap">`<= 1000 characters`</span>\n'
        )
    )
    voice: typing.Optional[str]
    model_type: typing.Optional[str]
    voicemodel_uuid: typing.Optional[str]
    pace: typing.Optional[float]
    duration: typing.Optional[typing.List[float]]
    pitch: typing.Optional[typing.List[float]]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        json_encoders = {dt.datetime: serialize_datetime}
