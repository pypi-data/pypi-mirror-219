# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime
from .memberships import Memberships
from .sample import Sample


class VoiceReturn(pydantic.BaseModel):
    added_at: typing.Optional[str]
    architecture: typing.Optional[str]
    category: typing.Optional[str]
    contributors: typing.Optional[typing.List[str]]
    controls: typing.Optional[bool]
    display_name: str
    is_active: typing.Optional[bool]
    model_id: typing.Optional[str]
    memberships: typing.Optional[typing.List[Memberships]]
    is_private: bool
    is_primary: typing.Optional[bool]
    name: str
    voice_actor: typing.Optional[str]
    tags: typing.Optional[typing.List[str]]
    images: typing.Optional[typing.List[str]]
    samples: typing.Optional[typing.List[Sample]]
    symbol_set: typing.Optional[str]
    voicemodel_uuid: typing.Optional[str]
    hifi_gan_vocoder: typing.Optional[str]
    ml_model_id: typing.Optional[int]
    speaker_id: typing.Optional[int]
    language: typing.Optional[str]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        json_encoders = {dt.datetime: serialize_datetime}
