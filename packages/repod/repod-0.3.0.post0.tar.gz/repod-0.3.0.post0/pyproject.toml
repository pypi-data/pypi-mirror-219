[project]
authors = [
    { name = "Arch Linux", email = "arch-projects@lists.archlinux.org" },
]
dynamic = []
requires-python = ">=3.10,<4.0"
dependencies = [
    "aiofiles>=23.1.0",
    "email-validator>=2.0.0",
    "jinja2>=3.1.2",
    "orjson>=3.9.2",
    "pydantic>=2.0",
    "pydantic-settings>=2.0.2",
    "python-magic>=0.4.27",
    "pyxdg>=0.28",
    "pyzstd>=0.15.7",
    "subprocess-tee>=0.4.1",
    "tomli>=2.0.1; python_version<'3.11'",
]
name = "repod"
description = "Tooling to maintain binary package repositories for Linux distributions using the pacman package manager"
readme = "README.md"
keywords = [
    "arch linux",
    "repository",
    "pacman",
    "packages",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Topic :: Database",
    "Topic :: Database :: Database Engines/Servers",
    "Topic :: Documentation :: Sphinx",
    "Topic :: Internet",
    "Topic :: Security :: Cryptography",
    "Topic :: Software Development",
    "Topic :: System :: Archiving :: Packaging",
    "Topic :: System :: Operating System",
    "Topic :: System :: Software Distribution",
    "Topic :: Utilities",
    "Typing :: Typed",
]
version = "0.3.0.post0"

[project.license]
text = "GPL-3.0-or-later"

[project.urls]
"Bug Tracker" = "https://gitlab.archlinux.org/archlinux/repod/-/issues/"
homepage = "https://gitlab.archlinux.org/archlinux/repod"
repository = "https://gitlab.archlinux.org/archlinux/repod"
documentation = "https://repod.archlinux.page"

[project.optional-dependencies]
alt_vercmp = [
    "pyalpm<1.0.0,>=0.10.6",
]
alt_file = [
    "file-magic<1.0.0,>=0.4.0",
]

[project.scripts]
repod-file = "repod.cli:repod_file"

[tool.pdm.dev-dependencies]
dev = [
    "black>=23.7.0",
    "coverage>=6.5.0",
    "coverage-conditional-plugin>=0.9.0",
    "flake8>=6.0.0",
    "isort>=5.12.0",
    "mypy[install-types,reports]>=1.3",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-lazy-fixture>=0.6.3",
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.2",
    "sphinx-argparse>=0.4.0",
    "sphinxcontrib-programoutput>=0.17",
    "vulture>=2.7",
    "pydocstyle>=6.3.0",
    "bandit>=1.7.5",
]

[tool.pdm.version]
source = "scm"

[tool.pdm.build]
excludes = [
    "./**/.git",
    "docs/_build/",
    "docs/schema/",
]
includes = [
    "repod",
]
package-dir = "."
source-includes = [
    "tests/",
    "docs/",
    "LICENSE",
    "Makefile",
]

[tool.pdm.scripts.build]
cmd = "make build"

[tool.pdm.scripts.coverage]
cmd = "make coverage"

[tool.pdm.scripts.docs]
cmd = "make docs"

[tool.pdm.scripts.fmt]
cmd = "make fmt"

[tool.pdm.scripts.integration]
cmd = "make integration"

[tool.pdm.scripts.lint]
cmd = "make lint"

[tool.pdm.scripts.regex]
cmd = "make regex"

[tool.pytest.ini_options]
markers = [
    "integration",
    "regex",
]
asyncio_mode = "auto"

[tool.bandit]
targets = [
    "docs",
    "repod",
    "tests",
]
exclude_dirs = [
    ".git/",
    ".idea/",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    ".venv",
]

[tool.black]
line-length = 120
exclude = "/(\n  \\.direnv|\n  |\\.eggs\n  |\\.git\n  |\\.hg\n  |\\.mypy_cache\n  |\\.nox\n  |\\.tox\n  |\\.venv\n  |\\.svn\n  |_build\n  |buck-out\n  |db-write\n  |db2json\n  |dbscripts\n  |build\n  |dist\n)/\n"

[tool.coverage.path]
source = "repod"

[tool.coverage.report]
omit = [
    "tests/*",
    "db-write/*",
    "db2json/*",
    "dbscripts/*",
]
precision = 2
show_missing = true

[tool.coverage.run]
branch = true
command_line = "-m pytest --junit-xml=junit-report.xml -vv tests/ -m 'not integration and not regex'"
omit = [
    "tests/*",
    "db-write/*",
    "db2json/*",
    "dbscripts/*",
]
relative_files = true
plugins = [
    "coverage_conditional_plugin",
]

[tool.coverage.xml]
output = "coverage.xml"

[tool.coverage.coverage_conditional_plugin.rules]
no-cover-nonlinux = "'linux' not in sys.platform"

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_defs = true
follow_imports = "silent"
follow_imports_for_stubs = true
ignore_errors = false
ignore_missing_imports = true
local_partial_types = false
no_implicit_optional = true
show_error_codes = true
strict_equality = true
strict_optional = true
warn_incomplete_stub = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.vulture]
ignore_names = [
    "dotenv_settings",
    "env_settings",
    "field",
    "field_name",
    "file_secret_settings",
]
min_confidence = 70

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"
