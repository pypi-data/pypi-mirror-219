{"version":3,"file":"chunks/app_views_settings_projectProguard_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/acl/role.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/deprecatedAsyncView.tsx","webpack:///./app/views/settings/projectProguard/projectProguardRow.tsx","webpack:///./app/views/settings/projectProguard/projectProguard.tsx","webpack:///./app/views/settings/projectProguard/index.tsx"],"sourcesContent":["import {useMemo} from 'react';\n\nimport ConfigStore from 'sentry/stores/configStore';\nimport {Organization, User} from 'sentry/types';\nimport {isActiveSuperuser} from 'sentry/utils/isActiveSuperuser';\nimport {isRenderFunc} from 'sentry/utils/isRenderFunc';\nimport withOrganization from 'sentry/utils/withOrganization';\n\ntype RoleRenderProps = {\n  hasRole: boolean;\n};\n\ntype ChildrenRenderFn = (props: RoleRenderProps) => React.ReactElement | null;\n\nfunction checkUserRole(user: User, organization: Organization, role: RoleProps['role']) {\n  if (!user) {\n    return false;\n  }\n\n  if (isActiveSuperuser()) {\n    return true;\n  }\n\n  if (!Array.isArray(organization.orgRoleList)) {\n    return false;\n  }\n\n  const roleIds = organization.orgRoleList.map(r => r.id);\n\n  if (!roleIds.includes(role) || !roleIds.includes(organization.orgRole ?? '')) {\n    return false;\n  }\n\n  const requiredIndex = roleIds.indexOf(role);\n  const currentIndex = roleIds.indexOf(organization.orgRole ?? '');\n  return currentIndex >= requiredIndex;\n}\n\ninterface RoleProps {\n  /**\n   * If children is a function then will be treated as a render prop and\n   * passed RoleRenderProps.\n   *\n   * The other interface is more simple, only show `children` if user has\n   * the minimum required role.\n   */\n  children: React.ReactElement | ChildrenRenderFn;\n  /**\n   * Current Organization\n   */\n  organization: Organization;\n  /**\n   * Minimum required role\n   */\n  role: string;\n}\n\nfunction Role({role, organization, children}: RoleProps): React.ReactElement | null {\n  const user = ConfigStore.get('user');\n\n  const hasRole = useMemo(\n    () => checkUserRole(user, organization, role),\n    // It seems that this returns a stable reference, but\n    [organization, role, user]\n  );\n\n  if (isRenderFunc<ChildrenRenderFn>(children)) {\n    return children({hasRole});\n  }\n\n  return hasRole ? children : null;\n}\n\nconst withOrganizationRole = withOrganization(Role);\n\nexport {withOrganizationRole as Role};\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import DeprecatedAsyncComponent from 'sentry/components/deprecatedAsyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\nexport type AsyncViewState = DeprecatedAsyncComponent['state'];\nexport type AsyncViewProps = DeprecatedAsyncComponent['props'];\n\n/**\n * @deprecated use useApiQuery instead.\n *\n * Read the dev docs page on network requests for more information [1].\n *\n * [1]: https://develop.sentry.dev/frontend/network-requests/\n */\nexport default class DeprecatedAsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends DeprecatedAsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport Access from 'sentry/components/acl/access';\nimport {Role} from 'sentry/components/acl/role';\nimport {Button} from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport Confirm from 'sentry/components/confirm';\nimport FileSize from 'sentry/components/fileSize';\nimport Link from 'sentry/components/links/link';\nimport TimeSince from 'sentry/components/timeSince';\nimport {Tooltip} from 'sentry/components/tooltip';\nimport {IconClock, IconDelete, IconDownload} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {DebugFile} from 'sentry/types/debugFiles';\n\ntype Props = {\n  downloadRole: string;\n  downloadUrl: string;\n  mapping: DebugFile;\n  onDelete: (id: string) => void;\n  orgSlug: string;\n};\n\nfunction ProjectProguardRow({\n  mapping,\n  onDelete,\n  downloadUrl,\n  downloadRole,\n  orgSlug,\n}: Props) {\n  const {id, debugId, uuid, size, dateCreated} = mapping;\n\n  const handleDeleteClick = () => {\n    onDelete(id);\n  };\n\n  return (\n    <Fragment>\n      <NameColumn>\n        <Name>{debugId || uuid || `(${t('empty')})`}</Name>\n        <TimeWrapper>\n          <IconClock size=\"sm\" />\n          <TimeSince date={dateCreated} />\n        </TimeWrapper>\n      </NameColumn>\n      <SizeColumn>\n        <FileSize bytes={size} />\n      </SizeColumn>\n      <ActionsColumn>\n        <ButtonBar gap={0.5}>\n          <Role role={downloadRole}>\n            {({hasRole}) => (\n              <Tooltip\n                title={tct(\n                  'Mappings can only be downloaded by users with organization [downloadRole] role[orHigher]. This can be changed in [settingsLink:Debug Files Access] settings.',\n                  {\n                    downloadRole,\n                    orHigher: downloadRole !== 'owner' ? ` ${t('or higher')}` : '',\n                    settingsLink: <Link to={`/settings/${orgSlug}/#debugFilesRole`} />,\n                  }\n                )}\n                disabled={hasRole}\n                isHoverable\n              >\n                <Button\n                  size=\"sm\"\n                  icon={<IconDownload size=\"sm\" />}\n                  disabled={!hasRole}\n                  href={downloadUrl}\n                  title={hasRole ? t('Download Mapping') : undefined}\n                  aria-label={t('Download Mapping')}\n                />\n              </Tooltip>\n            )}\n          </Role>\n\n          <Access access={['project:releases']}>\n            {({hasAccess}) => (\n              <Tooltip\n                disabled={hasAccess}\n                title={t('You do not have permission to delete mappings.')}\n              >\n                <Confirm\n                  message={t('Are you sure you want to remove this mapping?')}\n                  onConfirm={handleDeleteClick}\n                  disabled={!hasAccess}\n                >\n                  <Button\n                    size=\"sm\"\n                    icon={<IconDelete size=\"sm\" />}\n                    title={hasAccess ? t('Remove Mapping') : undefined}\n                    aria-label={t('Remove Mapping')}\n                    disabled={!hasAccess}\n                  />\n                </Confirm>\n              </Tooltip>\n            )}\n          </Access>\n        </ButtonBar>\n      </ActionsColumn>\n    </Fragment>\n  );\n}\n\nconst NameColumn = styled('div')`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n`;\n\nconst SizeColumn = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n  text-align: right;\n  align-items: center;\n`;\n\nconst ActionsColumn = styled(SizeColumn)``;\n\nconst Name = styled('div')`\n  padding-right: ${space(4)};\n  overflow-wrap: break-word;\n  word-break: break-all;\n`;\n\nconst TimeWrapper = styled('div')`\n  display: grid;\n  gap: ${space(0.5)};\n  grid-template-columns: min-content 1fr;\n  font-size: ${p => p.theme.fontSizeMedium};\n  align-items: center;\n  color: ${p => p.theme.subText};\n  margin-top: ${space(1)};\n`;\n\nexport default ProjectProguardRow;\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Pagination from 'sentry/components/pagination';\nimport PanelTable from 'sentry/components/panels/panelTable';\nimport SearchBar from 'sentry/components/searchBar';\nimport {t, tct} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport {DebugFile} from 'sentry/types/debugFiles';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport DeprecatedAsyncView from 'sentry/views/deprecatedAsyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\nimport ProjectProguardRow from './projectProguardRow';\n\ntype Props = RouteComponentProps<{projectId: string}, {}> & {\n  organization: Organization;\n  project: Project;\n};\n\ntype State = DeprecatedAsyncView['state'] & {\n  mappings: DebugFile[];\n};\n\nclass ProjectProguard extends DeprecatedAsyncView<Props, State> {\n  getTitle() {\n    const {projectId} = this.props.params;\n\n    return routeTitleGen(t('ProGuard Mappings'), projectId, false);\n  }\n\n  getDefaultState(): State {\n    return {\n      ...super.getDefaultState(),\n      mappings: [],\n    };\n  }\n\n  getEndpoints(): ReturnType<DeprecatedAsyncView['getEndpoints']> {\n    const {organization, params, location} = this.props;\n    const {projectId} = params;\n\n    const endpoints: ReturnType<DeprecatedAsyncView['getEndpoints']> = [\n      [\n        'mappings',\n        `/projects/${organization.slug}/${projectId}/files/dsyms/`,\n        {query: {query: location.query.query, file_formats: 'proguard'}},\n      ],\n    ];\n\n    return endpoints;\n  }\n\n  handleDelete = (id: string) => {\n    const {organization} = this.props;\n    const {projectId} = this.props.params;\n\n    this.setState({\n      loading: true,\n    });\n\n    this.api.request(\n      `/projects/${organization.slug}/${projectId}/files/dsyms/?id=${encodeURIComponent(\n        id\n      )}`,\n      {\n        method: 'DELETE',\n        complete: () => this.fetchData(),\n      }\n    );\n  };\n\n  handleSearch = (query: string) => {\n    const {location, router} = this.props;\n\n    router.push({\n      ...location,\n      query: {...location.query, cursor: undefined, query},\n    });\n  };\n\n  getQuery() {\n    const {query} = this.props.location.query;\n\n    return typeof query === 'string' ? query : undefined;\n  }\n\n  getEmptyMessage() {\n    if (this.getQuery()) {\n      return t('There are no mappings that match your search.');\n    }\n\n    return t('There are no mappings for this project.');\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderMappings() {\n    const {mappings} = this.state;\n    const {organization, params} = this.props;\n    const {projectId} = params;\n\n    if (!mappings?.length) {\n      return null;\n    }\n\n    return mappings.map(mapping => {\n      const downloadUrl = `${this.api.baseUrl}/projects/${\n        organization.slug\n      }/${projectId}/files/dsyms/?id=${encodeURIComponent(mapping.id)}`;\n\n      return (\n        <ProjectProguardRow\n          mapping={mapping}\n          downloadUrl={downloadUrl}\n          onDelete={this.handleDelete}\n          downloadRole={organization.debugFilesRole}\n          key={mapping.id}\n          orgSlug={organization.slug}\n        />\n      );\n    });\n  }\n\n  renderBody() {\n    const {loading, mappings, mappingsPageLinks} = this.state;\n\n    return (\n      <Fragment>\n        <SettingsPageHeader\n          title={t('ProGuard Mappings')}\n          action={\n            <SearchBar\n              placeholder={t('Filter mappings')}\n              onSearch={this.handleSearch}\n              query={this.getQuery()}\n              width=\"280px\"\n            />\n          }\n        />\n\n        <TextBlock>\n          {tct(\n            `ProGuard mapping files are used to convert minified classes, methods and field names into a human readable format. To learn more about proguard mapping files, [link: read the docs].`,\n            {\n              link: (\n                <ExternalLink href=\"https://docs.sentry.io/platforms/android/proguard/\" />\n              ),\n            }\n          )}\n        </TextBlock>\n\n        <StyledPanelTable\n          headers={[\n            t('Mapping'),\n            <SizeColumn key=\"size\">{t('File Size')}</SizeColumn>,\n            '',\n          ]}\n          emptyMessage={this.getEmptyMessage()}\n          isEmpty={mappings?.length === 0}\n          isLoading={loading}\n        >\n          {this.renderMappings()}\n        </StyledPanelTable>\n        <Pagination pageLinks={mappingsPageLinks} />\n      </Fragment>\n    );\n  }\n}\n\nconst StyledPanelTable = styled(PanelTable)`\n  grid-template-columns: minmax(220px, 1fr) max-content 120px;\n`;\n\nconst SizeColumn = styled('div')`\n  text-align: right;\n`;\n\nexport default ProjectProguard;\n","import {Component} from 'react';\n\nimport withOrganization from 'sentry/utils/withOrganization';\n\nimport ProjectProguard from './projectProguard';\n\nclass ProjectProguardContainer extends Component<ProjectProguard['props']> {\n  render() {\n    return <ProjectProguard {...this.props} />;\n  }\n}\n\nexport default withOrganization(ProjectProguardContainer);\n"],"names":["withOrganizationRole","withOrganization","_ref","role","organization","children","user","ConfigStore","get","hasRole","useMemo","isActiveSuperuser","Array","isArray","orgRoleList","roleIds","map","r","id","includes","orgRole","requiredIndex","indexOf","checkUserRole","isRenderFunc","routeName","orgSlug","projectSlug","arguments","length","undefined","tmplBase","tmpl","DeprecatedAsyncView","DeprecatedAsyncComponent","getTitle","render","_jsx","SentryDocumentTitle","title","this","renderComponent","displayName","ProjectProguardRow","mapping","onDelete","downloadUrl","downloadRole","debugId","uuid","size","dateCreated","handleDeleteClick","_jsxs","Fragment","NameColumn","Name","t","TimeWrapper","IconClock","TimeSince","date","SizeColumn","FileSize","bytes","ActionsColumn","ButtonBar","gap","Role","_ref2","Tooltip","tct","orHigher","settingsLink","Link","to","disabled","isHoverable","Button","icon","IconDownload","href","Access","access","_ref3","hasAccess","Confirm","message","onConfirm","IconDelete","_styled","target","name","styles","space","p","theme","fontSizeMedium","subText","ProjectProguard","constructor","_defineProperty","props","projectId","params","setState","loading","api","request","slug","encodeURIComponent","method","complete","fetchData","query","location","router","push","cursor","routeTitleGen","getDefaultState","super","mappings","getEndpoints","file_formats","getQuery","getEmptyMessage","renderLoading","renderBody","renderMappings","state","baseUrl","handleDelete","debugFilesRole","mappingsPageLinks","SettingsPageHeader","action","SearchBar","placeholder","onSearch","handleSearch","width","TextBlock","link","ExternalLink","StyledPanelTable","headers","emptyMessage","isEmpty","isLoading","Pagination","pageLinks","PanelTable","ProjectProguardContainer","Component"],"sourceRoot":""}