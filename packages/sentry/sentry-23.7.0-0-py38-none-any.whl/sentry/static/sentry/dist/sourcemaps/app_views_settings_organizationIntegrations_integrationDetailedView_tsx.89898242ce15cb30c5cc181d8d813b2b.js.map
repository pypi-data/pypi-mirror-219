{"version":3,"file":"chunks/app_views_settings_organizationIntegrations_integrationDetailedView_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/views/settings/organizationIntegrations/addIntegration.tsx","webpack:///./app/views/settings/organizationIntegrations/addIntegrationButton.tsx","webpack:///./app/views/settings/organizationIntegrations/installedIntegration.tsx","webpack:///./app/views/settings/organizationIntegrations/integrationDetailedView.tsx","webpack:///./app/views/settings/organizationIntegrations/integrationItem.tsx"],"sourcesContent":["import {Component} from 'react';\nimport * as qs from 'query-string';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {t} from 'sentry/locale';\nimport ConfigStore from 'sentry/stores/configStore';\nimport {IntegrationProvider, IntegrationWithConfig, Organization} from 'sentry/types';\nimport {trackIntegrationAnalytics} from 'sentry/utils/integrationUtil';\n\ntype Props = {\n  children: (\n    openDialog: (urlParams?: {[key: string]: string}) => void\n  ) => React.ReactNode;\n  onInstall: (data: IntegrationWithConfig) => void;\n  organization: Organization;\n  provider: IntegrationProvider;\n  account?: string; // for analytics\n  analyticsParams?: {\n    already_installed: boolean;\n    view:\n      | 'integrations_directory_integration_detail'\n      | 'integrations_directory'\n      | 'onboarding'\n      | 'project_creation';\n  };\n  modalParams?: {[key: string]: string};\n};\n\nexport default class AddIntegration extends Component<Props> {\n  componentDidMount() {\n    window.addEventListener('message', this.didReceiveMessage);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('message', this.didReceiveMessage);\n    this.dialog?.close();\n  }\n\n  dialog: Window | null = null;\n\n  computeCenteredWindow(width: number, height: number) {\n    // Taken from: https://stackoverflow.com/questions/4068373/center-a-popup-window-on-screen\n    const screenLeft =\n      window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n\n    const screenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n\n    const innerWidth = window.innerWidth\n      ? window.innerWidth\n      : document.documentElement.clientWidth\n      ? document.documentElement.clientWidth\n      : screen.width;\n\n    const innerHeight = window.innerHeight\n      ? window.innerHeight\n      : document.documentElement.clientHeight\n      ? document.documentElement.clientHeight\n      : screen.height;\n\n    const left = innerWidth / 2 - width / 2 + screenLeft;\n    const top = innerHeight / 2 - height / 2 + screenTop;\n\n    return {left, top};\n  }\n\n  openDialog = (urlParams?: {[key: string]: string}) => {\n    const {account, analyticsParams, modalParams, organization, provider} = this.props;\n\n    trackIntegrationAnalytics('integrations.installation_start', {\n      integration: provider.key,\n      integration_type: 'first_party',\n      organization,\n      ...analyticsParams,\n    });\n    const name = 'sentryAddIntegration';\n    const {url, width, height} = provider.setupDialog;\n    const {left, top} = this.computeCenteredWindow(width, height);\n\n    let query: {[key: string]: string} = {...urlParams};\n\n    if (account) {\n      query.account = account;\n    }\n\n    if (modalParams) {\n      query = {...query, ...modalParams};\n    }\n\n    const installUrl = `${url}?${qs.stringify(query)}`;\n    const opts = `scrollbars=yes,width=${width},height=${height},top=${top},left=${left}`;\n\n    this.dialog = window.open(installUrl, name, opts);\n    this.dialog && this.dialog.focus();\n  };\n\n  didReceiveMessage = (message: MessageEvent) => {\n    const {analyticsParams, onInstall, organization, provider} = this.props;\n    const validOrigins = [\n      ConfigStore.get('links').sentryUrl,\n      ConfigStore.get('links').organizationUrl,\n      document.location.origin,\n    ];\n    if (!validOrigins.includes(message.origin)) {\n      return;\n    }\n\n    if (message.source !== this.dialog) {\n      return;\n    }\n\n    const {success, data} = message.data;\n    this.dialog = null;\n\n    if (!success) {\n      addErrorMessage(data?.error ?? t('An unknown error occurred'));\n      return;\n    }\n\n    if (!data) {\n      return;\n    }\n    trackIntegrationAnalytics('integrations.installation_complete', {\n      integration: provider.key,\n      integration_type: 'first_party',\n      organization,\n      ...analyticsParams,\n    });\n    addSuccessMessage(t('%s added', provider.name));\n    onInstall(data);\n  };\n\n  render() {\n    const {children} = this.props;\n\n    return children(this.openDialog);\n  }\n}\n","import {Button, ButtonProps} from 'sentry/components/button';\nimport {Tooltip} from 'sentry/components/tooltip';\nimport {t} from 'sentry/locale';\nimport {IntegrationWithConfig} from 'sentry/types';\n\nimport AddIntegration from './addIntegration';\n\ninterface AddIntegrationButtonProps\n  extends Omit<ButtonProps, 'children' | 'analyticsParams'>,\n    Pick<\n      React.ComponentProps<typeof AddIntegration>,\n      'provider' | 'organization' | 'analyticsParams' | 'modalParams'\n    > {\n  onAddIntegration: (data: IntegrationWithConfig) => void;\n  buttonText?: string;\n  reinstall?: boolean;\n}\n\nexport function AddIntegrationButton({\n  provider,\n  buttonText,\n  onAddIntegration,\n  organization,\n  reinstall,\n  analyticsParams,\n  modalParams,\n  ...buttonProps\n}: AddIntegrationButtonProps) {\n  const label =\n    buttonText ?? (reinstall ? t('Enable') : t('Add %s', provider.metadata.noun));\n\n  return (\n    <Tooltip\n      disabled={provider.canAdd}\n      title={`Integration cannot be added on Sentry. Enable this integration via the ${provider.name} instance.`}\n    >\n      <AddIntegration\n        provider={provider}\n        onInstall={onAddIntegration}\n        organization={organization}\n        analyticsParams={analyticsParams}\n        modalParams={modalParams}\n      >\n        {onClick => (\n          <Button\n            disabled={!provider.canAdd}\n            {...buttonProps}\n            onClick={() => onClick()}\n            aria-label={t('Add integration')}\n          >\n            {label}\n          </Button>\n        )}\n      </AddIntegration>\n    </Tooltip>\n  );\n}\n","import {Component, Fragment} from 'react';\nimport {useTheme} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport Access from 'sentry/components/acl/access';\nimport {Alert} from 'sentry/components/alert';\nimport {Button} from 'sentry/components/button';\nimport CircleIndicator from 'sentry/components/circleIndicator';\nimport Confirm from 'sentry/components/confirm';\nimport {Tooltip} from 'sentry/components/tooltip';\nimport {IconDelete, IconSettings, IconWarning} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Integration, IntegrationProvider, ObjectStatus, Organization} from 'sentry/types';\nimport {IntegrationAnalyticsKey} from 'sentry/utils/analytics/integrations';\nimport {getIntegrationStatus} from 'sentry/utils/integrationUtil';\n\nimport {AddIntegrationButton} from './addIntegrationButton';\nimport IntegrationItem from './integrationItem';\n\ntype Props = {\n  integration: Integration;\n  onDisable: (integration: Integration) => void;\n  onRemove: (integration: Integration) => void;\n  organization: Organization;\n  provider: IntegrationProvider;\n  trackIntegrationAnalytics: (eventKey: IntegrationAnalyticsKey) => void; // analytics callback\n  requiresUpgrade?: boolean;\n};\n\nexport default class InstalledIntegration extends Component<Props> {\n  handleUninstallClick = () => {\n    this.props.trackIntegrationAnalytics('integrations.uninstall_clicked');\n  };\n\n  getRemovalBodyAndText(aspects: Integration['provider']['aspects']) {\n    if (aspects && aspects.removal_dialog) {\n      return {\n        body: aspects.removal_dialog.body,\n        actionText: aspects.removal_dialog.actionText,\n      };\n    }\n    return {\n      body: t(\n        'Deleting this integration will remove any project associated data. This action cannot be undone. Are you sure you want to delete this integration?'\n      ),\n      actionText: t('Delete'),\n    };\n  }\n\n  handleRemove(integration: Integration) {\n    this.props.onRemove(integration);\n    this.props.trackIntegrationAnalytics('integrations.uninstall_completed');\n  }\n\n  get integrationStatus() {\n    const {integration} = this.props;\n    return getIntegrationStatus(integration);\n  }\n\n  get removeConfirmProps() {\n    const {integration} = this.props;\n    const {body, actionText} = this.getRemovalBodyAndText(integration.provider.aspects);\n\n    const message = (\n      <Fragment>\n        <Alert type=\"error\" showIcon>\n          {t('Deleting this integration has consequences!')}\n        </Alert>\n        {body}\n      </Fragment>\n    );\n    return {\n      message,\n      confirmText: actionText,\n      onConfirm: () => this.handleRemove(integration),\n    };\n  }\n\n  get disableConfirmProps() {\n    const {integration} = this.props;\n    const {body, actionText} = integration.provider.aspects.disable_dialog || {};\n    const message = (\n      <Fragment>\n        <Alert type=\"error\" showIcon>\n          {t('This integration cannot be removed in Sentry')}\n        </Alert>\n        {body}\n      </Fragment>\n    );\n\n    return {\n      message,\n      confirmText: actionText,\n      onConfirm: () => this.props.onDisable(integration),\n    };\n  }\n\n  render() {\n    const {integration, organization, provider, requiresUpgrade} = this.props;\n\n    const removeConfirmProps =\n      this.integrationStatus === 'active' && integration.provider.canDisable\n        ? this.disableConfirmProps\n        : this.removeConfirmProps;\n\n    const allowMemberConfiguration = ['github', 'gitlab'].includes(\n      this.props.provider.key\n    );\n\n    return (\n      <Access access={['org:integrations']}>\n        {({hasAccess}) => {\n          const disableAction = !(hasAccess && this.integrationStatus === 'active');\n          return (\n            <Fragment>\n              <IntegrationItemBox>\n                <IntegrationItem integration={integration} />\n              </IntegrationItemBox>\n              <div>\n                <Tooltip\n                  disabled={allowMemberConfiguration || hasAccess}\n                  position=\"left\"\n                  title={t(\n                    'You must be an organization owner, manager or admin to configure'\n                  )}\n                >\n                  {requiresUpgrade && (\n                    <AddIntegrationButton\n                      analyticsParams={{\n                        view: 'integrations_directory_integration_detail',\n                        already_installed: true,\n                      }}\n                      buttonText={t('Update Now')}\n                      data-test-id=\"integration-upgrade-button\"\n                      disabled={disableAction}\n                      icon={<IconWarning />}\n                      onAddIntegration={() => {}}\n                      organization={organization}\n                      provider={provider}\n                      priority=\"primary\"\n                      size=\"sm\"\n                    />\n                  )}\n                  <StyledButton\n                    borderless\n                    icon={<IconSettings />}\n                    disabled={!allowMemberConfiguration && disableAction}\n                    to={`/settings/${organization.slug}/integrations/${provider.key}/${integration.id}/`}\n                    data-test-id=\"integration-configure-button\"\n                  >\n                    {t('Configure')}\n                  </StyledButton>\n                </Tooltip>\n              </div>\n              <div>\n                <Tooltip\n                  disabled={hasAccess}\n                  title={t(\n                    'You must be an organization owner, manager or admin to uninstall'\n                  )}\n                >\n                  <Confirm\n                    priority=\"danger\"\n                    onConfirming={this.handleUninstallClick}\n                    disabled={!hasAccess}\n                    {...removeConfirmProps}\n                  >\n                    <StyledButton\n                      disabled={!hasAccess}\n                      borderless\n                      icon={<IconDelete />}\n                      data-test-id=\"integration-remove-button\"\n                    >\n                      {t('Uninstall')}\n                    </StyledButton>\n                  </Confirm>\n                </Tooltip>\n              </div>\n              <StyledIntegrationStatus\n                status={this.integrationStatus}\n                // Let the hook handle the alert for disabled org integrations\n                hideTooltip={integration.organizationIntegrationStatus === 'disabled'}\n              />\n            </Fragment>\n          );\n        }}\n      </Access>\n    );\n  }\n}\n\nconst StyledButton = styled(Button)`\n  color: ${p => p.theme.gray300};\n`;\n\nconst IntegrationItemBox = styled('div')`\n  flex: 1;\n`;\n\nfunction IntegrationStatus(\n  props: React.HTMLAttributes<HTMLDivElement> & {\n    status: ObjectStatus;\n    hideTooltip?: boolean;\n  }\n) {\n  const theme = useTheme();\n  const {status, hideTooltip, ...p} = props;\n  const color = status === 'active' ? theme.success : theme.gray300;\n  const inner = (\n    <div {...p}>\n      <CircleIndicator size={6} color={color} />\n      <IntegrationStatusText data-test-id=\"integration-status\">{`${\n        status === 'active'\n          ? t('enabled')\n          : status === 'pending_deletion'\n          ? t('pending deletion')\n          : status === 'disabled'\n          ? t('disabled')\n          : t('unknown')\n      }`}</IntegrationStatusText>\n    </div>\n  );\n  return hideTooltip ? (\n    inner\n  ) : (\n    <Tooltip\n      title={\n        status === 'active'\n          ? t('This integration can be disabled by clicking the Uninstall button')\n          : status === 'disabled'\n          ? t('This integration has been disconnected from the external provider')\n          : t('This integration is pending deletion.')\n      }\n    >\n      {inner}\n    </Tooltip>\n  );\n}\n\nconst StyledIntegrationStatus = styled(IntegrationStatus)`\n  display: flex;\n  align-items: center;\n  color: ${p => p.theme.gray300};\n  font-weight: light;\n  text-transform: capitalize;\n  &:before {\n    content: '|';\n    color: ${p => p.theme.gray200};\n    margin-right: ${space(1)};\n    font-weight: normal;\n  }\n`;\n\nconst IntegrationStatusText = styled('div')`\n  margin: 0 ${space(0.75)} 0 ${space(0.5)};\n`;\n","import {Fragment} from 'react';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {RequestOptions} from 'sentry/api';\nimport {Alert} from 'sentry/components/alert';\nimport {Button} from 'sentry/components/button';\nimport DeprecatedAsyncComponent from 'sentry/components/deprecatedAsyncComponent';\nimport HookOrDefault from 'sentry/components/hookOrDefault';\nimport Panel from 'sentry/components/panels/panel';\nimport PanelItem from 'sentry/components/panels/panelItem';\nimport {IconOpen} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Integration, IntegrationProvider, ObjectStatus} from 'sentry/types';\nimport {getAlertText, getIntegrationStatus} from 'sentry/utils/integrationUtil';\nimport {normalizeUrl} from 'sentry/utils/withDomainRequired';\nimport withOrganization from 'sentry/utils/withOrganization';\n\nimport AbstractIntegrationDetailedView from './abstractIntegrationDetailedView';\nimport {AddIntegrationButton} from './addIntegrationButton';\nimport InstalledIntegration from './installedIntegration';\n\nconst FirstPartyIntegrationAlert = HookOrDefault({\n  hookName: 'component:first-party-integration-alert',\n  defaultComponent: () => null,\n});\n\nconst FirstPartyIntegrationAdditionalCTA = HookOrDefault({\n  hookName: 'component:first-party-integration-additional-cta',\n  defaultComponent: () => null,\n});\n\ntype State = {\n  configurations: Integration[];\n  information: {providers: IntegrationProvider[]};\n};\n\nclass IntegrationDetailedView extends AbstractIntegrationDetailedView<\n  AbstractIntegrationDetailedView['props'],\n  State & AbstractIntegrationDetailedView['state']\n> {\n  getEndpoints(): ReturnType<DeprecatedAsyncComponent['getEndpoints']> {\n    const {organization} = this.props;\n    const {integrationSlug} = this.props.params;\n    return [\n      [\n        'information',\n        `/organizations/${organization.slug}/config/integrations/?provider_key=${integrationSlug}`,\n      ],\n      [\n        'configurations',\n        `/organizations/${organization.slug}/integrations/?provider_key=${integrationSlug}&includeConfig=0`,\n      ],\n    ];\n  }\n\n  get integrationType() {\n    return 'first_party' as const;\n  }\n\n  get provider() {\n    return this.state.information.providers[0];\n  }\n\n  get description() {\n    return this.metadata.description;\n  }\n\n  get author() {\n    return this.metadata.author;\n  }\n\n  get alerts() {\n    const provider = this.provider;\n    const metadata = this.metadata;\n    // The server response for integration installations includes old icon CSS classes\n    // We map those to the currently in use values to their react equivalents\n    // and fallback to IconFlag just in case.\n    const alerts = (metadata.aspects.alerts || []).map(item => ({\n      ...item,\n      showIcon: true,\n    }));\n\n    if (!provider.canAdd && metadata.aspects.externalInstall) {\n      alerts.push({\n        type: 'warning',\n        showIcon: true,\n        text: metadata.aspects.externalInstall.noticeText,\n      });\n    }\n    return alerts;\n  }\n\n  get resourceLinks() {\n    const metadata = this.metadata;\n    return [\n      {url: metadata.source_url, title: 'View Source'},\n      {url: metadata.issue_url, title: 'Report Issue'},\n    ];\n  }\n\n  get metadata() {\n    return this.provider.metadata;\n  }\n\n  get isEnabled() {\n    return this.state.configurations.length > 0;\n  }\n\n  get installationStatus() {\n    // TODO: add transations\n    const {configurations} = this.state;\n    const statusList = configurations.map(getIntegrationStatus);\n    // if we have conflicting statuses, we have a priority order\n    if (statusList.includes('active')) {\n      return 'Installed';\n    }\n    if (statusList.includes('disabled')) {\n      return 'Disabled';\n    }\n    if (statusList.includes('pending_deletion')) {\n      return 'Pending Deletion';\n    }\n    return 'Not Installed';\n  }\n\n  get integrationName() {\n    return this.provider.name;\n  }\n\n  get featureData() {\n    return this.metadata.features;\n  }\n\n  onInstall = (integration: Integration) => {\n    // send the user to the configure integration view for that integration\n    const {organization} = this.props;\n    this.props.router.push(\n      normalizeUrl(\n        `/settings/${organization.slug}/integrations/${integration.provider.key}/${integration.id}/`\n      )\n    );\n  };\n\n  onRemove = (integration: Integration) => {\n    const {organization} = this.props;\n\n    const origIntegrations = [...this.state.configurations];\n\n    const integrations = this.state.configurations.map(i =>\n      i.id === integration.id\n        ? {...i, organizationIntegrationStatus: 'pending_deletion' as ObjectStatus}\n        : i\n    );\n\n    this.setState({configurations: integrations});\n\n    const options: RequestOptions = {\n      method: 'DELETE',\n      error: () => {\n        this.setState({configurations: origIntegrations});\n        addErrorMessage(t('Failed to remove Integration'));\n      },\n    };\n\n    this.api.request(\n      `/organizations/${organization.slug}/integrations/${integration.id}/`,\n      options\n    );\n  };\n\n  onDisable = (integration: Integration) => {\n    let url: string;\n\n    const [domainName, orgName] = integration.domainName.split('/');\n    if (integration.accountType === 'User') {\n      url = `https://${domainName}/settings/installations/`;\n    } else {\n      url = `https://${domainName}/organizations/${orgName}/settings/installations/`;\n    }\n\n    window.open(url, '_blank');\n  };\n\n  handleExternalInstall = () => {\n    this.trackIntegrationAnalytics('integrations.installation_start');\n  };\n\n  renderAlert() {\n    return (\n      <FirstPartyIntegrationAlert\n        integrations={this.state.configurations ?? []}\n        hideCTA\n      />\n    );\n  }\n\n  renderAdditionalCTA() {\n    return (\n      <FirstPartyIntegrationAdditionalCTA\n        integrations={this.state.configurations ?? []}\n      />\n    );\n  }\n\n  renderTopButton(disabledFromFeatures: boolean, userHasAccess: boolean) {\n    const {organization} = this.props;\n    const provider = this.provider;\n    const {metadata} = provider;\n\n    const size = 'sm' as const;\n    const priority = 'primary' as const;\n\n    const buttonProps = {\n      style: {marginBottom: space(1)},\n      size,\n      priority,\n      'data-test-id': 'install-button',\n      disabled: disabledFromFeatures,\n      organization,\n    };\n\n    if (!userHasAccess) {\n      return this.renderRequestIntegrationButton();\n    }\n\n    if (provider.canAdd) {\n      return (\n        <AddIntegrationButton\n          provider={provider}\n          onAddIntegration={this.onInstall}\n          analyticsParams={{\n            view: 'integrations_directory_integration_detail',\n            already_installed: this.installationStatus !== 'Not Installed',\n          }}\n          {...buttonProps}\n        />\n      );\n    }\n    if (metadata.aspects.externalInstall) {\n      return (\n        <Button\n          icon={<IconOpen />}\n          href={metadata.aspects.externalInstall.url}\n          onClick={this.handleExternalInstall}\n          external\n          {...buttonProps}\n        >\n          {metadata.aspects.externalInstall.buttonText}\n        </Button>\n      );\n    }\n\n    // This should never happen but we can't return undefined without some refactoring.\n    return <Fragment />;\n  }\n\n  renderConfigurations() {\n    const {configurations} = this.state;\n    const {organization} = this.props;\n    const provider = this.provider;\n\n    if (!configurations.length) {\n      return this.renderEmptyConfigurations();\n    }\n\n    const alertText = getAlertText(configurations);\n\n    return (\n      <Fragment>\n        {alertText && (\n          <Alert type=\"warning\" showIcon>\n            {alertText}\n          </Alert>\n        )}\n        <Panel>\n          {configurations.map(integration => (\n            <PanelItem key={integration.id}>\n              <InstalledIntegration\n                organization={organization}\n                provider={provider}\n                integration={integration}\n                onRemove={this.onRemove}\n                onDisable={this.onDisable}\n                data-test-id={integration.id}\n                trackIntegrationAnalytics={this.trackIntegrationAnalytics}\n                requiresUpgrade={!!alertText}\n              />\n            </PanelItem>\n          ))}\n        </Panel>\n      </Fragment>\n    );\n  }\n}\n\nexport default withOrganization(IntegrationDetailedView);\n","import styled from '@emotion/styled';\n\nimport {space} from 'sentry/styles/space';\nimport {Integration} from 'sentry/types';\nimport IntegrationIcon from 'sentry/views/settings/organizationIntegrations/integrationIcon';\n\ntype Props = {\n  integration: Integration;\n  compact?: boolean;\n};\n\nfunction IntegrationItem({integration, compact = false}: Props) {\n  return (\n    <Flex>\n      <div>\n        <IntegrationIcon size={compact ? 22 : 32} integration={integration} />\n      </div>\n      <Labels compact={compact}>\n        <IntegrationName data-test-id=\"integration-name\">\n          {integration.name}\n        </IntegrationName>\n        <DomainName compact={compact}>{integration.domainName}</DomainName>\n      </Labels>\n    </Flex>\n  );\n}\n\nexport default IntegrationItem;\n\nconst Flex = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Labels = styled('div')<{compact: boolean}>`\n  box-sizing: border-box;\n  display: flex;\n  ${p => (p.compact ? 'align-items: center;' : '')};\n  flex-direction: ${p => (p.compact ? 'row' : 'column')};\n  padding-left: ${space(1)};\n  min-width: 0;\n  justify-content: center;\n`;\n\nconst IntegrationName = styled('div')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  font-weight: bold;\n`;\n\n// Not using the overflowEllipsis style import here\n// as it sets width 100% which causes layout issues in the\n// integration list.\nconst DomainName = styled('div')<{compact: boolean}>`\n  color: ${p => p.theme.subText};\n  margin-left: ${p => (p.compact ? space(1) : 'inherit')};\n  margin-top: ${p => (!p.compact ? 0 : 'inherit')};\n  font-size: ${p => p.theme.fontSizeSmall};\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n"],"names":["AddIntegration","Component","constructor","arguments","_defineProperty","urlParams","account","analyticsParams","modalParams","organization","provider","this","props","trackIntegrationAnalytics","integration","key","integration_type","url","width","height","setupDialog","left","top","computeCenteredWindow","query","installUrl","qs","opts","dialog","window","open","focus","message","onInstall","ConfigStore","get","sentryUrl","organizationUrl","document","location","origin","includes","source","success","data","addSuccessMessage","t","name","addErrorMessage","error","componentDidMount","addEventListener","didReceiveMessage","componentWillUnmount","removeEventListener","close","screenLeft","undefined","screenX","screenTop","screenY","innerWidth","documentElement","clientWidth","screen","innerHeight","clientHeight","render","children","openDialog","displayName","AddIntegrationButton","_ref","buttonText","onAddIntegration","reinstall","buttonProps","label","metadata","noun","_jsx","Tooltip","disabled","canAdd","title","onClick","Button","InstalledIntegration","getRemovalBodyAndText","aspects","removal_dialog","body","actionText","handleRemove","onRemove","integrationStatus","getIntegrationStatus","removeConfirmProps","_jsxs","Fragment","Alert","type","showIcon","confirmText","onConfirm","disableConfirmProps","disable_dialog","onDisable","requiresUpgrade","canDisable","allowMemberConfiguration","Access","access","hasAccess","disableAction","IntegrationItemBox","IntegrationItem","position","view","already_installed","icon","IconWarning","priority","size","StyledButton","borderless","IconSettings","to","slug","id","Confirm","onConfirming","handleUninstallClick","IconDelete","StyledIntegrationStatus","status","hideTooltip","organizationIntegrationStatus","_styled","target","p","theme","gray300","styles","IntegrationStatus","useTheme","color","inner","CircleIndicator","IntegrationStatusText","gray200","space","FirstPartyIntegrationAlert","HookOrDefault","hookName","defaultComponent","FirstPartyIntegrationAdditionalCTA","IntegrationDetailedView","AbstractIntegrationDetailedView","router","push","normalizeUrl","origIntegrations","state","configurations","integrations","map","i","setState","options","method","api","request","domainName","orgName","split","accountType","getEndpoints","integrationSlug","params","integrationType","information","providers","description","author","alerts","item","externalInstall","text","noticeText","resourceLinks","source_url","issue_url","isEnabled","length","installationStatus","statusList","integrationName","featureData","features","renderAlert","hideCTA","renderAdditionalCTA","renderTopButton","disabledFromFeatures","userHasAccess","style","marginBottom","IconOpen","href","handleExternalInstall","external","renderRequestIntegrationButton","renderConfigurations","renderEmptyConfigurations","alertText","getAlertText","Panel","PanelItem","withOrganization","compact","Flex","IntegrationIcon","Labels","IntegrationName","DomainName","fontSizeMedium","subText","fontSizeSmall"],"sourceRoot":""}