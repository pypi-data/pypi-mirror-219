{"version":3,"file":"chunks/app_components_gridEditable_sortLink_tsx-app_views_starfish_components_detailPanel_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/gridEditable/sortLink.tsx","webpack:///./app/utils/useKeyPress.tsx","webpack:///./app/views/starfish/components/slideOverPanel.tsx","webpack:///./app/views/starfish/components/detailPanel.tsx"],"sourcesContent":["import {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport {LocationDescriptorObject} from 'history';\n\nimport Link from 'sentry/components/links/link';\nimport {IconArrow} from 'sentry/icons';\n\nexport type Alignments = 'left' | 'right' | undefined;\nexport type Directions = 'desc' | 'asc' | undefined;\n\ntype Props = {\n  align: Alignments;\n  canSort: boolean;\n  direction: Directions;\n  generateSortLink: () => LocationDescriptorObject | undefined;\n  title: React.ReactNode;\n  onClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n  replace?: boolean;\n};\n\nfunction SortLink({\n  align,\n  title,\n  canSort,\n  generateSortLink,\n  onClick,\n  direction,\n  replace,\n}: Props) {\n  const target = generateSortLink();\n\n  if (!target || !canSort) {\n    return <StyledNonLink align={align}>{title}</StyledNonLink>;\n  }\n\n  const arrow = !direction ? null : (\n    <StyledIconArrow size=\"xs\" direction={direction === 'desc' ? 'down' : 'up'} />\n  );\n\n  const handleOnClick: React.MouseEventHandler<HTMLAnchorElement> = e => {\n    if (replace) {\n      e.preventDefault();\n      browserHistory.replace(target);\n    }\n    onClick?.(e);\n  };\n\n  return (\n    <StyledLink align={align} to={target} onClick={handleOnClick}>\n      {title} {arrow}\n    </StyledLink>\n  );\n}\n\ntype LinkProps = React.ComponentPropsWithoutRef<typeof Link>;\ntype StyledLinkProps = LinkProps & {align: Alignments};\n\nconst StyledLink = styled((props: StyledLinkProps) => {\n  // @ts-expect-error It doesn't look like the `css` property is a part of the props,\n  // but prior to this style of destructure-omitting it, it was being omitted\n  // with lodash.omit. I mean keeping it omitted here just in case.\n  const {align: _align, css: _css, ...forwardProps} = props;\n  return <Link {...forwardProps} />;\n})`\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  color: inherit;\n\n  &:hover,\n  &:active,\n  &:focus,\n  &:visited {\n    color: inherit;\n  }\n\n  ${(p: StyledLinkProps) => (p.align ? `text-align: ${p.align};` : '')}\n`;\n\nconst StyledNonLink = styled('div')<{align: Alignments}>`\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  ${(p: {align: Alignments}) => (p.align ? `text-align: ${p.align};` : '')}\n`;\n\nconst StyledIconArrow = styled(IconArrow)`\n  vertical-align: top;\n`;\n\nexport default SortLink;\n","import {useEffect, useState} from 'react';\n\n/**\n * Hook to detect when a specific key is being pressed\n */\nconst useKeyPress = (targetKey: string, target?: HTMLElement) => {\n  const [keyPressed, setKeyPressed] = useState(false);\n  const current = target ?? document.body;\n\n  useEffect(() => {\n    const downHandler = ({key}: KeyboardEvent) => {\n      if (key === targetKey) {\n        setKeyPressed(true);\n      }\n    };\n\n    const upHandler = ({key}: KeyboardEvent) => {\n      if (key === targetKey) {\n        setKeyPressed(false);\n      }\n    };\n\n    current.addEventListener('keydown', downHandler);\n    current.addEventListener('keyup', upHandler);\n\n    return () => {\n      current.removeEventListener('keydown', downHandler);\n      current.removeEventListener('keyup', upHandler);\n    };\n  }, [targetKey, current]);\n\n  return keyPressed;\n};\n\nexport default useKeyPress;\n","import {ForwardedRef, forwardRef, useEffect} from 'react';\nimport isPropValid from '@emotion/is-prop-valid';\nimport styled from '@emotion/styled';\nimport {motion} from 'framer-motion';\n\nimport {trackAnalytics} from 'sentry/utils/analytics';\nimport {useLocation} from 'sentry/utils/useLocation';\nimport useOrganization from 'sentry/utils/useOrganization';\n\nconst PANEL_WIDTH = '50vw';\n\ntype SlideOverPanelProps = {\n  children: React.ReactNode;\n  collapsed: boolean;\n};\n\nexport default forwardRef(SlideOverPanel);\n\nfunction SlideOverPanel(\n  {collapsed, children}: SlideOverPanelProps,\n  ref: ForwardedRef<HTMLDivElement>\n) {\n  const {query} = useLocation();\n  const organization = useOrganization();\n  useEffect(() => {\n    if (!collapsed) {\n      trackAnalytics('starfish.panel.open', {organization});\n    }\n  }, [query, collapsed, organization]);\n  return (\n    <_SlideOverPanel\n      ref={ref}\n      collapsed={collapsed}\n      initial={{opacity: 0, x: PANEL_WIDTH}}\n      animate={!collapsed ? {opacity: 1, x: 0} : {opacity: 0, x: PANEL_WIDTH}}\n      transition={{\n        type: 'spring',\n        stiffness: 500,\n        damping: 50,\n      }}\n    >\n      {children}\n    </_SlideOverPanel>\n  );\n}\n\nconst _SlideOverPanel = styled(motion.div, {\n  shouldForwardProp: prop =>\n    ['animate', 'transition', 'initial'].includes(prop) ||\n    (prop !== 'collapsed' && isPropValid(prop)),\n})<{\n  collapsed: boolean;\n}>`\n  width: ${PANEL_WIDTH};\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  background: ${p => p.theme.background};\n  color: ${p => p.theme.textColor};\n  border-left: 1px solid ${p => p.theme.border};\n  text-align: left;\n  z-index: ${p => p.theme.zIndex.sidebar - 1};\n  ${p =>\n    p.collapsed\n      ? 'overflow: hidden;'\n      : `overflow-x: hidden;\n  overflow-y: scroll;`}\n`;\n","import {useEffect, useRef, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Button} from 'sentry/components/button';\nimport {IconClose} from 'sentry/icons/iconClose';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport useKeyPress from 'sentry/utils/useKeyPress';\nimport useOnClickOutside from 'sentry/utils/useOnClickOutside';\nimport SlideOverPanel from 'sentry/views/starfish/components/slideOverPanel';\n\ntype DetailProps = {\n  children: React.ReactNode;\n  detailKey?: string;\n  onClose?: () => void;\n};\n\ntype DetailState = {\n  collapsed: boolean;\n};\n\nexport default function Detail({children, detailKey, onClose}: DetailProps) {\n  const [state, setState] = useState<DetailState>({collapsed: true});\n  const escapeKeyPressed = useKeyPress('Escape');\n\n  // Any time the key prop changes (due to user interaction), we want to open the panel\n  useEffect(() => {\n    if (detailKey) {\n      setState({collapsed: false});\n    } else {\n      setState({collapsed: true});\n    }\n  }, [detailKey]);\n\n  const panelRef = useRef<HTMLDivElement>(null);\n  useOnClickOutside(panelRef, () => {\n    if (!state.collapsed) {\n      onClose?.();\n      setState({collapsed: true});\n    }\n  });\n\n  useEffect(() => {\n    if (escapeKeyPressed) {\n      if (!state.collapsed) {\n        onClose?.();\n        setState({collapsed: true});\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [escapeKeyPressed]);\n\n  return (\n    <SlideOverPanel collapsed={state.collapsed} ref={panelRef}>\n      <CloseButtonWrapper>\n        <CloseButton\n          priority=\"link\"\n          size=\"zero\"\n          borderless\n          aria-label={t('Close Details')}\n          icon={<IconClose size=\"sm\" />}\n          onClick={() => {\n            setState({collapsed: true});\n            onClose?.();\n          }}\n        />\n      </CloseButtonWrapper>\n      <DetailWrapper>{children}</DetailWrapper>\n    </SlideOverPanel>\n  );\n}\n\nconst CloseButton = styled(Button)`\n  color: ${p => p.theme.gray300};\n  &:hover {\n    color: ${p => p.theme.gray400};\n  }\n`;\n\nconst CloseButtonWrapper = styled('div')`\n  justify-content: flex-end;\n  display: flex;\n  padding: ${space(2)};\n`;\n\nconst DetailWrapper = styled('div')`\n  padding: 0 ${space(4)};\n`;\n"],"names":["SortLink","_ref","align","title","canSort","generateSortLink","onClick","direction","replace","target","_jsx","StyledNonLink","children","arrow","StyledIconArrow","size","_jsxs","StyledLink","to","e","preventDefault","browserHistory","displayName","_styled","props","_align","css","_css","forwardProps","Link","p","IconArrow","name","styles","useKeyPress","targetKey","keyPressed","setKeyPressed","useState","current","document","body","useEffect","downHandler","key","upHandler","_ref2","addEventListener","removeEventListener","PANEL_WIDTH","forwardRef","SlideOverPanel","ref","collapsed","query","useLocation","organization","useOrganization","trackAnalytics","_SlideOverPanel","initial","opacity","x","animate","transition","type","stiffness","damping","motion","div","shouldForwardProp","prop","includes","isPropValid","theme","background","textColor","border","zIndex","sidebar","Detail","detailKey","onClose","state","setState","escapeKeyPressed","panelRef","useRef","useOnClickOutside","CloseButtonWrapper","CloseButton","priority","borderless","t","icon","IconClose","DetailWrapper","Button","gray300","gray400","space"],"sourceRoot":""}