{"version":3,"file":"chunks/app_views_settings_organizationIntegrations_pluginDetailedView_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/switchButton.tsx","webpack:///./app/views/settings/organizationIntegrations/pluginDeprecationAlert.tsx","webpack:///./app/views/settings/organizationIntegrations/installedPlugin.tsx","webpack:///./app/views/settings/organizationIntegrations/pluginDetailedView.tsx"],"sourcesContent":["import {forwardRef} from 'react';\nimport styled from '@emotion/styled';\n\ntype Props = {\n  toggle: React.MouseEventHandler<HTMLButtonElement>;\n  className?: string;\n  /**\n   * Toggle color is always active.\n   */\n  forceActiveColor?: boolean;\n  forwardedRef?: React.Ref<HTMLButtonElement>;\n  id?: string;\n  isActive?: boolean;\n  isDisabled?: boolean;\n  isLoading?: boolean;\n  name?: string;\n  size?: 'sm' | 'lg';\n};\n\nfunction Switch({\n  forwardedRef,\n  size = 'sm',\n  isActive,\n  forceActiveColor,\n  isLoading,\n  isDisabled,\n  toggle,\n  id,\n  name,\n  className,\n  ...props\n}: Props) {\n  return (\n    <SwitchButton\n      ref={forwardedRef}\n      id={id}\n      name={name}\n      type=\"button\"\n      className={className}\n      onClick={isDisabled ? undefined : toggle}\n      role=\"checkbox\"\n      aria-checked={isActive}\n      isLoading={isLoading}\n      disabled={isDisabled}\n      isActive={isActive}\n      size={size}\n      data-test-id=\"switch\"\n      {...props}\n    >\n      <Toggle\n        isDisabled={isDisabled}\n        isActive={isActive}\n        forceActiveColor={forceActiveColor}\n        size={size}\n      />\n    </SwitchButton>\n  );\n}\n\ntype StyleProps = Partial<Props>;\n\nconst getSize = (p: StyleProps) => (p.size === 'sm' ? 16 : 24);\nconst getToggleSize = (p: StyleProps) => getSize(p) - (p.size === 'sm' ? 4 : 8);\nconst getToggleTop = (p: StyleProps) => (p.size === 'sm' ? 1 : 3);\nconst getTranslateX = (p: StyleProps) =>\n  p.isActive ? getToggleTop(p) + getSize(p) * 0.875 : getToggleTop(p);\n\nconst SwitchButton = styled('button')<StyleProps>`\n  display: inline-block;\n  background: none;\n  padding: 0;\n  border: 1px solid ${p => p.theme.border};\n  position: relative;\n  box-shadow: inset ${p => p.theme.dropShadowMedium};\n  height: ${getSize}px;\n  width: ${p => getSize(p) * 1.875}px;\n  border-radius: ${getSize}px;\n  transition: border 0.1s, box-shadow 0.1s;\n\n  &[disabled] {\n    cursor: not-allowed;\n  }\n\n  &:focus,\n  &.focus-visible {\n    outline: none;\n    border-color: ${p => p.theme.focusBorder};\n    box-shadow: ${p => p.theme.focusBorder} 0 0 0 1px;\n  }\n`;\n\nconst Toggle = styled('span')<StyleProps>`\n  display: block;\n  position: absolute;\n  border-radius: 50%;\n  transition: 0.25s all ease;\n  top: ${getToggleTop}px;\n  transform: translateX(${getTranslateX}px);\n  width: ${getToggleSize}px;\n  height: ${getToggleSize}px;\n  background: ${p =>\n    p.isActive || p.forceActiveColor ? p.theme.active : p.theme.border};\n  opacity: ${p => (p.isDisabled ? 0.4 : null)};\n`;\n\nexport default forwardRef<HTMLButtonElement, Props>((props, ref) => (\n  <Switch {...props} forwardedRef={ref} />\n));\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Alert} from 'sentry/components/alert';\nimport {Button} from 'sentry/components/button';\nimport {t} from 'sentry/locale';\nimport {Organization, PluginWithProjectList} from 'sentry/types';\nimport {trackIntegrationAnalytics} from 'sentry/utils/integrationUtil';\n\ntype Props = {\n  organization: Organization;\n  plugin: PluginWithProjectList;\n};\n\ntype State = {};\n\nclass PluginDeprecationAlert extends Component<Props, State> {\n  render() {\n    const {organization, plugin} = this.props;\n\n    // Short-circuit if not deprecated.\n    if (!plugin.deprecationDate) {\n      return <Fragment />;\n    }\n    const resource = plugin.altIsSentryApp ? 'sentry-apps' : 'integrations';\n    const upgradeUrl = `/settings/${organization.slug}/${resource}/${plugin.firstPartyAlternative}/`;\n    const queryParams = `?${\n      plugin.altIsSentryApp ? '' : 'tab=configurations&'\n    }referrer=directory_upgrade_now`;\n    return (\n      <div>\n        <Alert\n          type=\"warning\"\n          showIcon\n          trailingItems={\n            <UpgradeNowButton\n              href={`${upgradeUrl}${queryParams}`}\n              size=\"xs\"\n              onClick={() =>\n                trackIntegrationAnalytics('integrations.resolve_now_clicked', {\n                  integration_type: 'plugin',\n                  integration: plugin.slug,\n                  organization,\n                })\n              }\n            >\n              {t('Upgrade Now')}\n            </UpgradeNowButton>\n          }\n        >\n          {`This integration is being deprecated on ${plugin.deprecationDate}. Please upgrade to avoid any disruption.`}\n        </Alert>\n      </div>\n    );\n  }\n}\n\nconst UpgradeNowButton = styled(Button)`\n  color: ${p => p.theme.subText};\n  float: right;\n`;\n\nexport default PluginDeprecationAlert;\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport Access from 'sentry/components/acl/access';\nimport {Alert} from 'sentry/components/alert';\nimport {Button} from 'sentry/components/button';\nimport Confirm from 'sentry/components/confirm';\nimport ProjectBadge from 'sentry/components/idBadge/projectBadge';\nimport Switch from 'sentry/components/switchButton';\nimport {IconDelete, IconSettings} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {\n  AvatarProject,\n  Organization,\n  PluginNoProject,\n  PluginProjectItem,\n} from 'sentry/types';\nimport {IntegrationAnalyticsKey} from 'sentry/utils/analytics/integrations';\nimport withApi from 'sentry/utils/withApi';\n\ntype Props = {\n  api: Client;\n  onPluginEnableStatusChange: (projectId: string, status: boolean) => void;\n  onResetConfiguration: (projectId: string) => void;\n  organization: Organization;\n  plugin: PluginNoProject;\n  projectItem: PluginProjectItem;\n  trackIntegrationAnalytics: (eventKey: IntegrationAnalyticsKey) => void; // analytics callback\n  className?: string;\n};\n\nexport class InstalledPlugin extends Component<Props> {\n  get projectId() {\n    return this.props.projectItem.projectId;\n  }\n  getConfirmMessage() {\n    return (\n      <Fragment>\n        <Alert type=\"error\" showIcon>\n          {t(\n            'Deleting this installation will disable the integration for this project and remove any configurations.'\n          )}\n        </Alert>\n      </Fragment>\n    );\n  }\n\n  pluginUpdate = async (data: object, method: 'POST' | 'DELETE' = 'POST') => {\n    const {organization, projectItem, plugin} = this.props;\n    // no try/catch so the caller will have to have it\n    await this.props.api.requestPromise(\n      `/projects/${organization.slug}/${projectItem.projectSlug}/plugins/${plugin.id}/`,\n      {\n        method,\n        data,\n      }\n    );\n  };\n\n  updatePluginEnableStatus = async (enabled: boolean) => {\n    if (enabled) {\n      await this.pluginUpdate({enabled});\n    } else {\n      await this.pluginUpdate({}, 'DELETE');\n    }\n  };\n\n  handleReset = async () => {\n    try {\n      addLoadingMessage(t('Removing...'));\n      await this.pluginUpdate({reset: true});\n      addSuccessMessage(t('Configuration was removed'));\n      this.props.onResetConfiguration(this.projectId);\n      this.props.trackIntegrationAnalytics('integrations.uninstall_completed');\n    } catch (_err) {\n      addErrorMessage(t('Unable to remove configuration'));\n    }\n  };\n\n  handleUninstallClick = () => {\n    this.props.trackIntegrationAnalytics('integrations.uninstall_clicked');\n  };\n\n  toggleEnablePlugin = async (projectId: string, status: boolean = true) => {\n    try {\n      addLoadingMessage(t('Enabling...'));\n      await this.updatePluginEnableStatus(status);\n      addSuccessMessage(\n        status ? t('Configuration was enabled.') : t('Configuration was disabled.')\n      );\n      this.props.onPluginEnableStatusChange(projectId, status);\n      this.props.trackIntegrationAnalytics(\n        status ? 'integrations.enabled' : 'integrations.disabled'\n      );\n    } catch (_err) {\n      addErrorMessage(\n        status\n          ? t('Unable to enable configuration.')\n          : t('Unable to disable configuration.')\n      );\n    }\n  };\n\n  get projectForBadge(): AvatarProject {\n    // this function returns the project as needed for the ProjectBadge component\n    const {projectItem} = this.props;\n    return {\n      slug: projectItem.projectSlug,\n      platform: projectItem.projectPlatform ? projectItem.projectPlatform : undefined,\n    };\n  }\n\n  render() {\n    const {className, plugin, organization, projectItem} = this.props;\n    return (\n      <Container data-test-id=\"installed-plugin\">\n        <Access access={['org:integrations']}>\n          {({hasAccess}) => (\n            <IntegrationFlex className={className}>\n              <IntegrationItemBox>\n                <ProjectBadge project={this.projectForBadge} />\n              </IntegrationItemBox>\n              <div>\n                <StyledButton\n                  borderless\n                  icon={<IconSettings />}\n                  disabled={!hasAccess}\n                  to={`/settings/${organization.slug}/projects/${projectItem.projectSlug}/plugins/${plugin.id}/`}\n                  data-test-id=\"integration-configure-button\"\n                >\n                  {t('Configure')}\n                </StyledButton>\n              </div>\n              <div>\n                <Confirm\n                  priority=\"danger\"\n                  onConfirming={this.handleUninstallClick}\n                  disabled={!hasAccess}\n                  confirmText=\"Delete Installation\"\n                  onConfirm={() => this.handleReset()}\n                  message={this.getConfirmMessage()}\n                >\n                  <StyledButton\n                    disabled={!hasAccess}\n                    borderless\n                    icon={<IconDelete />}\n                    data-test-id=\"integration-remove-button\"\n                  >\n                    {t('Uninstall')}\n                  </StyledButton>\n                </Confirm>\n              </div>\n              <Switch\n                isActive={projectItem.enabled}\n                toggle={() =>\n                  this.toggleEnablePlugin(projectItem.projectId, !projectItem.enabled)\n                }\n                isDisabled={!hasAccess}\n              />\n            </IntegrationFlex>\n          )}\n        </Access>\n      </Container>\n    );\n  }\n}\n\nexport default withApi(InstalledPlugin);\n\nconst Container = styled('div')`\n  padding: ${space(2)};\n  border: 1px solid ${p => p.theme.border};\n  border-bottom: none;\n  background-color: ${p => p.theme.background};\n\n  &:last-child {\n    border-bottom: 1px solid ${p => p.theme.border};\n  }\n`;\n\nconst StyledButton = styled(Button)`\n  color: ${p => p.theme.gray300};\n`;\n\nconst IntegrationFlex = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst IntegrationItemBox = styled('div')`\n  flex: 1 0 fit-content;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  min-width: 0;\n`;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport * as modal from 'sentry/actionCreators/modal';\nimport {Button} from 'sentry/components/button';\nimport ContextPickerModal from 'sentry/components/contextPickerModal';\nimport DeprecatedAsyncComponent from 'sentry/components/deprecatedAsyncComponent';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {PluginProjectItem, PluginWithProjectList} from 'sentry/types';\nimport {normalizeUrl} from 'sentry/utils/withDomainRequired';\nimport withOrganization from 'sentry/utils/withOrganization';\n\nimport AbstractIntegrationDetailedView from './abstractIntegrationDetailedView';\nimport InstalledPlugin from './installedPlugin';\nimport PluginDeprecationAlert from './pluginDeprecationAlert';\n\ntype State = {\n  plugins: PluginWithProjectList[];\n};\n\ntype Tab = AbstractIntegrationDetailedView['state']['tab'];\n\nclass PluginDetailedView extends AbstractIntegrationDetailedView<\n  AbstractIntegrationDetailedView['props'],\n  State & AbstractIntegrationDetailedView['state']\n> {\n  getEndpoints(): ReturnType<DeprecatedAsyncComponent['getEndpoints']> {\n    const {organization} = this.props;\n    const {integrationSlug} = this.props.params;\n    return [\n      [\n        'plugins',\n        `/organizations/${organization.slug}/plugins/configs/?plugins=${integrationSlug}`,\n      ],\n    ];\n  }\n\n  get integrationType() {\n    return 'plugin' as const;\n  }\n\n  get plugin() {\n    return this.state.plugins[0];\n  }\n\n  get description() {\n    return this.plugin.description || '';\n  }\n\n  get author() {\n    return this.plugin.author?.name;\n  }\n\n  get resourceLinks() {\n    return this.plugin.resourceLinks || [];\n  }\n\n  get installationStatus() {\n    return this.plugin.projectList.length > 0 ? 'Installed' : 'Not Installed';\n  }\n\n  get integrationName() {\n    return `${this.plugin.name}${this.plugin.isHidden ? ' (Legacy)' : ''}`;\n  }\n\n  get featureData() {\n    return this.plugin.featureDescriptions;\n  }\n\n  handleResetConfiguration = (projectId: string) => {\n    // make a copy of our project list\n    const projectList = this.plugin.projectList.slice();\n    // find the index of the project\n    const index = projectList.findIndex(item => item.projectId === projectId);\n    // should match but quit if it doesn't\n    if (index < 0) {\n      return;\n    }\n    // remove from array\n    projectList.splice(index, 1);\n    // update state\n    this.setState({\n      plugins: [{...this.state.plugins[0], projectList}],\n    });\n  };\n\n  handlePluginEnableStatus = (projectId: string, enable: boolean = true) => {\n    // make a copy of our project list\n    const projectList = this.plugin.projectList.slice();\n    // find the index of the project\n    const index = projectList.findIndex(item => item.projectId === projectId);\n    // should match but quit if it doesn't\n    if (index < 0) {\n      return;\n    }\n\n    // update item in array\n    projectList[index] = {\n      ...projectList[index],\n      enabled: enable,\n    };\n\n    // update state\n    this.setState({\n      plugins: [{...this.state.plugins[0], projectList}],\n    });\n  };\n\n  handleAddToProject = () => {\n    const plugin = this.plugin;\n    const {organization, router} = this.props;\n    this.trackIntegrationAnalytics('integrations.plugin_add_to_project_clicked');\n    modal.openModal(\n      modalProps => (\n        <ContextPickerModal\n          {...modalProps}\n          nextPath={`/settings/${organization.slug}/projects/:projectId/plugins/${plugin.id}/`}\n          needProject\n          needOrg={false}\n          onFinish={path => {\n            modalProps.closeModal();\n            router.push(normalizeUrl(path));\n          }}\n        />\n      ),\n      {closeEvents: 'escape-key'}\n    );\n  };\n\n  getTabDisplay(tab: Tab) {\n    // we want to show project configurations to make it more clear\n    if (tab === 'configurations') {\n      return 'project configurations';\n    }\n    return 'overview';\n  }\n\n  renderTopButton(disabledFromFeatures: boolean, userHasAccess: boolean) {\n    if (userHasAccess) {\n      return (\n        <AddButton\n          data-test-id=\"install-button\"\n          disabled={disabledFromFeatures}\n          onClick={this.handleAddToProject}\n          size=\"sm\"\n          priority=\"primary\"\n        >\n          {t('Add to Project')}\n        </AddButton>\n      );\n    }\n\n    return this.renderRequestIntegrationButton();\n  }\n\n  renderConfigurations() {\n    const plugin = this.plugin;\n    const {organization} = this.props;\n\n    if (plugin.projectList.length) {\n      return (\n        <Fragment>\n          <PluginDeprecationAlert organization={organization} plugin={plugin} />\n          <div>\n            {plugin.projectList.map((projectItem: PluginProjectItem) => (\n              <InstalledPlugin\n                key={projectItem.projectId}\n                organization={organization}\n                plugin={plugin}\n                projectItem={projectItem}\n                onResetConfiguration={this.handleResetConfiguration}\n                onPluginEnableStatusChange={this.handlePluginEnableStatus}\n                trackIntegrationAnalytics={this.trackIntegrationAnalytics}\n              />\n            ))}\n          </div>\n        </Fragment>\n      );\n    }\n    return this.renderEmptyConfigurations();\n  }\n}\n\nconst AddButton = styled(Button)`\n  margin-bottom: ${space(1)};\n`;\n\nexport default withOrganization(PluginDetailedView);\n"],"names":["Switch","_ref","forwardedRef","size","isActive","forceActiveColor","isLoading","isDisabled","toggle","id","name","className","props","_jsx","SwitchButton","ref","type","onClick","undefined","role","disabled","children","Toggle","displayName","getSize","p","getToggleSize","getToggleTop","getTranslateX","_styled","target","theme","border","dropShadowMedium","focusBorder","active","forwardRef","PluginDeprecationAlert","Component","render","organization","plugin","this","deprecationDate","Fragment","resource","altIsSentryApp","upgradeUrl","slug","firstPartyAlternative","queryParams","Alert","showIcon","trailingItems","UpgradeNowButton","href","trackIntegrationAnalytics","integration_type","integration","t","Button","subText","InstalledPlugin","constructor","_this","arguments","_defineProperty","async","data","method","length","projectItem","api","requestPromise","projectSlug","enabled","pluginUpdate","addLoadingMessage","reset","addSuccessMessage","onResetConfiguration","projectId","_err","addErrorMessage","status","updatePluginEnableStatus","onPluginEnableStatusChange","getConfirmMessage","projectForBadge","platform","projectPlatform","Container","Access","access","hasAccess","_jsxs","IntegrationFlex","IntegrationItemBox","ProjectBadge","project","StyledButton","borderless","icon","IconSettings","to","Confirm","priority","onConfirming","handleUninstallClick","confirmText","onConfirm","handleReset","message","IconDelete","toggleEnablePlugin","withApi","space","background","gray300","styles","PluginDetailedView","AbstractIntegrationDetailedView","projectList","slice","index","findIndex","item","splice","setState","plugins","state","enable","router","modal","openModal","modalProps","ContextPickerModal","nextPath","needProject","needOrg","onFinish","path","closeModal","push","normalizeUrl","closeEvents","getEndpoints","integrationSlug","params","integrationType","description","author","resourceLinks","installationStatus","integrationName","isHidden","featureData","featureDescriptions","getTabDisplay","tab","renderTopButton","disabledFromFeatures","userHasAccess","AddButton","handleAddToProject","renderRequestIntegrationButton","renderConfigurations","map","handleResetConfiguration","handlePluginEnableStatus","renderEmptyConfigurations","withOrganization"],"sourceRoot":""}