{"version":3,"file":"chunks/app_views_settings_organizationIntegrations_sentryAppDetailedView_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/actionCreators/sentryAppInstallations.tsx","webpack:///./app/components/sentryAppIcon.tsx","webpack:///./app/utils/consolidatedScopes.tsx","webpack:///./app/views/settings/organizationIntegrations/SplitInstallationIdModal.tsx","webpack:///./app/views/settings/organizationIntegrations/sentryAppDetailedView.tsx","webpack:///../node_modules/lodash/groupBy.js","webpack:///../node_modules/lodash/invertBy.js"],"sourcesContent":["import {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n  clearIndicators,\n} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport {t} from 'sentry/locale';\nimport {SentryApp, SentryAppInstallation} from 'sentry/types';\n\n/**\n * Install a sentry application\n *\n * @param {Object} client ApiClient\n * @param {String} orgId Organization Slug\n * @param {Object} app SentryApp\n */\nexport function installSentryApp(\n  client: Client,\n  orgId: string,\n  app: SentryApp\n): Promise<SentryAppInstallation> {\n  addLoadingMessage();\n  const promise = client.requestPromise(\n    `/organizations/${orgId}/sentry-app-installations/`,\n    {\n      method: 'POST',\n      data: {slug: app.slug},\n    }\n  );\n  promise.then(\n    () => clearIndicators(),\n    () => addErrorMessage(t('Unable to install %s', app.name))\n  );\n  return promise;\n}\n\n/**\n * Uninstall a sentry application\n *\n * @param {Object} client ApiClient\n * @param {Object} install SentryAppInstallation\n */\nexport function uninstallSentryApp(\n  client: Client,\n  install: SentryAppInstallation\n): Promise<void> {\n  addLoadingMessage();\n  const promise = client.requestPromise(`/sentry-app-installations/${install.uuid}/`, {\n    method: 'DELETE',\n  });\n  const capitalizedAppSlug =\n    install.app.slug.charAt(0).toUpperCase() + install.app.slug.slice(1);\n  promise.then(\n    () => {\n      addSuccessMessage(t('%s successfully uninstalled.', capitalizedAppSlug));\n    },\n    () => clearIndicators()\n  );\n  return promise;\n}\n","import SentryAppAvatar from 'sentry/components/avatar/sentryAppAvatar';\nimport {AvatarSentryApp} from 'sentry/types';\n\ntype Props = {\n  sentryApp: AvatarSentryApp;\n  size: number;\n};\n\nfunction SentryAppIcon({sentryApp, size}: Props) {\n  return <SentryAppAvatar sentryApp={sentryApp} size={size} isColor />;\n}\n\nexport default SentryAppIcon;\n","import groupBy from 'lodash/groupBy';\nimport invertBy from 'lodash/invertBy';\nimport pick from 'lodash/pick';\n\nimport {Permissions} from 'sentry/types';\n\nconst PERMISSION_LEVELS = {\n  read: 0,\n  write: 1,\n  admin: 2,\n};\n\nconst HUMAN_RESOURCE_NAMES = {\n  project: 'Project',\n  team: 'Team',\n  release: 'Release',\n  event: 'Event',\n  org: 'Organization',\n  member: 'Member',\n};\n\nconst DEFAULT_RESOURCE_PERMISSIONS: Permissions = {\n  Project: 'no-access',\n  Team: 'no-access',\n  Release: 'no-access',\n  Event: 'no-access',\n  Organization: 'no-access',\n  Member: 'no-access',\n};\n\nconst PROJECT_RELEASES = 'project:releases';\n\ntype PermissionLevelResources = {\n  admin: string[];\n  read: string[];\n  write: string[];\n};\n/**\n * Numerical value of the scope where Admin is higher than Write,\n * which is higher than Read. Used to sort scopes by access.\n */\nconst permissionLevel = (scope: string): number => {\n  const permission = scope.split(':')[1];\n  return PERMISSION_LEVELS[permission];\n};\n\nconst compareScopes = (a: string, b: string) => permissionLevel(a) - permissionLevel(b);\n\n/**\n * Return the most permissive scope for each resource.\n *\n * Example:\n *    Given the full list of scopes:\n *      ['project:read', 'project:write', 'team:read', 'team:write', 'team:admin']\n *\n *    this would return:\n *      ['project:write', 'team:admin']\n */\nfunction topScopes(scopeList: string[]) {\n  return Object.values(groupBy(scopeList, scope => scope.split(':')[0]))\n    .map(scopes => scopes.sort(compareScopes))\n    .map(scopes => scopes.pop());\n}\n\n/**\n * Convert into a list of Permissions, grouped by resource.\n *\n * This is used in the new/edit Sentry App form. That page displays permissions\n * in a per-Resource manner, meaning one row for Project, one for Organization, etc.\n *\n * This exposes scopes in a way that works for that UI.\n *\n * Example:\n *    {\n *      'Project': 'read',\n *      'Organization': 'write',\n *      'Team': 'no-access',\n *      ...\n *    }\n */\nfunction toResourcePermissions(scopes: string[]): Permissions {\n  const permissions = {...DEFAULT_RESOURCE_PERMISSIONS};\n  let filteredScopes = [...scopes];\n  // The scope for releases is `project:releases`, but instead of displaying\n  // it as a permission of Project, we want to separate it out into its own\n  // row for Releases.\n  if (scopes.includes(PROJECT_RELEASES)) {\n    permissions.Release = 'admin';\n    filteredScopes = scopes.filter((scope: string) => scope !== PROJECT_RELEASES); // remove project:releases\n  }\n\n  topScopes(filteredScopes).forEach((scope: string | undefined) => {\n    if (scope) {\n      const [resource, permission] = scope.split(':');\n      permissions[HUMAN_RESOURCE_NAMES[resource]] = permission;\n    }\n  });\n\n  return permissions;\n}\n\n/**\n * Convert into a list of Permissions, grouped by access and including a\n * list of resources per access level.\n *\n * This is used in the Permissions Modal when installing an App. It displays\n * scopes in a per-Permission way, meaning one row for Read, one for Write,\n * and one for Admin.\n *\n * This exposes scopes in a way that works for that UI.\n *\n * Example:\n *    {\n *      read:  ['Project', 'Organization'],\n *      write: ['Member'],\n *      admin: ['Release']\n *    }\n */\nfunction toPermissions(scopes: string[]): PermissionLevelResources {\n  const defaultPermissions = {read: [], write: [], admin: []};\n  const resourcePermissions = toResourcePermissions(scopes);\n\n  // Filter out the 'no-access' permissions\n  const permissions = pick(invertBy(resourcePermissions), ['read', 'write', 'admin']);\n  return {...defaultPermissions, ...permissions};\n}\n\nexport {toPermissions, toResourcePermissions};\n","import {useCallback, useEffect, useRef} from 'react';\nimport styled from '@emotion/styled';\n\nimport {addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {Button} from 'sentry/components/button';\nimport TextCopyInput from 'sentry/components/textCopyInput';\n\ntype Props = {\n  closeModal: () => void;\n  installationId: string;\n};\n\n/**\n * This component is a hack for Split.\n * It will display the installation ID after installation so users can copy it and paste it in Split's website.\n * We also have a link for users to click so they can go to Split's website.\n */\nexport function SplitInstallationIdModal(props: Props) {\n  const openAdminIntegrationTimeoutRef = useRef<number | undefined>(undefined);\n\n  useEffect(() => {\n    return () => {\n      window.clearTimeout(openAdminIntegrationTimeoutRef.current);\n    };\n  }, []);\n\n  const onCopy = useCallback(async () => {\n    // This hack is needed because the normal copying methods with TextCopyInput do not work correctly\n    await navigator.clipboard.writeText(props.installationId);\n  }, [props.installationId]);\n\n  const handleContinue = useCallback(() => {\n    onCopy();\n    addSuccessMessage('Copied to clipboard');\n\n    window.clearTimeout(openAdminIntegrationTimeoutRef.current);\n\n    openAdminIntegrationTimeoutRef.current = window.setTimeout(() => {\n      window.open('https://app.split.io/org/admin/integrations');\n    }, 2000);\n  }, [onCopy]);\n\n  // no need to translate this temporary component\n  return (\n    <div>\n      <ItemHolder>\n        Copy this Installation ID and click to continue. You will use it to finish setup\n        on Split.io.\n      </ItemHolder>\n      <ItemHolder>\n        <TextCopyInput onCopy={onCopy}>{props.installationId}</TextCopyInput>\n      </ItemHolder>\n      <ButtonHolder>\n        <Button size=\"sm\" onClick={props.closeModal}>\n          Close\n        </Button>\n        <Button size=\"sm\" priority=\"primary\" onClick={handleContinue}>\n          Copy and Open Link\n        </Button>\n      </ButtonHolder>\n    </div>\n  );\n}\n\nconst ItemHolder = styled('div')`\n  margin: 10px;\n`;\n\nconst ButtonHolder = styled(ItemHolder)`\n  text-align: right;\n  & button {\n    margin: 5px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {openModal} from 'sentry/actionCreators/modal';\nimport {\n  installSentryApp,\n  uninstallSentryApp,\n} from 'sentry/actionCreators/sentryAppInstallations';\nimport {Button} from 'sentry/components/button';\nimport CircleIndicator from 'sentry/components/circleIndicator';\nimport Confirm from 'sentry/components/confirm';\nimport DeprecatedAsyncComponent from 'sentry/components/deprecatedAsyncComponent';\nimport SentryAppIcon from 'sentry/components/sentryAppIcon';\nimport {IconSubtract} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {IntegrationFeature, SentryApp, SentryAppInstallation} from 'sentry/types';\nimport {toPermissions} from 'sentry/utils/consolidatedScopes';\nimport {getSentryAppInstallStatus} from 'sentry/utils/integrationUtil';\nimport {addQueryParamsToExistingUrl} from 'sentry/utils/queryString';\nimport {recordInteraction} from 'sentry/utils/recordSentryAppInteraction';\nimport withOrganization from 'sentry/utils/withOrganization';\n\nimport AbstractIntegrationDetailedView from './abstractIntegrationDetailedView';\nimport {SplitInstallationIdModal} from './SplitInstallationIdModal';\n\ntype State = {\n  appInstalls: SentryAppInstallation[];\n  featureData: IntegrationFeature[];\n  sentryApp: SentryApp;\n};\n\ntype Tab = AbstractIntegrationDetailedView['state']['tab'];\n\nclass SentryAppDetailedView extends AbstractIntegrationDetailedView<\n  AbstractIntegrationDetailedView['props'],\n  State & AbstractIntegrationDetailedView['state']\n> {\n  tabs: Tab[] = ['overview'];\n  getEndpoints(): ReturnType<DeprecatedAsyncComponent['getEndpoints']> {\n    const {\n      organization,\n      params: {integrationSlug},\n    } = this.props;\n    return [\n      ['sentryApp', `/sentry-apps/${integrationSlug}/`],\n      ['featureData', `/sentry-apps/${integrationSlug}/features/`],\n      ['appInstalls', `/organizations/${organization.slug}/sentry-app-installations/`],\n    ];\n  }\n\n  onLoadAllEndpointsSuccess() {\n    const {\n      organization,\n      params: {integrationSlug},\n      router,\n    } = this.props;\n\n    // redirect for internal integrations\n    if (this.sentryApp.status === 'internal') {\n      router.push(\n        `/settings/${organization.slug}/developer-settings/${integrationSlug}/`\n      );\n      return;\n    }\n\n    super.onLoadAllEndpointsSuccess();\n    recordInteraction(integrationSlug, 'sentry_app_viewed');\n  }\n\n  get integrationType() {\n    return 'sentry_app' as const;\n  }\n\n  get sentryApp() {\n    return this.state.sentryApp;\n  }\n\n  get description() {\n    return this.state.sentryApp.overview || '';\n  }\n\n  get author() {\n    return this.sentryApp.author;\n  }\n\n  get resourceLinks() {\n    // only show links for published sentry apps\n    if (this.sentryApp.status !== 'published') {\n      return [];\n    }\n    return [\n      {\n        title: 'Documentation',\n        url: `https://docs.sentry.io/product/integrations/${this.integrationSlug}/`,\n      },\n    ];\n  }\n\n  get permissions() {\n    return toPermissions(this.sentryApp.scopes);\n  }\n\n  get installationStatus() {\n    return getSentryAppInstallStatus(this.install);\n  }\n\n  get integrationName() {\n    return this.sentryApp.name;\n  }\n\n  get featureData() {\n    return this.state.featureData;\n  }\n\n  get install() {\n    return this.state.appInstalls.find(i => i.app.slug === this.sentryApp.slug);\n  }\n\n  redirectUser = (install: SentryAppInstallation) => {\n    const {organization} = this.props;\n    const {sentryApp} = this.state;\n    const queryParams = {\n      installationId: install.uuid,\n      code: install.code,\n      orgSlug: organization.slug,\n    };\n    if (sentryApp.redirectUrl) {\n      const redirectUrl = addQueryParamsToExistingUrl(sentryApp.redirectUrl, queryParams);\n      window.location.assign(redirectUrl);\n    }\n  };\n\n  handleInstall = async () => {\n    const {organization} = this.props;\n    const {sentryApp} = this.state;\n    this.trackIntegrationAnalytics('integrations.installation_start', {\n      integration_status: sentryApp.status,\n    });\n    // installSentryApp adds a message on failure\n    const install = await installSentryApp(this.api, organization.slug, sentryApp);\n\n    // installation is complete if the status is installed\n    if (install.status === 'installed') {\n      this.trackIntegrationAnalytics('integrations.installation_complete', {\n        integration_status: sentryApp.status,\n      });\n    }\n\n    if (!sentryApp.redirectUrl) {\n      addSuccessMessage(t('%s successfully installed.', sentryApp.slug));\n      this.setState({appInstalls: [install, ...this.state.appInstalls]});\n\n      // hack for split so we can show the install ID to users for them to copy\n      // Will remove once the proper fix is in place\n      if (['split', 'split-dev', 'split-testing'].includes(sentryApp.slug)) {\n        openModal(({closeModal}) => (\n          <SplitInstallationIdModal\n            installationId={install.uuid}\n            closeModal={closeModal}\n          />\n        ));\n      }\n    } else {\n      this.redirectUser(install);\n    }\n  };\n\n  handleUninstall = async (install: SentryAppInstallation) => {\n    try {\n      await uninstallSentryApp(this.api, install);\n      this.trackIntegrationAnalytics('integrations.uninstall_completed', {\n        integration_status: this.sentryApp.status,\n      });\n      const appInstalls = this.state.appInstalls.filter(\n        i => i.app.slug !== this.sentryApp.slug\n      );\n      return this.setState({appInstalls});\n    } catch (error) {\n      return addErrorMessage(t('Unable to uninstall %s', this.sentryApp.name));\n    }\n  };\n\n  recordUninstallClicked = () => {\n    const sentryApp = this.sentryApp;\n    this.trackIntegrationAnalytics('integrations.uninstall_clicked', {\n      integration_status: sentryApp.status,\n    });\n  };\n\n  renderPermissions() {\n    const permissions = this.permissions;\n    if (!Object.keys(permissions).some(scope => permissions[scope].length > 0)) {\n      return null;\n    }\n\n    return (\n      <PermissionWrapper>\n        <Title>Permissions</Title>\n        {permissions.read.length > 0 && (\n          <Permission>\n            <Indicator />\n            <Text key=\"read\">\n              {tct('[read] access to [resources] resources', {\n                read: <strong>Read</strong>,\n                resources: permissions.read.join(', '),\n              })}\n            </Text>\n          </Permission>\n        )}\n        {permissions.write.length > 0 && (\n          <Permission>\n            <Indicator />\n            <Text key=\"write\">\n              {tct('[read] and [write] access to [resources] resources', {\n                read: <strong>Read</strong>,\n                write: <strong>Write</strong>,\n                resources: permissions.write.join(', '),\n              })}\n            </Text>\n          </Permission>\n        )}\n        {permissions.admin.length > 0 && (\n          <Permission>\n            <Indicator />\n            <Text key=\"admin\">\n              {tct('[admin] access to [resources] resources', {\n                admin: <strong>Admin</strong>,\n                resources: permissions.admin.join(', '),\n              })}\n            </Text>\n          </Permission>\n        )}\n      </PermissionWrapper>\n    );\n  }\n\n  renderTopButton(disabledFromFeatures: boolean, userHasAccess: boolean) {\n    const install = this.install;\n    const capitalizedSlug =\n      this.integrationSlug.charAt(0).toUpperCase() + this.integrationSlug.slice(1);\n    if (install) {\n      return (\n        <Confirm\n          disabled={!userHasAccess}\n          message={tct('Are you sure you want to uninstall the [slug] installation?', {\n            slug: capitalizedSlug,\n          })}\n          onConfirm={() => this.handleUninstall(install)} // called when the user confirms the action\n          onConfirming={this.recordUninstallClicked} // called when the confirm modal opens\n          priority=\"danger\"\n        >\n          <StyledUninstallButton size=\"sm\" data-test-id=\"sentry-app-uninstall\">\n            <IconSubtract isCircled style={{marginRight: space(0.75)}} />\n            {t('Uninstall')}\n          </StyledUninstallButton>\n        </Confirm>\n      );\n    }\n\n    if (userHasAccess) {\n      return (\n        <InstallButton\n          data-test-id=\"install-button\"\n          disabled={disabledFromFeatures}\n          onClick={() => this.handleInstall()}\n          priority=\"primary\"\n          size=\"sm\"\n          style={{marginLeft: space(1)}}\n        >\n          {t('Accept & Install')}\n        </InstallButton>\n      );\n    }\n\n    return this.renderRequestIntegrationButton();\n  }\n\n  // no configurations for sentry apps\n  renderConfigurations() {\n    return null;\n  }\n\n  renderIntegrationIcon() {\n    return <SentryAppIcon sentryApp={this.sentryApp} size={50} />;\n  }\n}\n\nconst Text = styled('p')`\n  margin: 0px 6px;\n`;\n\nconst Permission = styled('div')`\n  display: flex;\n`;\n\nconst PermissionWrapper = styled('div')`\n  padding-bottom: ${space(2)};\n`;\n\nconst Title = styled('p')`\n  margin-bottom: ${space(1)};\n  font-weight: bold;\n`;\n\nconst Indicator = styled(p => <CircleIndicator size={7} {...p} />)`\n  align-self: center;\n  color: ${p => p.theme.success};\n`;\n\nconst InstallButton = styled(Button)`\n  margin-left: ${space(1)};\n`;\n\nconst StyledUninstallButton = styled(Button)`\n  color: ${p => p.theme.gray300};\n  background: ${p => p.theme.background};\n\n  border: ${p => `1px solid ${p.theme.gray300}`};\n  box-sizing: border-box;\n  box-shadow: 0px 2px 1px rgba(0, 0, 0, 0.08);\n  border-radius: 4px;\n`;\n\nexport default withOrganization(SentryAppDetailedView);\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nmodule.exports = groupBy;\n","var baseIteratee = require('./_baseIteratee'),\n    createInverter = require('./_createInverter');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * This method is like `_.invert` except that the inverted object is generated\n * from the results of running each element of `object` thru `iteratee`. The\n * corresponding inverted value of each inverted key is an array of keys\n * responsible for generating the inverted value. The iteratee is invoked\n * with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.1.0\n * @category Object\n * @param {Object} object The object to invert.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Object} Returns the new inverted object.\n * @example\n *\n * var object = { 'a': 1, 'b': 2, 'c': 1 };\n *\n * _.invertBy(object);\n * // => { '1': ['a', 'c'], '2': ['b'] }\n *\n * _.invertBy(object, function(value) {\n *   return 'group' + value;\n * });\n * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n */\nvar invertBy = createInverter(function(result, value, key) {\n  if (value != null &&\n      typeof value.toString != 'function') {\n    value = nativeObjectToString.call(value);\n  }\n\n  if (hasOwnProperty.call(result, value)) {\n    result[value].push(key);\n  } else {\n    result[value] = [key];\n  }\n}, baseIteratee);\n\nmodule.exports = invertBy;\n"],"names":["installSentryApp","client","orgId","app","addLoadingMessage","promise","requestPromise","method","data","slug","then","clearIndicators","addErrorMessage","t","name","uninstallSentryApp","install","uuid","capitalizedAppSlug","charAt","toUpperCase","slice","addSuccessMessage","SentryAppIcon","_ref","sentryApp","size","_jsx","SentryAppAvatar","isColor","displayName","PERMISSION_LEVELS","read","write","admin","HUMAN_RESOURCE_NAMES","project","team","release","event","org","member","DEFAULT_RESOURCE_PERMISSIONS","Project","Team","Release","Event","Organization","Member","PROJECT_RELEASES","permissionLevel","scope","permission","split","compareScopes","a","b","toResourcePermissions","scopes","permissions","filteredScopes","scopeList","includes","filter","Object","values","groupBy","map","sort","pop","forEach","resource","toPermissions","resourcePermissions","pick","invertBy","SplitInstallationIdModal","props","openAdminIntegrationTimeoutRef","useRef","undefined","useEffect","window","clearTimeout","current","onCopy","useCallback","async","navigator","clipboard","writeText","installationId","handleContinue","setTimeout","open","_jsxs","children","ItemHolder","TextCopyInput","ButtonHolder","Button","onClick","closeModal","priority","_styled","target","styles","SentryAppDetailedView","AbstractIntegrationDetailedView","constructor","arguments","_defineProperty","organization","this","state","queryParams","code","orgSlug","redirectUrl","addQueryParamsToExistingUrl","location","assign","trackIntegrationAnalytics","integration_status","status","api","redirectUser","setState","appInstalls","openModal","i","error","getEndpoints","params","integrationSlug","onLoadAllEndpointsSuccess","router","super","recordInteraction","push","integrationType","description","overview","author","resourceLinks","title","url","installationStatus","getSentryAppInstallStatus","integrationName","featureData","find","renderPermissions","keys","some","length","PermissionWrapper","Title","Permission","Indicator","Text","tct","resources","join","renderTopButton","disabledFromFeatures","userHasAccess","capitalizedSlug","Confirm","disabled","message","onConfirm","handleUninstall","onConfirming","recordUninstallClicked","StyledUninstallButton","IconSubtract","isCircled","style","marginRight","space","InstallButton","handleInstall","marginLeft","renderRequestIntegrationButton","renderConfigurations","renderIntegrationIcon","p","CircleIndicator","theme","success","gray300","background","withOrganization","baseAssignValue","createAggregator","hasOwnProperty","prototype","result","value","key","call","module","exports","baseIteratee","createInverter","objectProto","nativeObjectToString","toString"],"sourceRoot":""}