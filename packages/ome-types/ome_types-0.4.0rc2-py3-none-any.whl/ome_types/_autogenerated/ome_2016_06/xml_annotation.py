from typing import List

from pydantic import Field, validator

from ome_types._autogenerated.ome_2016_06.text_annotation import TextAnnotation
from ome_types._mixins._base_type import OMEType
from ome_types._mixins._validators import any_elements_validator, xml_value_validator

__NAMESPACE__ = "http://www.openmicroscopy.org/Schemas/OME/2016-06"


class XMLAnnotation(TextAnnotation):
    """An general xml annotation.

    The contents of this is not processed as OME XML but should still be
    well-formed XML.
    """

    class Meta:
        namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06"

    value: "XMLAnnotation.Value" = Field(
        metadata={
            "name": "Value",
            "type": "Element",
            "required": True,
        }
    )

    class Value(OMEType):
        any_elements: List[object] = Field(
            default_factory=list,
            metadata={
                "type": "Wildcard",
                "namespace": "##any",
            },
        )

        _v = validator("any_elements", each_item=True)(any_elements_validator)

    _v = validator("value", pre=True)(xml_value_validator)


Value = XMLAnnotation.Value
