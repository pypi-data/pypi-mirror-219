Metadata-Version: 2.1
Name: pyanalyticsgit
Version: 0.0.3
Summary: Biblioteca PyAnalyticsGit para gerar relat√≥rios Git.
Home-page: UNKNOWN
Author: Jefferson Sena
Author-email: jeffersonsena12144@gmail.com
License: MIT License
Keywords: pyAnalyticsGit
Platform: UNKNOWN
Description-Content-Type: text/markdown
License-File: LICENSE

<div align="center">
<img src="https://user-images.githubusercontent.com/98030427/236968066-315be92b-eabe-4d76-a5d7-bbaaa8df1e2d.png" width="78px" />
</div>




# üìù Descri√ß√£o
O PyAnalyticsGit √© um projeto em Python criado por estudantes de Engenharia de Software que tem como funcionalidades, a biblioteca do PyAnalyticsGit possibilita que o usu√°rio consiga gerar relat√≥rios automatizados com base em dados de reposit√≥rios do GitHub, tais quais, hist√≥rico de commits, nome do commit, branch, tamanho do log, etc...

A biblioteca do PyAnalyticsGit deve ser capaz de analisar o desempenho de um projeto oferecendo no relat√≥rio par√¢metros como taxa de commit por branch, taxa de commit por tempo, horario recorrente de commit, entre outros.

Com essa ferramenta, √© poss√≠vel obter uma ampla variedade de dados e an√°lises de projetos e reposit√≥rios do Git, incluindo gr√°ficos e estat√≠sticas. A biblioteca funciona recebendo os dados de sa√≠da dos comandos do Git e realizando a an√°lise e tratamento dos dados de forma eficiente e precisa. Com essa solu√ß√£o, os usu√°rios podem otimizar seus processos e aprimorar a gest√£o dos seus projetos do Git.

## :dart: Objetivo
### Qual √© o prop√≥sito do PyAnalyticsGit?

O PyAnalyticsGit tem como objetivo geral fornecer  uma forma automatizada, eficiente e acess√≠vel de gerar relat√≥rios com informa√ß√µes de projetos, progressos e as m√©tricas com dados de reposit√≥rios no Github, afim de acompanhar e ter o controle do andamento daquele projeto. Desta forma, os principais objetivos que do PyAnalyticsGit √©:

* Extrair informa√ß√µes relevantes de commits, issues e milestones do GitHub.
* Gerar relat√≥rios em formato Markdown para facilitar a leitura e compartilhamento.
* Incluir gr√°ficos e tabelas para apresentar visualmente as informa√ß√µes extra√≠das.
* Facilitar o acompanhamento do desenvolvimento do projeto e a tomada de decis√µes.

##

## Fluxo de Instala√ß√£o e Funcionamento
***OBS: Os comandos est√£o configurados em Linux, mas dever√° estar para Linux,
MacOs e Windows***


### Instala√ß√£o/Introdu√ß√£o
 Breve Descri√ß√£o da API e da Biblioteca (Funcionamento e Vis√£o de Produto
Resumido). Inicialmente, √© recomend√°vel a utiliza√ß√£o de um ambiente virtual, que pode ser
criado atrav√©s do venv:

Digite em seu terminal:
```
python3 -m venv myenv
```
Pronto, Assim sera criado um ambiente virtual chamado "myenv"

Para ativar o ambiente:
```
source myenv/bin/activate
```
Agora que o ambiente virtual est√° devidamente criado, Verifique se o ambiente foi inicializado corretamente (verifique que se o nome
do ambiente, nesse caso ‚Äúmyenv‚Äù est√° no in√≠cio do caminho em seu terminal.

### Instala√ß√£o da biblioteca
Vamos come√ßar a instalar a biblioteca com o seguinte comando:
- Instale o sistema de gerenciamento de bibliotecas python ‚Äúpip‚Äù
- Execute o comando em seu terminal:
```
pip install pyanalyticsgit
```
- Para verificar se a instala√ß√£o ocorreu com sucesso execute em seu
terminal:
```
pip show pyanalyticsgit
```
### Automa√ß√£o
Apos a configurado e instalado agora o usuario configura a automa√ß√£o. 

O usu√°rio deve executar o arquivo a partir de diret√≥rio que contenha .git (de um
diret√≥rio que √© reposit√≥rio)

Para verificar se seu diret√≥rio √© um reposit√≥rio verifique se tem o arquivo
‚Äú.git‚Äù
- execute no terminal o comando: ls -a (pois o .git √© uma pasta oculta) ‚Äî
(verificar como √© no windows)

Verificado isso deve importar a classe Automatiza:
```
from analyticsgit.automatiza import Automatiza
```
Ap√≥s importar deve chamar o m√©todo automatiza():
```
Automatizar.automatiza()
```
Este m√©todo verifica qual o SO utilizado e
cria o arquivo post-commit para automatizar


Ao executar o reposit√≥rio estar√° automatizado e a cada commit ser√° gerado um
relat√≥rio.
Ap√≥s executar o m√©todo de automa√ß√£o n√£o √© necess√°rio executar novamente.
O usu√°rio deve apagar o m√©todo caso for gerar um relat√≥rio Est√°tico.

### Relat√≥rio Automatizado

A cada evento de commit o git chama o m√©todo de monitoramento que executa
a cria√ß√£o do relat√≥rio.
- Obs: Toda essa parte √© automatizada o usu√°rio so precisa executar os
m√©todos de cima e configurar o .env

O relat√≥rio gerado estar√° em um arquivo docs/relatorio.md

- .env:
  - Deve ser criado um arquivo .env no ambiente de utiliza√ß√£o da biblioteca e
definir os valores de ‚Äòuser_name‚Äô(usu√°rio ou reposit√≥rio que cont√©m o
reposit√≥rio que se quer o relat√≥rio) e ‚Äòrepo_name‚Äô (reposit√≥rio desejado)
  - Exemplo no repostir√≥rio https://github.com/fga-eps-mds/2023.1-PyAnalyticsGit.git :

- O arquivo ‚Äò.env‚Äô deve estar assim para o exemplo acima:
  ```
  user_name = "fga-eps-mds"
  repo_name = "2023.1-PyAnalyticsGit"
  ```
### Relat√≥rio Est√°tico
Gera relat√≥rios de reposit√≥rios a partir da fun√ß√£o ‚Äúgerar_relat√≥rio‚Äù recebendo
como par√¢metros os valores de usu√°rios e/ou reposit√≥rios existentes do github:

- Exemplo: https://github.com/fga-eps-mds/2023.1-PyAnalyticsGit.git
- Utilize o m√©todo:
```
gerar_relatorio(‚Äôfga-eps-mds‚Äô,‚Äô2023.1-PyAnalyticsGit‚Äô)
```
- Lembre-se de mudar os par√¢metros para o reposit√≥rio em interesse.

Caso os par√¢metros n√£o sejam fornecidos, o relat√≥rio usar√° os valores das
vari√°veis de ambiente contidas em .env.
```
gerar_relatorio()
```

##
# ü§ù Colaboradores

| [<img src="https://github.com/gabrie1barbosa.png" width=80><br><sub>Gabriel Barbosa</sub>](https://github.com/gabrie1barbosa) |  [<img src="https://github.com/JeffersonSenaa.png" width=80><br><sub>Jefferson Sena</sub>](https://github.com/JeffersonSenaa) | [<img src="https://github.com/mateus9levy.png" width=80><br><sub>Mateus Levy</sub>](https://github.com/mateus9levy) |  [<img src="https://github.com/PedroHhenriq.png" width=80><br><sub>Pedro Henrique</sub>](https://github.com/PedroHhenriq) |  [<img src="https://github.com/rodfon3301.png" width=80><br><sub>Rodrigo Fonseca</sub>](https://github.com/rodfon3301) |   [<img src="https://github.com/Tiago1604.png" width=80><br><sub>Tiago Albuquerque</sub>](https://github.com/Tiago1604) |
| :---: | :---: | :---: |  :---: | :---: | :---: | 

##

## :ballot_box_with_check: Licen√ßa:
O PyAnalyticsGit √© licenciado sob o MIT License. [licen√ßa](/LICENSE).
##



<div align=>
<img src="https://user-images.githubusercontent.com/98030427/236968066-315be92b-eabe-4d76-a5d7-bbaaa8df1e2d.png" width="200px" />
</div>


