[tool.poetry]
name = "spcache"
version = "1.0.1"
description = "Ensure Spotify's cache size doesn't exceed a specified threshold."
authors = ["Qwerty-133 <74311372+Qwerty-133@users.noreply.github.com>"]
readme = "README.md"
license = "MIT"
repository = "https://github.com/Qwerty-133/spcache"
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Framework :: Flake8",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet",
    "Topic :: Terminals",
    "Topic :: System :: Shells",
    "Topic :: Utilities",
    "Typing :: Typed",
]

[tool.poetry.dependencies]
python = ">=3.8.1,<3.12"
click = "^8.1.3"
python-dotenv = "^1.0.0"

[tool.poetry.scripts]
spcache = "spcache.cli:spcache"

[tool.poetry.group.dev.dependencies]
taskipy = "^1.11.0"
pre-commit = "^3.3.2"
ruff = "^0.0.272"
black = "^23.3.0"
isort = "^5.12.0"
pyinstaller = "^5.12.0"
pip-licenses = "^4.3.2"

[tool.ruff]
target-version = "py38"
select = [
    "ANN",  # flake8-annotations
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "D",  # pydocstyle
    "DTZ",  # flake8-datetimez
    "E",  # pycodestyle - Error
    "F",  # pyflakes
    "ISC",  # flake8-implicit-str-concat
    "INT",  # flake8-gettext
    "N",  # pep8-naming
    "PGH",  # pygrep-hooks
    "PIE",  # flake8-pie
    "Q",  # flake8-quotes
    "RET",  # flake8-return
    "RSE",  # flake8-raise
    "RUF",  # Ruff-specific rules
    "S",  # flake8-bandit
    "SIM",  # flake8-simplify
    "T20",  # flake8-print
    "TID",  # flake8-tidy-imports
    "UP",  # pyupgrade
    "W"  # pycodestyle - Warning
]
ignore = [
    "D212",  # Multi-line docstring summary should start at the first line
    "ANN101",  # Missing type annotation for self in method
    "D203",  # 1 blank line required before class docstring
    "ANN401",  # Missing return type annotation for public function
    "D107",  # Missing docstring in __init__
    "D406",  # Section name should end with a newline
    "D407",  # Missing dashed underline after section
    "D413",  # Missing blank line after last section
    "D105",  # Missing docstring in magic method
]
line-length = 99

[tool.taskipy.tasks]
lint = "pre-commit run --all-files"

[tool.isort]
order_by_type = false
case_sensitive = true
combine_as_imports = true
atomic = true

multi_line_output = 3
use_parentheses = true
include_trailing_comma = true
ensure_newline_before_comments = true

[tool.black]
line-length = 99

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
