# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'HttpRuleRealserverArgs',
    'Layer4ListenerRealserverBindSetArgs',
]

@pulumi.input_type
class HttpRuleRealserverArgs:
    def __init__(__self__, *,
                 id: pulumi.Input[str],
                 ip: pulumi.Input[str],
                 port: pulumi.Input[int],
                 weight: Optional[pulumi.Input[int]] = None):
        """
        :param pulumi.Input[str] id: ID of the GAAP realserver.
        :param pulumi.Input[str] ip: IP of the GAAP realserver.
        :param pulumi.Input[int] port: Port of the GAAP realserver.
        :param pulumi.Input[int] weight: Scheduling weight, default value is `1`. Valid value ranges: (1~100).
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "ip", ip)
        pulumi.set(__self__, "port", port)
        if weight is not None:
            pulumi.set(__self__, "weight", weight)

    @property
    @pulumi.getter
    def id(self) -> pulumi.Input[str]:
        """
        ID of the GAAP realserver.
        """
        return pulumi.get(self, "id")

    @id.setter
    def id(self, value: pulumi.Input[str]):
        pulumi.set(self, "id", value)

    @property
    @pulumi.getter
    def ip(self) -> pulumi.Input[str]:
        """
        IP of the GAAP realserver.
        """
        return pulumi.get(self, "ip")

    @ip.setter
    def ip(self, value: pulumi.Input[str]):
        pulumi.set(self, "ip", value)

    @property
    @pulumi.getter
    def port(self) -> pulumi.Input[int]:
        """
        Port of the GAAP realserver.
        """
        return pulumi.get(self, "port")

    @port.setter
    def port(self, value: pulumi.Input[int]):
        pulumi.set(self, "port", value)

    @property
    @pulumi.getter
    def weight(self) -> Optional[pulumi.Input[int]]:
        """
        Scheduling weight, default value is `1`. Valid value ranges: (1~100).
        """
        return pulumi.get(self, "weight")

    @weight.setter
    def weight(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "weight", value)


@pulumi.input_type
class Layer4ListenerRealserverBindSetArgs:
    def __init__(__self__, *,
                 id: pulumi.Input[str],
                 ip: pulumi.Input[str],
                 port: pulumi.Input[int],
                 weight: Optional[pulumi.Input[int]] = None):
        """
        :param pulumi.Input[str] id: ID of the GAAP realserver.
        :param pulumi.Input[str] ip: IP of the GAAP realserver.
        :param pulumi.Input[int] port: Port of the GAAP realserver.
        :param pulumi.Input[int] weight: Scheduling weight, default value is `1`. The range of values is [1,100].
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "ip", ip)
        pulumi.set(__self__, "port", port)
        if weight is not None:
            pulumi.set(__self__, "weight", weight)

    @property
    @pulumi.getter
    def id(self) -> pulumi.Input[str]:
        """
        ID of the GAAP realserver.
        """
        return pulumi.get(self, "id")

    @id.setter
    def id(self, value: pulumi.Input[str]):
        pulumi.set(self, "id", value)

    @property
    @pulumi.getter
    def ip(self) -> pulumi.Input[str]:
        """
        IP of the GAAP realserver.
        """
        return pulumi.get(self, "ip")

    @ip.setter
    def ip(self, value: pulumi.Input[str]):
        pulumi.set(self, "ip", value)

    @property
    @pulumi.getter
    def port(self) -> pulumi.Input[int]:
        """
        Port of the GAAP realserver.
        """
        return pulumi.get(self, "port")

    @port.setter
    def port(self, value: pulumi.Input[int]):
        pulumi.set(self, "port", value)

    @property
    @pulumi.getter
    def weight(self) -> Optional[pulumi.Input[int]]:
        """
        Scheduling weight, default value is `1`. The range of values is [1,100].
        """
        return pulumi.get(self, "weight")

    @weight.setter
    def weight(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "weight", value)


