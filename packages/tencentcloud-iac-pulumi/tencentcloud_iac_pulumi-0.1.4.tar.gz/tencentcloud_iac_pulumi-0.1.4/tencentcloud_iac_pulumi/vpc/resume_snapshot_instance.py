# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['ResumeSnapshotInstanceArgs', 'ResumeSnapshotInstance']

@pulumi.input_type
class ResumeSnapshotInstanceArgs:
    def __init__(__self__, *,
                 instance_id: pulumi.Input[str],
                 snapshot_file_id: pulumi.Input[str],
                 snapshot_policy_id: pulumi.Input[str]):
        """
        The set of arguments for constructing a ResumeSnapshotInstance resource.
        :param pulumi.Input[str] instance_id: InstanceId.
        :param pulumi.Input[str] snapshot_file_id: Snapshot file Id.
        :param pulumi.Input[str] snapshot_policy_id: Snapshot policy Id.
        """
        pulumi.set(__self__, "instance_id", instance_id)
        pulumi.set(__self__, "snapshot_file_id", snapshot_file_id)
        pulumi.set(__self__, "snapshot_policy_id", snapshot_policy_id)

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Input[str]:
        """
        InstanceId.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "instance_id", value)

    @property
    @pulumi.getter(name="snapshotFileId")
    def snapshot_file_id(self) -> pulumi.Input[str]:
        """
        Snapshot file Id.
        """
        return pulumi.get(self, "snapshot_file_id")

    @snapshot_file_id.setter
    def snapshot_file_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "snapshot_file_id", value)

    @property
    @pulumi.getter(name="snapshotPolicyId")
    def snapshot_policy_id(self) -> pulumi.Input[str]:
        """
        Snapshot policy Id.
        """
        return pulumi.get(self, "snapshot_policy_id")

    @snapshot_policy_id.setter
    def snapshot_policy_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "snapshot_policy_id", value)


@pulumi.input_type
class _ResumeSnapshotInstanceState:
    def __init__(__self__, *,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 snapshot_file_id: Optional[pulumi.Input[str]] = None,
                 snapshot_policy_id: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering ResumeSnapshotInstance resources.
        :param pulumi.Input[str] instance_id: InstanceId.
        :param pulumi.Input[str] snapshot_file_id: Snapshot file Id.
        :param pulumi.Input[str] snapshot_policy_id: Snapshot policy Id.
        """
        if instance_id is not None:
            pulumi.set(__self__, "instance_id", instance_id)
        if snapshot_file_id is not None:
            pulumi.set(__self__, "snapshot_file_id", snapshot_file_id)
        if snapshot_policy_id is not None:
            pulumi.set(__self__, "snapshot_policy_id", snapshot_policy_id)

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> Optional[pulumi.Input[str]]:
        """
        InstanceId.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "instance_id", value)

    @property
    @pulumi.getter(name="snapshotFileId")
    def snapshot_file_id(self) -> Optional[pulumi.Input[str]]:
        """
        Snapshot file Id.
        """
        return pulumi.get(self, "snapshot_file_id")

    @snapshot_file_id.setter
    def snapshot_file_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "snapshot_file_id", value)

    @property
    @pulumi.getter(name="snapshotPolicyId")
    def snapshot_policy_id(self) -> Optional[pulumi.Input[str]]:
        """
        Snapshot policy Id.
        """
        return pulumi.get(self, "snapshot_policy_id")

    @snapshot_policy_id.setter
    def snapshot_policy_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "snapshot_policy_id", value)


class ResumeSnapshotInstance(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 snapshot_file_id: Optional[pulumi.Input[str]] = None,
                 snapshot_policy_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to create a vpc resume_snapshot_instance

        ## Example Usage

        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        resume_snapshot_instance = tencentcloud.vpc.ResumeSnapshotInstance("resumeSnapshotInstance",
            instance_id="policy-1t6cob",
            snapshot_file_id="ssfile-test",
            snapshot_policy_id="sspolicy-1t6cobbv")
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] instance_id: InstanceId.
        :param pulumi.Input[str] snapshot_file_id: Snapshot file Id.
        :param pulumi.Input[str] snapshot_policy_id: Snapshot policy Id.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ResumeSnapshotInstanceArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a vpc resume_snapshot_instance

        ## Example Usage

        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        resume_snapshot_instance = tencentcloud.vpc.ResumeSnapshotInstance("resumeSnapshotInstance",
            instance_id="policy-1t6cob",
            snapshot_file_id="ssfile-test",
            snapshot_policy_id="sspolicy-1t6cobbv")
        ```

        :param str resource_name: The name of the resource.
        :param ResumeSnapshotInstanceArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ResumeSnapshotInstanceArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 snapshot_file_id: Optional[pulumi.Input[str]] = None,
                 snapshot_policy_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.plugin_download_url is None:
            opts.plugin_download_url = _utilities.get_plugin_download_url()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ResumeSnapshotInstanceArgs.__new__(ResumeSnapshotInstanceArgs)

            if instance_id is None and not opts.urn:
                raise TypeError("Missing required property 'instance_id'")
            __props__.__dict__["instance_id"] = instance_id
            if snapshot_file_id is None and not opts.urn:
                raise TypeError("Missing required property 'snapshot_file_id'")
            __props__.__dict__["snapshot_file_id"] = snapshot_file_id
            if snapshot_policy_id is None and not opts.urn:
                raise TypeError("Missing required property 'snapshot_policy_id'")
            __props__.__dict__["snapshot_policy_id"] = snapshot_policy_id
        super(ResumeSnapshotInstance, __self__).__init__(
            'tencentcloud:Vpc/resumeSnapshotInstance:ResumeSnapshotInstance',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            instance_id: Optional[pulumi.Input[str]] = None,
            snapshot_file_id: Optional[pulumi.Input[str]] = None,
            snapshot_policy_id: Optional[pulumi.Input[str]] = None) -> 'ResumeSnapshotInstance':
        """
        Get an existing ResumeSnapshotInstance resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] instance_id: InstanceId.
        :param pulumi.Input[str] snapshot_file_id: Snapshot file Id.
        :param pulumi.Input[str] snapshot_policy_id: Snapshot policy Id.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ResumeSnapshotInstanceState.__new__(_ResumeSnapshotInstanceState)

        __props__.__dict__["instance_id"] = instance_id
        __props__.__dict__["snapshot_file_id"] = snapshot_file_id
        __props__.__dict__["snapshot_policy_id"] = snapshot_policy_id
        return ResumeSnapshotInstance(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Output[str]:
        """
        InstanceId.
        """
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter(name="snapshotFileId")
    def snapshot_file_id(self) -> pulumi.Output[str]:
        """
        Snapshot file Id.
        """
        return pulumi.get(self, "snapshot_file_id")

    @property
    @pulumi.getter(name="snapshotPolicyId")
    def snapshot_policy_id(self) -> pulumi.Output[str]:
        """
        Snapshot policy Id.
        """
        return pulumi.get(self, "snapshot_policy_id")

