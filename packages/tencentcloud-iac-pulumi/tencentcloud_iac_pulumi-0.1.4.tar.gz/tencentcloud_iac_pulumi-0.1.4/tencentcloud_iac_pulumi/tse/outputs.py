# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'InstanceEngineRegionInfo',
    'InstanceEngineRegionInfoVpcInfo',
    'GetAccessAddressEnvAddressInfoResult',
    'GetAccessAddressLimiterAddressInfoResult',
    'GetGatewayNodesNodeListResult',
    'GetNacosReplicasReplicaResult',
    'GetNacosServerInterfacesContentResult',
    'GetZookeeperReplicasReplicaResult',
    'GetZookeeperServerInterfacesContentResult',
]

@pulumi.output_type
class InstanceEngineRegionInfo(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "engineRegion":
            suggest = "engine_region"
        elif key == "vpcInfos":
            suggest = "vpc_infos"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in InstanceEngineRegionInfo. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        InstanceEngineRegionInfo.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        InstanceEngineRegionInfo.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 engine_region: str,
                 replica: int,
                 vpc_infos: Sequence['outputs.InstanceEngineRegionInfoVpcInfo']):
        """
        :param str engine_region: Engine node region.
        :param int replica: The number of nodes allocated in this region.
        :param Sequence['InstanceEngineRegionInfoVpcInfoArgs'] vpc_infos: Cluster network information.
        """
        pulumi.set(__self__, "engine_region", engine_region)
        pulumi.set(__self__, "replica", replica)
        pulumi.set(__self__, "vpc_infos", vpc_infos)

    @property
    @pulumi.getter(name="engineRegion")
    def engine_region(self) -> str:
        """
        Engine node region.
        """
        return pulumi.get(self, "engine_region")

    @property
    @pulumi.getter
    def replica(self) -> int:
        """
        The number of nodes allocated in this region.
        """
        return pulumi.get(self, "replica")

    @property
    @pulumi.getter(name="vpcInfos")
    def vpc_infos(self) -> Sequence['outputs.InstanceEngineRegionInfoVpcInfo']:
        """
        Cluster network information.
        """
        return pulumi.get(self, "vpc_infos")


@pulumi.output_type
class InstanceEngineRegionInfoVpcInfo(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "subnetId":
            suggest = "subnet_id"
        elif key == "vpcId":
            suggest = "vpc_id"
        elif key == "intranetAddress":
            suggest = "intranet_address"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in InstanceEngineRegionInfoVpcInfo. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        InstanceEngineRegionInfoVpcInfo.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        InstanceEngineRegionInfoVpcInfo.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 subnet_id: str,
                 vpc_id: str,
                 intranet_address: Optional[str] = None):
        """
        :param str subnet_id: Subnet ID.
        :param str vpc_id: Vpc Id.
        :param str intranet_address: Intranet access addressNote: This field may return null, indicating that a valid value is not available..
        """
        pulumi.set(__self__, "subnet_id", subnet_id)
        pulumi.set(__self__, "vpc_id", vpc_id)
        if intranet_address is not None:
            pulumi.set(__self__, "intranet_address", intranet_address)

    @property
    @pulumi.getter(name="subnetId")
    def subnet_id(self) -> str:
        """
        Subnet ID.
        """
        return pulumi.get(self, "subnet_id")

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> str:
        """
        Vpc Id.
        """
        return pulumi.get(self, "vpc_id")

    @property
    @pulumi.getter(name="intranetAddress")
    def intranet_address(self) -> Optional[str]:
        """
        Intranet access addressNote: This field may return null, indicating that a valid value is not available..
        """
        return pulumi.get(self, "intranet_address")


@pulumi.output_type
class GetAccessAddressEnvAddressInfoResult(dict):
    def __init__(__self__, *,
                 config_internet_service_ip: str,
                 config_intranet_address: str,
                 enable_config_internet: bool,
                 enable_config_intranet: bool,
                 env_name: str,
                 internet_band_width: int):
        """
        :param str config_internet_service_ip: config public network ip.
        :param str config_intranet_address: config Intranet access addressNote: This field may return null, indicating that a valid value is not available.
        :param bool enable_config_internet: Whether to enable the config public network.
        :param bool enable_config_intranet: Whether to enable the config Intranet clbNote: This field may return null, indicating that a valid value is not available.
        :param str env_name: env name.
        :param int internet_band_width: Client public network bandwidthNote: This field may return null, indicating that a valid value is not available.
        """
        pulumi.set(__self__, "config_internet_service_ip", config_internet_service_ip)
        pulumi.set(__self__, "config_intranet_address", config_intranet_address)
        pulumi.set(__self__, "enable_config_internet", enable_config_internet)
        pulumi.set(__self__, "enable_config_intranet", enable_config_intranet)
        pulumi.set(__self__, "env_name", env_name)
        pulumi.set(__self__, "internet_band_width", internet_band_width)

    @property
    @pulumi.getter(name="configInternetServiceIp")
    def config_internet_service_ip(self) -> str:
        """
        config public network ip.
        """
        return pulumi.get(self, "config_internet_service_ip")

    @property
    @pulumi.getter(name="configIntranetAddress")
    def config_intranet_address(self) -> str:
        """
        config Intranet access addressNote: This field may return null, indicating that a valid value is not available.
        """
        return pulumi.get(self, "config_intranet_address")

    @property
    @pulumi.getter(name="enableConfigInternet")
    def enable_config_internet(self) -> bool:
        """
        Whether to enable the config public network.
        """
        return pulumi.get(self, "enable_config_internet")

    @property
    @pulumi.getter(name="enableConfigIntranet")
    def enable_config_intranet(self) -> bool:
        """
        Whether to enable the config Intranet clbNote: This field may return null, indicating that a valid value is not available.
        """
        return pulumi.get(self, "enable_config_intranet")

    @property
    @pulumi.getter(name="envName")
    def env_name(self) -> str:
        """
        env name.
        """
        return pulumi.get(self, "env_name")

    @property
    @pulumi.getter(name="internetBandWidth")
    def internet_band_width(self) -> int:
        """
        Client public network bandwidthNote: This field may return null, indicating that a valid value is not available.
        """
        return pulumi.get(self, "internet_band_width")


@pulumi.output_type
class GetAccessAddressLimiterAddressInfoResult(dict):
    def __init__(__self__, *,
                 intranet_address: str):
        """
        :param str intranet_address: VPC access IP address listNote: This field may return null, indicating that a valid value is not available.
        """
        pulumi.set(__self__, "intranet_address", intranet_address)

    @property
    @pulumi.getter(name="intranetAddress")
    def intranet_address(self) -> str:
        """
        VPC access IP address listNote: This field may return null, indicating that a valid value is not available.
        """
        return pulumi.get(self, "intranet_address")


@pulumi.output_type
class GetGatewayNodesNodeListResult(dict):
    def __init__(__self__, *,
                 group_id: str,
                 group_name: str,
                 node_id: str,
                 node_ip: str,
                 status: str,
                 zone: str,
                 zone_id: str):
        """
        :param str group_id: gateway group ID.
        :param str group_name: Group nameNote: This field may return null, indicating that a valid value is not available.
        :param str node_id: gateway node id.
        :param str node_ip: gateway node ip.
        :param str status: statusNote: This field may return null, indicating that a valid value is not available.
        :param str zone: ZoneNote: This field may return null, indicating that a valid value is not available.
        :param str zone_id: Zone idNote: This field may return null, indicating that a valid value is not available.
        """
        pulumi.set(__self__, "group_id", group_id)
        pulumi.set(__self__, "group_name", group_name)
        pulumi.set(__self__, "node_id", node_id)
        pulumi.set(__self__, "node_ip", node_ip)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "zone", zone)
        pulumi.set(__self__, "zone_id", zone_id)

    @property
    @pulumi.getter(name="groupId")
    def group_id(self) -> str:
        """
        gateway group ID.
        """
        return pulumi.get(self, "group_id")

    @property
    @pulumi.getter(name="groupName")
    def group_name(self) -> str:
        """
        Group nameNote: This field may return null, indicating that a valid value is not available.
        """
        return pulumi.get(self, "group_name")

    @property
    @pulumi.getter(name="nodeId")
    def node_id(self) -> str:
        """
        gateway node id.
        """
        return pulumi.get(self, "node_id")

    @property
    @pulumi.getter(name="nodeIp")
    def node_ip(self) -> str:
        """
        gateway node ip.
        """
        return pulumi.get(self, "node_ip")

    @property
    @pulumi.getter
    def status(self) -> str:
        """
        statusNote: This field may return null, indicating that a valid value is not available.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter
    def zone(self) -> str:
        """
        ZoneNote: This field may return null, indicating that a valid value is not available.
        """
        return pulumi.get(self, "zone")

    @property
    @pulumi.getter(name="zoneId")
    def zone_id(self) -> str:
        """
        Zone idNote: This field may return null, indicating that a valid value is not available.
        """
        return pulumi.get(self, "zone_id")


@pulumi.output_type
class GetNacosReplicasReplicaResult(dict):
    def __init__(__self__, *,
                 name: str,
                 role: str,
                 status: str,
                 subnet_id: str,
                 vpc_id: str,
                 zone: str,
                 zone_id: str):
        """
        :param str name: name.
        :param str role: role.
        :param str status: status.
        :param str subnet_id: Subnet IDNote: This field may return null, indicating that a valid value is not available.
        :param str vpc_id: VPC IDNote: This field may return null, indicating that a valid value is not available.
        :param str zone: Available area NameNote: This field may return null, indicating that a valid value is not available.
        :param str zone_id: Available area IDNote: This field may return null, indicating that a valid value is not available.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "role", role)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "subnet_id", subnet_id)
        pulumi.set(__self__, "vpc_id", vpc_id)
        pulumi.set(__self__, "zone", zone)
        pulumi.set(__self__, "zone_id", zone_id)

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def role(self) -> str:
        """
        role.
        """
        return pulumi.get(self, "role")

    @property
    @pulumi.getter
    def status(self) -> str:
        """
        status.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="subnetId")
    def subnet_id(self) -> str:
        """
        Subnet IDNote: This field may return null, indicating that a valid value is not available.
        """
        return pulumi.get(self, "subnet_id")

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> str:
        """
        VPC IDNote: This field may return null, indicating that a valid value is not available.
        """
        return pulumi.get(self, "vpc_id")

    @property
    @pulumi.getter
    def zone(self) -> str:
        """
        Available area NameNote: This field may return null, indicating that a valid value is not available.
        """
        return pulumi.get(self, "zone")

    @property
    @pulumi.getter(name="zoneId")
    def zone_id(self) -> str:
        """
        Available area IDNote: This field may return null, indicating that a valid value is not available.
        """
        return pulumi.get(self, "zone_id")


@pulumi.output_type
class GetNacosServerInterfacesContentResult(dict):
    def __init__(__self__, *,
                 interface: str):
        """
        :param str interface: interface nameNote: This field may return null, indicating that a valid value is not available.
        """
        pulumi.set(__self__, "interface", interface)

    @property
    @pulumi.getter
    def interface(self) -> str:
        """
        interface nameNote: This field may return null, indicating that a valid value is not available.
        """
        return pulumi.get(self, "interface")


@pulumi.output_type
class GetZookeeperReplicasReplicaResult(dict):
    def __init__(__self__, *,
                 alias_name: str,
                 name: str,
                 role: str,
                 status: str,
                 subnet_id: str,
                 vpc_id: str,
                 zone: str,
                 zone_id: str):
        """
        :param str alias_name: aliasNote: This field may return null, indicating that a valid value is not available.
        :param str name: name.
        :param str role: role.
        :param str status: status.
        :param str subnet_id: Subnet IDNote: This field may return null, indicating that a valid value is not available.
        :param str vpc_id: VPC IDNote: This field may return null, indicating that a valid value is not available.
        :param str zone: Available area IDNote: This field may return null, indicating that a valid value is not available.
        :param str zone_id: Available area IDNote: This field may return null, indicating that a valid value is not available.
        """
        pulumi.set(__self__, "alias_name", alias_name)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "role", role)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "subnet_id", subnet_id)
        pulumi.set(__self__, "vpc_id", vpc_id)
        pulumi.set(__self__, "zone", zone)
        pulumi.set(__self__, "zone_id", zone_id)

    @property
    @pulumi.getter(name="aliasName")
    def alias_name(self) -> str:
        """
        aliasNote: This field may return null, indicating that a valid value is not available.
        """
        return pulumi.get(self, "alias_name")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def role(self) -> str:
        """
        role.
        """
        return pulumi.get(self, "role")

    @property
    @pulumi.getter
    def status(self) -> str:
        """
        status.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="subnetId")
    def subnet_id(self) -> str:
        """
        Subnet IDNote: This field may return null, indicating that a valid value is not available.
        """
        return pulumi.get(self, "subnet_id")

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> str:
        """
        VPC IDNote: This field may return null, indicating that a valid value is not available.
        """
        return pulumi.get(self, "vpc_id")

    @property
    @pulumi.getter
    def zone(self) -> str:
        """
        Available area IDNote: This field may return null, indicating that a valid value is not available.
        """
        return pulumi.get(self, "zone")

    @property
    @pulumi.getter(name="zoneId")
    def zone_id(self) -> str:
        """
        Available area IDNote: This field may return null, indicating that a valid value is not available.
        """
        return pulumi.get(self, "zone_id")


@pulumi.output_type
class GetZookeeperServerInterfacesContentResult(dict):
    def __init__(__self__, *,
                 interface: str):
        """
        :param str interface: interface nameNote: This field may return null, indicating that a valid value is not available.
        """
        pulumi.set(__self__, "interface", interface)

    @property
    @pulumi.getter
    def interface(self) -> str:
        """
        interface nameNote: This field may return null, indicating that a valid value is not available.
        """
        return pulumi.get(self, "interface")


