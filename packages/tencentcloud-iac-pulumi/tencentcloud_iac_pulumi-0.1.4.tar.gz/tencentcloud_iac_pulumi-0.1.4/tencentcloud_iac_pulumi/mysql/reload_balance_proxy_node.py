# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['ReloadBalanceProxyNodeArgs', 'ReloadBalanceProxyNode']

@pulumi.input_type
class ReloadBalanceProxyNodeArgs:
    def __init__(__self__, *,
                 proxy_group_id: pulumi.Input[str],
                 proxy_address_id: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a ReloadBalanceProxyNode resource.
        :param pulumi.Input[str] proxy_group_id: Proxy id.
        :param pulumi.Input[str] proxy_address_id: Proxy address id.
        """
        pulumi.set(__self__, "proxy_group_id", proxy_group_id)
        if proxy_address_id is not None:
            pulumi.set(__self__, "proxy_address_id", proxy_address_id)

    @property
    @pulumi.getter(name="proxyGroupId")
    def proxy_group_id(self) -> pulumi.Input[str]:
        """
        Proxy id.
        """
        return pulumi.get(self, "proxy_group_id")

    @proxy_group_id.setter
    def proxy_group_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "proxy_group_id", value)

    @property
    @pulumi.getter(name="proxyAddressId")
    def proxy_address_id(self) -> Optional[pulumi.Input[str]]:
        """
        Proxy address id.
        """
        return pulumi.get(self, "proxy_address_id")

    @proxy_address_id.setter
    def proxy_address_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "proxy_address_id", value)


@pulumi.input_type
class _ReloadBalanceProxyNodeState:
    def __init__(__self__, *,
                 proxy_address_id: Optional[pulumi.Input[str]] = None,
                 proxy_group_id: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering ReloadBalanceProxyNode resources.
        :param pulumi.Input[str] proxy_address_id: Proxy address id.
        :param pulumi.Input[str] proxy_group_id: Proxy id.
        """
        if proxy_address_id is not None:
            pulumi.set(__self__, "proxy_address_id", proxy_address_id)
        if proxy_group_id is not None:
            pulumi.set(__self__, "proxy_group_id", proxy_group_id)

    @property
    @pulumi.getter(name="proxyAddressId")
    def proxy_address_id(self) -> Optional[pulumi.Input[str]]:
        """
        Proxy address id.
        """
        return pulumi.get(self, "proxy_address_id")

    @proxy_address_id.setter
    def proxy_address_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "proxy_address_id", value)

    @property
    @pulumi.getter(name="proxyGroupId")
    def proxy_group_id(self) -> Optional[pulumi.Input[str]]:
        """
        Proxy id.
        """
        return pulumi.get(self, "proxy_group_id")

    @proxy_group_id.setter
    def proxy_group_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "proxy_group_id", value)


class ReloadBalanceProxyNode(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 proxy_address_id: Optional[pulumi.Input[str]] = None,
                 proxy_group_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to create a mysql reload_balance_proxy_node

        ## Example Usage

        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        reload_balance_proxy_node = tencentcloud.mysql.ReloadBalanceProxyNode("reloadBalanceProxyNode",
            proxy_address_id="proxyaddr-4wc4y1pq",
            proxy_group_id="proxy-gmi1f78l")
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] proxy_address_id: Proxy address id.
        :param pulumi.Input[str] proxy_group_id: Proxy id.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ReloadBalanceProxyNodeArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a mysql reload_balance_proxy_node

        ## Example Usage

        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        reload_balance_proxy_node = tencentcloud.mysql.ReloadBalanceProxyNode("reloadBalanceProxyNode",
            proxy_address_id="proxyaddr-4wc4y1pq",
            proxy_group_id="proxy-gmi1f78l")
        ```

        :param str resource_name: The name of the resource.
        :param ReloadBalanceProxyNodeArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ReloadBalanceProxyNodeArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 proxy_address_id: Optional[pulumi.Input[str]] = None,
                 proxy_group_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.plugin_download_url is None:
            opts.plugin_download_url = _utilities.get_plugin_download_url()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ReloadBalanceProxyNodeArgs.__new__(ReloadBalanceProxyNodeArgs)

            __props__.__dict__["proxy_address_id"] = proxy_address_id
            if proxy_group_id is None and not opts.urn:
                raise TypeError("Missing required property 'proxy_group_id'")
            __props__.__dict__["proxy_group_id"] = proxy_group_id
        super(ReloadBalanceProxyNode, __self__).__init__(
            'tencentcloud:Mysql/reloadBalanceProxyNode:ReloadBalanceProxyNode',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            proxy_address_id: Optional[pulumi.Input[str]] = None,
            proxy_group_id: Optional[pulumi.Input[str]] = None) -> 'ReloadBalanceProxyNode':
        """
        Get an existing ReloadBalanceProxyNode resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] proxy_address_id: Proxy address id.
        :param pulumi.Input[str] proxy_group_id: Proxy id.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ReloadBalanceProxyNodeState.__new__(_ReloadBalanceProxyNodeState)

        __props__.__dict__["proxy_address_id"] = proxy_address_id
        __props__.__dict__["proxy_group_id"] = proxy_group_id
        return ReloadBalanceProxyNode(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="proxyAddressId")
    def proxy_address_id(self) -> pulumi.Output[Optional[str]]:
        """
        Proxy address id.
        """
        return pulumi.get(self, "proxy_address_id")

    @property
    @pulumi.getter(name="proxyGroupId")
    def proxy_group_id(self) -> pulumi.Output[str]:
        """
        Proxy id.
        """
        return pulumi.get(self, "proxy_group_id")

