# Autogenerated by nbdev

d = { 'settings': { 'branch': 'master',
                'doc_baseurl': '/WhisperSpeech',
                'doc_host': 'https://collabora.github.io',
                'git_url': 'https://github.com/collabora/WhisperSpeech',
                'lib_path': 'whisperspeech'},
  'syms': { 'whisperspeech.a2a': { 'whisperspeech.a2a.AAARTransformer': ( '6. encodec quality enchancement.html#aaartransformer',
                                                                          'whisperspeech/a2a.py'),
                                   'whisperspeech.a2a.AAARTransformer.__init__': ( '6. encodec quality '
                                                                                   'enchancement.html#aaartransformer.__init__',
                                                                                   'whisperspeech/a2a.py'),
                                   'whisperspeech.a2a.AAARTransformer.forward': ( '6. encodec quality '
                                                                                  'enchancement.html#aaartransformer.forward',
                                                                                  'whisperspeech/a2a.py'),
                                   'whisperspeech.a2a.LayerNorm': ( '6. encodec quality enchancement.html#layernorm',
                                                                    'whisperspeech/a2a.py'),
                                   'whisperspeech.a2a.LayerNorm.forward': ( '6. encodec quality enchancement.html#layernorm.forward',
                                                                            'whisperspeech/a2a.py'),
                                   'whisperspeech.a2a.PureEncoder': ( '6. encodec quality enchancement.html#pureencoder',
                                                                      'whisperspeech/a2a.py'),
                                   'whisperspeech.a2a.PureEncoder.__init__': ( '6. encodec quality enchancement.html#pureencoder.__init__',
                                                                               'whisperspeech/a2a.py'),
                                   'whisperspeech.a2a.PureEncoder.forward': ( '6. encodec quality enchancement.html#pureencoder.forward',
                                                                              'whisperspeech/a2a.py'),
                                   'whisperspeech.a2a.SADataset': ( '6. encodec quality enchancement.html#sadataset',
                                                                    'whisperspeech/a2a.py'),
                                   'whisperspeech.a2a.SADataset.A_tokens': ( '6. encodec quality enchancement.html#sadataset.a_tokens',
                                                                             'whisperspeech/a2a.py'),
                                   'whisperspeech.a2a.SADataset.__getitem__': ( '6. encodec quality '
                                                                                'enchancement.html#sadataset.__getitem__',
                                                                                'whisperspeech/a2a.py'),
                                   'whisperspeech.a2a.SADataset.__init__': ( '6. encodec quality enchancement.html#sadataset.__init__',
                                                                             'whisperspeech/a2a.py'),
                                   'whisperspeech.a2a.SADataset.__len__': ( '6. encodec quality enchancement.html#sadataset.__len__',
                                                                            'whisperspeech/a2a.py'),
                                   'whisperspeech.a2a.SADataset.__repr__': ( '6. encodec quality enchancement.html#sadataset.__repr__',
                                                                             'whisperspeech/a2a.py'),
                                   'whisperspeech.a2a.SADataset.hours': ( '6. encodec quality enchancement.html#sadataset.hours',
                                                                          'whisperspeech/a2a.py'),
                                   'whisperspeech.a2a.init_transformer': ( '6. encodec quality enchancement.html#init_transformer',
                                                                           'whisperspeech/a2a.py'),
                                   'whisperspeech.a2a.load_data': ( '6. encodec quality enchancement.html#load_data',
                                                                    'whisperspeech/a2a.py'),
                                   'whisperspeech.a2a.load_datasets': ( '6. encodec quality enchancement.html#load_datasets',
                                                                        'whisperspeech/a2a.py'),
                                   'whisperspeech.a2a.make_model': ( '6. encodec quality enchancement.html#make_model',
                                                                     'whisperspeech/a2a.py')},
            'whisperspeech.a2wav': { 'whisperspeech.a2wav.Vocoder': ('6. quality-boosting vocoder.html#vocoder', 'whisperspeech/a2wav.py'),
                                     'whisperspeech.a2wav.Vocoder.__init__': ( '6. quality-boosting vocoder.html#vocoder.__init__',
                                                                               'whisperspeech/a2wav.py'),
                                     'whisperspeech.a2wav.Vocoder.decode': ( '6. quality-boosting vocoder.html#vocoder.decode',
                                                                             'whisperspeech/a2wav.py'),
                                     'whisperspeech.a2wav.Vocoder.decode_to_file': ( '6. quality-boosting '
                                                                                     'vocoder.html#vocoder.decode_to_file',
                                                                                     'whisperspeech/a2wav.py'),
                                     'whisperspeech.a2wav.Vocoder.decode_to_notebook': ( '6. quality-boosting '
                                                                                         'vocoder.html#vocoder.decode_to_notebook',
                                                                                         'whisperspeech/a2wav.py')},
            'whisperspeech.extract_acoustic': { 'whisperspeech.extract_acoustic.extract_Atoks': ( '1. acoustic token '
                                                                                                  'extraction.html#extract_atoks',
                                                                                                  'whisperspeech/extract_acoustic.py'),
                                                'whisperspeech.extract_acoustic.extract_acoustic': ( '1. acoustic token '
                                                                                                     'extraction.html#extract_acoustic',
                                                                                                     'whisperspeech/extract_acoustic.py'),
                                                'whisperspeech.extract_acoustic.load': ( '1. acoustic token extraction.html#load',
                                                                                         'whisperspeech/extract_acoustic.py'),
                                                'whisperspeech.extract_acoustic.load_model': ( '1. acoustic token '
                                                                                               'extraction.html#load_model',
                                                                                               'whisperspeech/extract_acoustic.py')},
            'whisperspeech.extract_semb': { 'whisperspeech.extract_semb.encode_semantic': ( '2c. whisper semantic embedding '
                                                                                            'extraction.html#encode_semantic',
                                                                                            'whisperspeech/extract_semb.py'),
                                            'whisperspeech.extract_semb.extract_semantic': ( '2c. whisper semantic embedding '
                                                                                             'extraction.html#extract_semantic',
                                                                                             'whisperspeech/extract_semb.py'),
                                            'whisperspeech.extract_semb.load_model': ( '2c. whisper semantic embedding '
                                                                                       'extraction.html#load_model',
                                                                                       'whisperspeech/extract_semb.py')},
            'whisperspeech.extract_stoks': { 'whisperspeech.extract_stoks.LayerNorm': ( '2f. residual (rq) semantic token extraction '
                                                                                        'model.html#layernorm',
                                                                                        'whisperspeech/extract_stoks.py'),
                                             'whisperspeech.extract_stoks.LayerNorm.forward': ( '2f. residual (rq) semantic token '
                                                                                                'extraction model.html#layernorm.forward',
                                                                                                'whisperspeech/extract_stoks.py'),
                                             'whisperspeech.extract_stoks.RQBottleneckTransformer': ( '2f. residual (rq) semantic token '
                                                                                                      'extraction '
                                                                                                      'model.html#rqbottlenecktransformer',
                                                                                                      'whisperspeech/extract_stoks.py'),
                                             'whisperspeech.extract_stoks.RQBottleneckTransformer.__init__': ( '2f. residual (rq) semantic '
                                                                                                               'token extraction '
                                                                                                               'model.html#rqbottlenecktransformer.__init__',
                                                                                                               'whisperspeech/extract_stoks.py'),
                                             'whisperspeech.extract_stoks.RQBottleneckTransformer.decode_text': ( '2f. residual (rq) '
                                                                                                                  'semantic token '
                                                                                                                  'extraction '
                                                                                                                  'model.html#rqbottlenecktransformer.decode_text',
                                                                                                                  'whisperspeech/extract_stoks.py'),
                                             'whisperspeech.extract_stoks.RQBottleneckTransformer.dequantize': ( '2f. residual (rq) '
                                                                                                                 'semantic token '
                                                                                                                 'extraction '
                                                                                                                 'model.html#rqbottlenecktransformer.dequantize',
                                                                                                                 'whisperspeech/extract_stoks.py'),
                                             'whisperspeech.extract_stoks.RQBottleneckTransformer.encode_audio': ( '2f. residual (rq) '
                                                                                                                   'semantic token '
                                                                                                                   'extraction '
                                                                                                                   'model.html#rqbottlenecktransformer.encode_audio',
                                                                                                                   'whisperspeech/extract_stoks.py'),
                                             'whisperspeech.extract_stoks.RQBottleneckTransformer.encode_mel': ( '2f. residual (rq) '
                                                                                                                 'semantic token '
                                                                                                                 'extraction '
                                                                                                                 'model.html#rqbottlenecktransformer.encode_mel',
                                                                                                                 'whisperspeech/extract_stoks.py'),
                                             'whisperspeech.extract_stoks.RQBottleneckTransformer.ensure_whisper': ( '2f. residual (rq) '
                                                                                                                     'semantic token '
                                                                                                                     'extraction '
                                                                                                                     'model.html#rqbottlenecktransformer.ensure_whisper',
                                                                                                                     'whisperspeech/extract_stoks.py'),
                                             'whisperspeech.extract_stoks.RQBottleneckTransformer.forward': ( '2f. residual (rq) semantic '
                                                                                                              'token extraction '
                                                                                                              'model.html#rqbottlenecktransformer.forward',
                                                                                                              'whisperspeech/extract_stoks.py'),
                                             'whisperspeech.extract_stoks.RQBottleneckTransformer.get_teacher_logits': ( '2f. residual '
                                                                                                                         '(rq) semantic '
                                                                                                                         'token extraction '
                                                                                                                         'model.html#rqbottlenecktransformer.get_teacher_logits',
                                                                                                                         'whisperspeech/extract_stoks.py'),
                                             'whisperspeech.extract_stoks.RQBottleneckTransformer.load_model': ( '2f. residual (rq) '
                                                                                                                 'semantic token '
                                                                                                                 'extraction '
                                                                                                                 'model.html#rqbottlenecktransformer.load_model',
                                                                                                                 'whisperspeech/extract_stoks.py'),
                                             'whisperspeech.extract_stoks.RQBottleneckTransformer.quantize': ( '2f. residual (rq) semantic '
                                                                                                               'token extraction '
                                                                                                               'model.html#rqbottlenecktransformer.quantize',
                                                                                                               'whisperspeech/extract_stoks.py'),
                                             'whisperspeech.extract_stoks.RQBottleneckTransformer.save_model': ( '2f. residual (rq) '
                                                                                                                 'semantic token '
                                                                                                                 'extraction '
                                                                                                                 'model.html#rqbottlenecktransformer.save_model',
                                                                                                                 'whisperspeech/extract_stoks.py'),
                                             'whisperspeech.extract_stoks.encode_stoks': ( '2f. residual (rq) semantic token extraction '
                                                                                           'model.html#encode_stoks',
                                                                                           'whisperspeech/extract_stoks.py'),
                                             'whisperspeech.extract_stoks.extract_stoks': ( '2f. residual (rq) semantic token extraction '
                                                                                            'model.html#extract_stoks',
                                                                                            'whisperspeech/extract_stoks.py'),
                                             'whisperspeech.extract_stoks.init_transformer': ( '2f. residual (rq) semantic token '
                                                                                               'extraction model.html#init_transformer',
                                                                                               'whisperspeech/extract_stoks.py'),
                                             'whisperspeech.extract_stoks.load_model': ( '2f. residual (rq) semantic token extraction '
                                                                                         'model.html#load_model',
                                                                                         'whisperspeech/extract_stoks.py'),
                                             'whisperspeech.extract_stoks.sinusoids': ( '2f. residual (rq) semantic token extraction '
                                                                                        'model.html#sinusoids',
                                                                                        'whisperspeech/extract_stoks.py')},
            'whisperspeech.modules': { 'whisperspeech.modules.Decoder': ('a. neural modules.html#decoder', 'whisperspeech/modules.py'),
                                       'whisperspeech.modules.Decoder.__init__': ( 'a. neural modules.html#decoder.__init__',
                                                                                   'whisperspeech/modules.py'),
                                       'whisperspeech.modules.Decoder.forward': ( 'a. neural modules.html#decoder.forward',
                                                                                  'whisperspeech/modules.py'),
                                       'whisperspeech.modules.Encoder': ('a. neural modules.html#encoder', 'whisperspeech/modules.py'),
                                       'whisperspeech.modules.Encoder.__init__': ( 'a. neural modules.html#encoder.__init__',
                                                                                   'whisperspeech/modules.py'),
                                       'whisperspeech.modules.Encoder.forward': ( 'a. neural modules.html#encoder.forward',
                                                                                  'whisperspeech/modules.py'),
                                       'whisperspeech.modules.LayerNorm': ('a. neural modules.html#layernorm', 'whisperspeech/modules.py'),
                                       'whisperspeech.modules.LayerNorm.forward': ( 'a. neural modules.html#layernorm.forward',
                                                                                    'whisperspeech/modules.py'),
                                       'whisperspeech.modules.LinearHead': ( 'a. neural modules.html#linearhead',
                                                                             'whisperspeech/modules.py'),
                                       'whisperspeech.modules.MultiHeadAttention': ( 'a. neural modules.html#multiheadattention',
                                                                                     'whisperspeech/modules.py'),
                                       'whisperspeech.modules.MultiHeadAttention.__init__': ( 'a. neural '
                                                                                              'modules.html#multiheadattention.__init__',
                                                                                              'whisperspeech/modules.py'),
                                       'whisperspeech.modules.MultiHeadAttention.forward': ( 'a. neural '
                                                                                             'modules.html#multiheadattention.forward',
                                                                                             'whisperspeech/modules.py'),
                                       'whisperspeech.modules.MultiHeadAttention.qkv_attention_pth20': ( 'a. neural '
                                                                                                         'modules.html#multiheadattention.qkv_attention_pth20',
                                                                                                         'whisperspeech/modules.py'),
                                       'whisperspeech.modules.MultiHeadAttention.qkv_attention_xformers': ( 'a. neural '
                                                                                                            'modules.html#multiheadattention.qkv_attention_xformers',
                                                                                                            'whisperspeech/modules.py'),
                                       'whisperspeech.modules.QueryHead': ('a. neural modules.html#queryhead', 'whisperspeech/modules.py'),
                                       'whisperspeech.modules.ResidualAttentionBlock': ( 'a. neural modules.html#residualattentionblock',
                                                                                         'whisperspeech/modules.py'),
                                       'whisperspeech.modules.ResidualAttentionBlock.__init__': ( 'a. neural '
                                                                                                  'modules.html#residualattentionblock.__init__',
                                                                                                  'whisperspeech/modules.py'),
                                       'whisperspeech.modules.ResidualAttentionBlock.forward': ( 'a. neural '
                                                                                                 'modules.html#residualattentionblock.forward',
                                                                                                 'whisperspeech/modules.py'),
                                       'whisperspeech.modules.SumDecoder': ( 'a. neural modules.html#sumdecoder',
                                                                             'whisperspeech/modules.py'),
                                       'whisperspeech.modules.SumDecoder.__init__': ( 'a. neural modules.html#sumdecoder.__init__',
                                                                                      'whisperspeech/modules.py'),
                                       'whisperspeech.modules.SumDecoder.forward': ( 'a. neural modules.html#sumdecoder.forward',
                                                                                     'whisperspeech/modules.py'),
                                       'whisperspeech.modules.init_transformer': ( 'a. neural modules.html#init_transformer',
                                                                                   'whisperspeech/modules.py'),
                                       'whisperspeech.modules.sinusoids': ('a. neural modules.html#sinusoids', 'whisperspeech/modules.py')},
            'whisperspeech.pipeline': { 'whisperspeech.pipeline.Pipeline': ('7. pipeline.html#pipeline', 'whisperspeech/pipeline.py'),
                                        'whisperspeech.pipeline.Pipeline.__init__': ( '7. pipeline.html#pipeline.__init__',
                                                                                      'whisperspeech/pipeline.py'),
                                        'whisperspeech.pipeline.Pipeline.generate': ( '7. pipeline.html#pipeline.generate',
                                                                                      'whisperspeech/pipeline.py'),
                                        'whisperspeech.pipeline.Pipeline.generate_atoks': ( '7. pipeline.html#pipeline.generate_atoks',
                                                                                            'whisperspeech/pipeline.py'),
                                        'whisperspeech.pipeline.Pipeline.generate_to_file': ( '7. pipeline.html#pipeline.generate_to_file',
                                                                                              'whisperspeech/pipeline.py'),
                                        'whisperspeech.pipeline.Pipeline.generate_to_notebook': ( '7. '
                                                                                                  'pipeline.html#pipeline.generate_to_notebook',
                                                                                                  'whisperspeech/pipeline.py')},
            'whisperspeech.s2a_delar_mup': { 'whisperspeech.s2a_delar_mup.CMLMVisual': ( '3c. multi-speaker semantic to acoustic token '
                                                                                         'modeling musicgen μpt.html#cmlmvisual',
                                                                                         'whisperspeech/s2a_delar_mup.py'),
                                             'whisperspeech.s2a_delar_mup.CMLMVisual.__init__': ( '3c. multi-speaker semantic to acoustic '
                                                                                                  'token modeling musicgen '
                                                                                                  'μpt.html#cmlmvisual.__init__',
                                                                                                  'whisperspeech/s2a_delar_mup.py'),
                                             'whisperspeech.s2a_delar_mup.CMLMVisual.add_data': ( '3c. multi-speaker semantic to acoustic '
                                                                                                  'token modeling musicgen '
                                                                                                  'μpt.html#cmlmvisual.add_data',
                                                                                                  'whisperspeech/s2a_delar_mup.py'),
                                             'whisperspeech.s2a_delar_mup.CMLMVisual.add_table_row': ( '3c. multi-speaker semantic to '
                                                                                                       'acoustic token modeling musicgen '
                                                                                                       'μpt.html#cmlmvisual.add_table_row',
                                                                                                       'whisperspeech/s2a_delar_mup.py'),
                                             'whisperspeech.s2a_delar_mup.CMLMVisual.hide': ( '3c. multi-speaker semantic to acoustic '
                                                                                              'token modeling musicgen '
                                                                                              'μpt.html#cmlmvisual.hide',
                                                                                              'whisperspeech/s2a_delar_mup.py'),
                                             'whisperspeech.s2a_delar_mup.CMLMVisual.on_iter': ( '3c. multi-speaker semantic to acoustic '
                                                                                                 'token modeling musicgen '
                                                                                                 'μpt.html#cmlmvisual.on_iter',
                                                                                                 'whisperspeech/s2a_delar_mup.py'),
                                             'whisperspeech.s2a_delar_mup.CMLMVisual.plot': ( '3c. multi-speaker semantic to acoustic '
                                                                                              'token modeling musicgen '
                                                                                              'μpt.html#cmlmvisual.plot',
                                                                                              'whisperspeech/s2a_delar_mup.py'),
                                             'whisperspeech.s2a_delar_mup.CMLMVisual.show': ( '3c. multi-speaker semantic to acoustic '
                                                                                              'token modeling musicgen '
                                                                                              'μpt.html#cmlmvisual.show',
                                                                                              'whisperspeech/s2a_delar_mup.py'),
                                             'whisperspeech.s2a_delar_mup.DelSumDecoder': ( '3c. multi-speaker semantic to acoustic token '
                                                                                            'modeling musicgen μpt.html#delsumdecoder',
                                                                                            'whisperspeech/s2a_delar_mup.py'),
                                             'whisperspeech.s2a_delar_mup.DelSumDecoder.__init__': ( '3c. multi-speaker semantic to '
                                                                                                     'acoustic token modeling musicgen '
                                                                                                     'μpt.html#delsumdecoder.__init__',
                                                                                                     'whisperspeech/s2a_delar_mup.py'),
                                             'whisperspeech.s2a_delar_mup.DelSumDecoder.forward': ( '3c. multi-speaker semantic to '
                                                                                                    'acoustic token modeling musicgen '
                                                                                                    'μpt.html#delsumdecoder.forward',
                                                                                                    'whisperspeech/s2a_delar_mup.py'),
                                             'whisperspeech.s2a_delar_mup.SADataset': ( '3c. multi-speaker semantic to acoustic token '
                                                                                        'modeling musicgen μpt.html#sadataset',
                                                                                        'whisperspeech/s2a_delar_mup.py'),
                                             'whisperspeech.s2a_delar_mup.SADataset.S_tokens': ( '3c. multi-speaker semantic to acoustic '
                                                                                                 'token modeling musicgen '
                                                                                                 'μpt.html#sadataset.s_tokens',
                                                                                                 'whisperspeech/s2a_delar_mup.py'),
                                             'whisperspeech.s2a_delar_mup.SADataset.__getitem__': ( '3c. multi-speaker semantic to '
                                                                                                    'acoustic token modeling musicgen '
                                                                                                    'μpt.html#sadataset.__getitem__',
                                                                                                    'whisperspeech/s2a_delar_mup.py'),
                                             'whisperspeech.s2a_delar_mup.SADataset.__init__': ( '3c. multi-speaker semantic to acoustic '
                                                                                                 'token modeling musicgen '
                                                                                                 'μpt.html#sadataset.__init__',
                                                                                                 'whisperspeech/s2a_delar_mup.py'),
                                             'whisperspeech.s2a_delar_mup.SADataset.__len__': ( '3c. multi-speaker semantic to acoustic '
                                                                                                'token modeling musicgen '
                                                                                                'μpt.html#sadataset.__len__',
                                                                                                'whisperspeech/s2a_delar_mup.py'),
                                             'whisperspeech.s2a_delar_mup.SADataset.__repr__': ( '3c. multi-speaker semantic to acoustic '
                                                                                                 'token modeling musicgen '
                                                                                                 'μpt.html#sadataset.__repr__',
                                                                                                 'whisperspeech/s2a_delar_mup.py'),
                                             'whisperspeech.s2a_delar_mup.SADataset.hours': ( '3c. multi-speaker semantic to acoustic '
                                                                                              'token modeling musicgen '
                                                                                              'μpt.html#sadataset.hours',
                                                                                              'whisperspeech/s2a_delar_mup.py'),
                                             'whisperspeech.s2a_delar_mup.SADelARTransformer': ( '3c. multi-speaker semantic to acoustic '
                                                                                                 'token modeling musicgen '
                                                                                                 'μpt.html#sadelartransformer',
                                                                                                 'whisperspeech/s2a_delar_mup.py'),
                                             'whisperspeech.s2a_delar_mup.SADelARTransformer.__init__': ( '3c. multi-speaker semantic to '
                                                                                                          'acoustic token modeling '
                                                                                                          'musicgen '
                                                                                                          'μpt.html#sadelartransformer.__init__',
                                                                                                          'whisperspeech/s2a_delar_mup.py'),
                                             'whisperspeech.s2a_delar_mup.SADelARTransformer.device': ( '3c. multi-speaker semantic to '
                                                                                                        'acoustic token modeling musicgen '
                                                                                                        'μpt.html#sadelartransformer.device',
                                                                                                        'whisperspeech/s2a_delar_mup.py'),
                                             'whisperspeech.s2a_delar_mup.SADelARTransformer.embed_stoks': ( '3c. multi-speaker semantic '
                                                                                                             'to acoustic token modeling '
                                                                                                             'musicgen '
                                                                                                             'μpt.html#sadelartransformer.embed_stoks',
                                                                                                             'whisperspeech/s2a_delar_mup.py'),
                                             'whisperspeech.s2a_delar_mup.SADelARTransformer.forward': ( '3c. multi-speaker semantic to '
                                                                                                         'acoustic token modeling musicgen '
                                                                                                         'μpt.html#sadelartransformer.forward',
                                                                                                         'whisperspeech/s2a_delar_mup.py'),
                                             'whisperspeech.s2a_delar_mup.SADelARTransformer.generate': ( '3c. multi-speaker semantic to '
                                                                                                          'acoustic token modeling '
                                                                                                          'musicgen '
                                                                                                          'μpt.html#sadelartransformer.generate',
                                                                                                          'whisperspeech/s2a_delar_mup.py'),
                                             'whisperspeech.s2a_delar_mup.SADelARTransformer.init_transformer': ( '3c. multi-speaker '
                                                                                                                  'semantic to acoustic '
                                                                                                                  'token modeling musicgen '
                                                                                                                  'μpt.html#sadelartransformer.init_transformer',
                                                                                                                  'whisperspeech/s2a_delar_mup.py'),
                                             'whisperspeech.s2a_delar_mup.SADelARTransformer.load_checkpoint': ( '3c. multi-speaker '
                                                                                                                 'semantic to acoustic '
                                                                                                                 'token modeling musicgen '
                                                                                                                 'μpt.html#sadelartransformer.load_checkpoint',
                                                                                                                 'whisperspeech/s2a_delar_mup.py'),
                                             'whisperspeech.s2a_delar_mup.SADelARTransformer.load_model': ( '3c. multi-speaker semantic to '
                                                                                                            'acoustic token modeling '
                                                                                                            'musicgen '
                                                                                                            'μpt.html#sadelartransformer.load_model',
                                                                                                            'whisperspeech/s2a_delar_mup.py'),
                                             'whisperspeech.s2a_delar_mup.SADelARTransformer.reset_stats': ( '3c. multi-speaker semantic '
                                                                                                             'to acoustic token modeling '
                                                                                                             'musicgen '
                                                                                                             'μpt.html#sadelartransformer.reset_stats',
                                                                                                             'whisperspeech/s2a_delar_mup.py'),
                                             'whisperspeech.s2a_delar_mup.SADelARTransformer.save_model': ( '3c. multi-speaker semantic to '
                                                                                                            'acoustic token modeling '
                                                                                                            'musicgen '
                                                                                                            'μpt.html#sadelartransformer.save_model',
                                                                                                            'whisperspeech/s2a_delar_mup.py'),
                                             'whisperspeech.s2a_delar_mup.Tunables': ( '3c. multi-speaker semantic to acoustic token '
                                                                                       'modeling musicgen μpt.html#tunables',
                                                                                       'whisperspeech/s2a_delar_mup.py'),
                                             'whisperspeech.s2a_delar_mup.Tunables.__post_init__': ( '3c. multi-speaker semantic to '
                                                                                                     'acoustic token modeling musicgen '
                                                                                                     'μpt.html#tunables.__post_init__',
                                                                                                     'whisperspeech/s2a_delar_mup.py'),
                                             'whisperspeech.s2a_delar_mup.load_datasets': ( '3c. multi-speaker semantic to acoustic token '
                                                                                            'modeling musicgen μpt.html#load_datasets',
                                                                                            'whisperspeech/s2a_delar_mup.py'),
                                             'whisperspeech.s2a_delar_mup.make_model': ( '3c. multi-speaker semantic to acoustic token '
                                                                                         'modeling musicgen μpt.html#make_model',
                                                                                         'whisperspeech/s2a_delar_mup.py'),
                                             'whisperspeech.s2a_delar_mup.rand': ( '3c. multi-speaker semantic to acoustic token modeling '
                                                                                   'musicgen μpt.html#rand',
                                                                                   'whisperspeech/s2a_delar_mup.py')},
            'whisperspeech.t2s_up': { 'whisperspeech.t2s_up.Decoder': ( '5. text to semantic token modeling μp.html#decoder',
                                                                        'whisperspeech/t2s_up.py'),
                                      'whisperspeech.t2s_up.Decoder.__init__': ( '5. text to semantic token modeling '
                                                                                 'μp.html#decoder.__init__',
                                                                                 'whisperspeech/t2s_up.py'),
                                      'whisperspeech.t2s_up.Decoder.forward': ( '5. text to semantic token modeling '
                                                                                'μp.html#decoder.forward',
                                                                                'whisperspeech/t2s_up.py'),
                                      'whisperspeech.t2s_up.Encoder': ( '5. text to semantic token modeling μp.html#encoder',
                                                                        'whisperspeech/t2s_up.py'),
                                      'whisperspeech.t2s_up.Encoder.__init__': ( '5. text to semantic token modeling '
                                                                                 'μp.html#encoder.__init__',
                                                                                 'whisperspeech/t2s_up.py'),
                                      'whisperspeech.t2s_up.Encoder.forward': ( '5. text to semantic token modeling '
                                                                                'μp.html#encoder.forward',
                                                                                'whisperspeech/t2s_up.py'),
                                      'whisperspeech.t2s_up.SADataset': ( '5. text to semantic token modeling μp.html#sadataset',
                                                                          'whisperspeech/t2s_up.py'),
                                      'whisperspeech.t2s_up.SADataset.__getitem__': ( '5. text to semantic token modeling '
                                                                                      'μp.html#sadataset.__getitem__',
                                                                                      'whisperspeech/t2s_up.py'),
                                      'whisperspeech.t2s_up.SADataset.__init__': ( '5. text to semantic token modeling '
                                                                                   'μp.html#sadataset.__init__',
                                                                                   'whisperspeech/t2s_up.py'),
                                      'whisperspeech.t2s_up.SADataset.__len__': ( '5. text to semantic token modeling '
                                                                                  'μp.html#sadataset.__len__',
                                                                                  'whisperspeech/t2s_up.py'),
                                      'whisperspeech.t2s_up.SADataset.__repr__': ( '5. text to semantic token modeling '
                                                                                   'μp.html#sadataset.__repr__',
                                                                                   'whisperspeech/t2s_up.py'),
                                      'whisperspeech.t2s_up.TSARTransformer': ( '5. text to semantic token modeling '
                                                                                'μp.html#tsartransformer',
                                                                                'whisperspeech/t2s_up.py'),
                                      'whisperspeech.t2s_up.TSARTransformer.__init__': ( '5. text to semantic token modeling '
                                                                                         'μp.html#tsartransformer.__init__',
                                                                                         'whisperspeech/t2s_up.py'),
                                      'whisperspeech.t2s_up.TSARTransformer.device': ( '5. text to semantic token modeling '
                                                                                       'μp.html#tsartransformer.device',
                                                                                       'whisperspeech/t2s_up.py'),
                                      'whisperspeech.t2s_up.TSARTransformer.ensure_tokenizer': ( '5. text to semantic token modeling '
                                                                                                 'μp.html#tsartransformer.ensure_tokenizer',
                                                                                                 'whisperspeech/t2s_up.py'),
                                      'whisperspeech.t2s_up.TSARTransformer.forward': ( '5. text to semantic token modeling '
                                                                                        'μp.html#tsartransformer.forward',
                                                                                        'whisperspeech/t2s_up.py'),
                                      'whisperspeech.t2s_up.TSARTransformer.generate': ( '5. text to semantic token modeling '
                                                                                         'μp.html#tsartransformer.generate',
                                                                                         'whisperspeech/t2s_up.py'),
                                      'whisperspeech.t2s_up.TSARTransformer.init_transformer': ( '5. text to semantic token modeling '
                                                                                                 'μp.html#tsartransformer.init_transformer',
                                                                                                 'whisperspeech/t2s_up.py'),
                                      'whisperspeech.t2s_up.TSARTransformer.load_checkpoint': ( '5. text to semantic token modeling '
                                                                                                'μp.html#tsartransformer.load_checkpoint',
                                                                                                'whisperspeech/t2s_up.py'),
                                      'whisperspeech.t2s_up.TSARTransformer.load_model': ( '5. text to semantic token modeling '
                                                                                           'μp.html#tsartransformer.load_model',
                                                                                           'whisperspeech/t2s_up.py'),
                                      'whisperspeech.t2s_up.TSARTransformer.save_model': ( '5. text to semantic token modeling '
                                                                                           'μp.html#tsartransformer.save_model',
                                                                                           'whisperspeech/t2s_up.py'),
                                      'whisperspeech.t2s_up.Tunables': ( '5. text to semantic token modeling μp.html#tunables',
                                                                         'whisperspeech/t2s_up.py'),
                                      'whisperspeech.t2s_up.Tunables.__post_init__': ( '5. text to semantic token modeling '
                                                                                       'μp.html#tunables.__post_init__',
                                                                                       'whisperspeech/t2s_up.py'),
                                      'whisperspeech.t2s_up.load_data': ( '5. text to semantic token modeling μp.html#load_data',
                                                                          'whisperspeech/t2s_up.py'),
                                      'whisperspeech.t2s_up.load_datasets': ( '5. text to semantic token modeling μp.html#load_datasets',
                                                                              'whisperspeech/t2s_up.py'),
                                      'whisperspeech.t2s_up.make_model': ( '5. text to semantic token modeling μp.html#make_model',
                                                                           'whisperspeech/t2s_up.py'),
                                      'whisperspeech.t2s_up.rand': ( '5. text to semantic token modeling μp.html#rand',
                                                                     'whisperspeech/t2s_up.py')},
            'whisperspeech.train': { 'whisperspeech.train.SimpleVisual': ('b1. training.html#simplevisual', 'whisperspeech/train.py'),
                                     'whisperspeech.train.SimpleVisual.__init__': ( 'b1. training.html#simplevisual.__init__',
                                                                                    'whisperspeech/train.py'),
                                     'whisperspeech.train.SimpleVisual.add_data': ( 'b1. training.html#simplevisual.add_data',
                                                                                    'whisperspeech/train.py'),
                                     'whisperspeech.train.SimpleVisual.add_table_row': ( 'b1. training.html#simplevisual.add_table_row',
                                                                                         'whisperspeech/train.py'),
                                     'whisperspeech.train.SimpleVisual.hide': ( 'b1. training.html#simplevisual.hide',
                                                                                'whisperspeech/train.py'),
                                     'whisperspeech.train.SimpleVisual.on_iter': ( 'b1. training.html#simplevisual.on_iter',
                                                                                   'whisperspeech/train.py'),
                                     'whisperspeech.train.SimpleVisual.plot': ( 'b1. training.html#simplevisual.plot',
                                                                                'whisperspeech/train.py'),
                                     'whisperspeech.train.SimpleVisual.show': ( 'b1. training.html#simplevisual.show',
                                                                                'whisperspeech/train.py'),
                                     'whisperspeech.train.train': ('b1. training.html#train', 'whisperspeech/train.py')},
            'whisperspeech.train_multi': { 'whisperspeech.train_multi.TrainingTask': ( 'b2. training (lightning).html#trainingtask',
                                                                                       'whisperspeech/train_multi.py'),
                                           'whisperspeech.train_multi.TrainingTask.__init__': ( 'b2. training '
                                                                                                '(lightning).html#trainingtask.__init__',
                                                                                                'whisperspeech/train_multi.py'),
                                           'whisperspeech.train_multi.TrainingTask.configure_optimizers': ( 'b2. training '
                                                                                                            '(lightning).html#trainingtask.configure_optimizers',
                                                                                                            'whisperspeech/train_multi.py'),
                                           'whisperspeech.train_multi.TrainingTask.test_step': ( 'b2. training '
                                                                                                 '(lightning).html#trainingtask.test_step',
                                                                                                 'whisperspeech/train_multi.py'),
                                           'whisperspeech.train_multi.TrainingTask.training_step': ( 'b2. training '
                                                                                                     '(lightning).html#trainingtask.training_step',
                                                                                                     'whisperspeech/train_multi.py'),
                                           'whisperspeech.train_multi.TrainingTask.validation_step': ( 'b2. training '
                                                                                                       '(lightning).html#trainingtask.validation_step',
                                                                                                       'whisperspeech/train_multi.py'),
                                           'whisperspeech.train_multi.parse_and_call': ( 'b2. training (lightning).html#parse_and_call',
                                                                                         'whisperspeech/train_multi.py')}}}
