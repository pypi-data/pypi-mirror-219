# pyproject.toml
# Python project metadata and build settings for this code base.
# Documentation:
#     <URL:https://peps.python.org/pep-0517/>
#     <URL:https://peps.python.org/pep-0518/>
#     <URL:https://peps.python.org/pep-0621/>

[build-system]

# Minimum requirements for the build system.
requires = [
    "setuptools >=62.4.0",
    "packaging",
    ]

# Path to the Python object to perform the build.
build-backend = "setuptools.build_meta"


[project]

# Name of the Python distribution to build.
name = "package-smoke-test"

# One-sentence synopsis of the distribution.
description = "Simple import test for Python packages"

# Text file containing detailed description of the distribution.
readme = { file = "README", content-type = "text/x-rst" }

# People to credit as authors of this distribution.
authors = [
    { name = "Ben Finney", email = "ben+python@benfinney.id.au" },
    ]

# The Python version requirements of the project.
requires-python = ">= 3.7"

# Keywords to categorise this project.
keywords = ["test", "smoke", "packaging"]

# Trove classifiers for this project.
# Reference: <URL:https://pypi.org/classifiers/>
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Operating System :: POSIX",
    "Programming Language :: Python :: 3",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Testing",
    ]

# Names of fields that must be dynamically computed by the build system.
dynamic = [
    "version",
    ]

[project.urls]
"Homepage" = "https://salsa.debian.org/bignose/python-package-smoke-test/"
"Issue tracker" = "https://bugs.debian.org/"
"Change log" = "https://salsa.debian.org/bignose/python-package-smoke-test/-/raw/main/ChangeLog"


[tool.setuptools]

# Can the project be safely installed and run from a zip file?
zip-safe = false

[tool.setuptools.dynamic]

# Text file containing the distribution version value.
version = { file = "VERSION" }

[tool.setuptools.packages.find]

# Folders that contain the packages (default: ["."])
where = ["src"]

[tool.distutils.bdist_wheel]

# Build a single “universal wheel” (for Python 2 and Python 3)?
universal = false


# Local-variables:
# coding: utf-8
# mode: toml
# mode: conf
# End:
# vim: fileencoding=utf-8 filetype=toml :
