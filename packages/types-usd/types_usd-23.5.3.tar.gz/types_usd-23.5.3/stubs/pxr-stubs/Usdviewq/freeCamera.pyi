# mypy: disable-error-code="misc, override, no-redef"

import pxr.Gf as Gf
import PySide6.QtCore
import pxr.Tf as Tf
from _typeshed import Incomplete
from typing import Any, ClassVar

DEBUG_CLIPPING: str

class FreeCamera(PySide6.QtCore.QObject):
    defaultFar: ClassVar[int] = ...
    defaultNear: ClassVar[int] = ...
    maxGoodZResolution: ClassVar[float] = ...
    maxSafeZResolution: ClassVar[float] = ...
    signalFrustumChanged: ClassVar[PySide6.QtCore.Signal] = ...
    signalFrustumSettingsChanged: ClassVar[PySide6.QtCore.Signal] = ...
    staticMetaObject: ClassVar[PySide6.QtCore.QMetaObject] = ...
    aspectRatio: Any
    center: Any
    dist: Any
    focalLength: Any
    fov: Any
    horizontalAperture: Any
    orthographic: Any
    overrideFar: Any
    overrideNear: Any
    rotPhi: Any
    rotTheta: Any
    verticalAperture: Any
    def __init__(self, isZUp, fov: float = ..., aspectRatio: float = ..., overrideNear: Incomplete | None = ..., overrideFar: Incomplete | None = ...): ...
    def AdjustDistance(self, scaleFactor): ...
    def ComputePixelsToWorldFactor(self, viewportHeight): ...
    def FromGfCamera(self, gfCamera, isZUp): ...
    def PanTilt(self, dPan, dTilt): ...
    def Truck(self, deltaRight, deltaUp): ...
    def Tumble(self, dTheta, dPhi): ...
    def Walk(self, dForward, dRight): ...
    def _pullFromCameraTransform(self): ...
    def _pushToCameraTransform(self): ...
    def _rangeOfBoxAlongRay(self, camRay, bbox, debugClipping: bool = ...): ...
    def clone(self): ...
    def computeGfCamera(self, stageBBox, autoClip: bool = ...): ...
    def frameSelection(self, selBBox, frameFit): ...
    def resetClippingPlanes(self): ...
    def setClippingPlanes(self, stageBBox): ...
    def setClosestVisibleDistFromPoint(self, point): ...
    @property
    def far(self) -> Any: ...
    @property
    def near(self) -> Any: ...
