import os
import numpy as np
from .utils import platform_info
from .config import CONFIG

class detector(object):
    def __init__(self) -> None:
        self.config = CONFIG

    def extractFeature(self) -> list:
        raise NotImplementedError("extractFeature must be implemented in the derived class.")

    def vectorize(self) -> np.array:
        raise NotImplementedError("vectorize must be implemented in the derived class.")

    def model(self):
        raise NotImplementedError("model must be implemented in the derived class.")

    def predict(self):
        raise NotImplementedError("predict must be implemented in the derived class.")

    def mkdir(self, folder_list) -> None:
        for folder in folder_list:
            if not os.path.exists(folder):
                os.mkdir(folder)

if __name__ == "__main__":
    platform_info()