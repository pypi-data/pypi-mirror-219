/* Generated by Cython 0.29.36 */

#ifndef __PYX_HAVE__cantera__delegator
#define __PYX_HAVE__cantera__delegator

#include "Python.h"

#ifndef __PYX_HAVE_API__cantera__delegator

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#ifndef DL_IMPORT
  #define DL_IMPORT(_T) _T
#endif

__PYX_EXTERN_C char *ct_getExceptionString(PyObject *, PyObject *, PyObject *);
__PYX_EXTERN_C PyObject *ct_newPythonExtensibleRate(Cantera::ReactionRateDelegator *, std::string const &, std::string const &);
__PYX_EXTERN_C PyObject *ct_newPythonExtensibleRateData(Cantera::ReactionDataDelegator *, std::string const &, std::string const &);
__PYX_EXTERN_C PyObject *ct_registerReactionDelegators(void);
__PYX_EXTERN_C PyObject *ct_wrapSolution(std::shared_ptr<Cantera::Solution> );

#endif /* !__PYX_HAVE_API__cantera__delegator */

/* WARNING: the interface of the module init function changed in CPython 3.5. */
/* It now returns a PyModuleDef instance instead of a PyModule instance. */

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initdelegator(void);
#else
PyMODINIT_FUNC PyInit_delegator(void);
#endif

#endif /* !__PYX_HAVE__cantera__delegator */
