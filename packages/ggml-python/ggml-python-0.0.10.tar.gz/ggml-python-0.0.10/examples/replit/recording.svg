<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="554" onload="init(evt)" viewBox="0 0 1200 554" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="554" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="543.00"> </text><svg id="frames" x="10" width="1180"><g><title>0x7ff115053ce7 (libcuda.so.530.41.03) (7 samples, 1.53%)</title><rect x="1.0941%" y="372" width="1.5317%" height="15" fill="rgb(227,0,7)"/><text x="1.3441%" y="382.50"></text></g><g><title>0x7ff1150f5409 (libcuda.so.530.41.03) (9 samples, 1.97%)</title><rect x="1.0941%" y="356" width="1.9694%" height="15" fill="rgb(217,0,24)"/><text x="1.3441%" y="366.50">0..</text></g><g><title>0x7ff13f621ad3 (libcudart.so.12.1.105) (12 samples, 2.63%)</title><rect x="0.8753%" y="244" width="2.6258%" height="15" fill="rgb(221,193,54)"/><text x="1.1253%" y="254.50">0x..</text></g><g><title>0x7ff13f64301e (libcudart.so.12.1.105) (12 samples, 2.63%)</title><rect x="0.8753%" y="260" width="2.6258%" height="15" fill="rgb(248,212,6)"/><text x="1.1253%" y="270.50">0x..</text></g><g><title>0x7ff13f64a2ec (libcudart.so.12.1.105) (12 samples, 2.63%)</title><rect x="0.8753%" y="276" width="2.6258%" height="15" fill="rgb(208,68,35)"/><text x="1.1253%" y="286.50">0x..</text></g><g><title>0x7ff13f6497dd (libcudart.so.12.1.105) (12 samples, 2.63%)</title><rect x="0.8753%" y="292" width="2.6258%" height="15" fill="rgb(232,128,0)"/><text x="1.1253%" y="302.50">0x..</text></g><g><title>0x7ff13f6496d3 (libcudart.so.12.1.105) (12 samples, 2.63%)</title><rect x="0.8753%" y="308" width="2.6258%" height="15" fill="rgb(207,160,47)"/><text x="1.1253%" y="318.50">0x..</text></g><g><title>0x7ff13f649582 (libcudart.so.12.1.105) (12 samples, 2.63%)</title><rect x="0.8753%" y="324" width="2.6258%" height="15" fill="rgb(228,23,34)"/><text x="1.1253%" y="334.50">0x..</text></g><g><title>0x7ff11519cac0 (libcuda.so.530.41.03) (12 samples, 2.63%)</title><rect x="0.8753%" y="340" width="2.6258%" height="15" fill="rgb(218,30,26)"/><text x="1.1253%" y="350.50">0x..</text></g><g><title>init_from_file (main.py:891) (17 samples, 3.72%)</title><rect x="0.8753%" y="84" width="3.7199%" height="15" fill="rgb(220,122,19)"/><text x="1.1253%" y="94.50">init..</text></g><g><title>__init__ (main.py:142) (17 samples, 3.72%)</title><rect x="0.8753%" y="100" width="3.7199%" height="15" fill="rgb(250,228,42)"/><text x="1.1253%" y="110.50">__in..</text></g><g><title>try_alloc (main.py:146) (17 samples, 3.72%)</title><rect x="0.8753%" y="116" width="3.7199%" height="15" fill="rgb(240,193,28)"/><text x="1.1253%" y="126.50">try_..</text></g><g><title>ggml_cuda_host_malloc (ggml/ggml.py:5190) (17 samples, 3.72%)</title><rect x="0.8753%" y="132" width="3.7199%" height="15" fill="rgb(216,20,37)"/><text x="1.1253%" y="142.50">ggml..</text></g><g><title>0x7ff15eb36ae7 (_ctypes.cpython-38-x86_64-linux-gnu.so) (17 samples, 3.72%)</title><rect x="0.8753%" y="148" width="3.7199%" height="15" fill="rgb(206,188,39)"/><text x="1.1253%" y="158.50">0x7f..</text></g><g><title>_ctypes_callproc (_ctypes.cpython-38-x86_64-linux-gnu.so) (17 samples, 3.72%)</title><rect x="0.8753%" y="164" width="3.7199%" height="15" fill="rgb(217,207,13)"/><text x="1.1253%" y="174.50">_cty..</text></g><g><title>0x7ff15eae940a (libffi.so.7.1.0) (17 samples, 3.72%)</title><rect x="0.8753%" y="180" width="3.7199%" height="15" fill="rgb(231,73,38)"/><text x="1.1253%" y="190.50">0x7f..</text></g><g><title>0x7ff15eae9ff5 (libffi.so.7.1.0) (17 samples, 3.72%)</title><rect x="0.8753%" y="196" width="3.7199%" height="15" fill="rgb(225,20,46)"/><text x="1.1253%" y="206.50">0x7f..</text></g><g><title>ggml_cuda_host_malloc (ggml/libggml.so) (17 samples, 3.72%)</title><rect x="0.8753%" y="212" width="3.7199%" height="15" fill="rgb(210,31,41)"/><text x="1.1253%" y="222.50">ggml..</text></g><g><title>cudaMallocHost (libcudart.so.12.1.105) (17 samples, 3.72%)</title><rect x="0.8753%" y="228" width="3.7199%" height="15" fill="rgb(221,200,47)"/><text x="1.1253%" y="238.50">cuda..</text></g><g><title>0x7ff11514b58e (libcuda.so.530.41.03) (10 samples, 2.19%)</title><rect x="8.7527%" y="388" width="2.1882%" height="15" fill="rgb(226,26,5)"/><text x="9.0027%" y="398.50">0..</text></g><g><title>0x7ff11513dccc (libcuda.so.530.41.03) (10 samples, 2.19%)</title><rect x="8.7527%" y="404" width="2.1882%" height="15" fill="rgb(249,33,26)"/><text x="9.0027%" y="414.50">0..</text></g><g><title>0x7ff1153b05cb (libcuda.so.530.41.03) (10 samples, 2.19%)</title><rect x="8.7527%" y="420" width="2.1882%" height="15" fill="rgb(235,183,28)"/><text x="9.0027%" y="430.50">0..</text></g><g><title>0x7ff11513d7c5 (libcuda.so.530.41.03) (9 samples, 1.97%)</title><rect x="8.9716%" y="436" width="1.9694%" height="15" fill="rgb(221,5,38)"/><text x="9.2216%" y="446.50">0..</text></g><g><title>0x7ff115384680 (libcuda.so.530.41.03) (9 samples, 1.97%)</title><rect x="8.9716%" y="452" width="1.9694%" height="15" fill="rgb(247,18,42)"/><text x="9.2216%" y="462.50">0..</text></g><g><title>0x7ff11537d385 (libcuda.so.530.41.03) (9 samples, 1.97%)</title><rect x="8.9716%" y="468" width="1.9694%" height="15" fill="rgb(241,131,45)"/><text x="9.2216%" y="478.50">0..</text></g><g><title>0x7ff11514c4cd (libcuda.so.530.41.03) (15 samples, 3.28%)</title><rect x="8.7527%" y="372" width="3.2823%" height="15" fill="rgb(249,31,29)"/><text x="9.0027%" y="382.50">0x7..</text></g><g><title>0x7ff11514b7f1 (libcuda.so.530.41.03) (5 samples, 1.09%)</title><rect x="10.9409%" y="388" width="1.0941%" height="15" fill="rgb(225,111,53)"/><text x="11.1909%" y="398.50"></text></g><g><title>0x7ff11511541a (libcuda.so.530.41.03) (5 samples, 1.09%)</title><rect x="12.6915%" y="420" width="1.0941%" height="15" fill="rgb(238,160,17)"/><text x="12.9415%" y="430.50"></text></g><g><title>0x7ff11511624b (libcuda.so.530.41.03) (5 samples, 1.09%)</title><rect x="14.8796%" y="420" width="1.0941%" height="15" fill="rgb(214,148,48)"/><text x="15.1296%" y="430.50"></text></g><g><title>0x7ff1153512da (libcuda.so.530.41.03) (5 samples, 1.09%)</title><rect x="14.8796%" y="436" width="1.0941%" height="15" fill="rgb(232,36,49)"/><text x="15.1296%" y="446.50"></text></g><g><title>0x7ff115351208 (libcuda.so.530.41.03) (5 samples, 1.09%)</title><rect x="14.8796%" y="452" width="1.0941%" height="15" fill="rgb(209,103,24)"/><text x="15.1296%" y="462.50"></text></g><g><title>0x7ff115116a81 (libcuda.so.530.41.03) (7 samples, 1.53%)</title><rect x="15.9737%" y="420" width="1.5317%" height="15" fill="rgb(229,88,8)"/><text x="16.2237%" y="430.50"></text></g><g><title>0x7ff115113d7c (libcuda.so.530.41.03) (5 samples, 1.09%)</title><rect x="16.4114%" y="436" width="1.0941%" height="15" fill="rgb(213,181,19)"/><text x="16.6614%" y="446.50"></text></g><g><title>0x7ff11515e327 (libcuda.so.530.41.03) (26 samples, 5.69%)</title><rect x="12.0350%" y="404" width="5.6893%" height="15" fill="rgb(254,191,54)"/><text x="12.2850%" y="414.50">0x7ff11..</text></g><g><title>0x7ff1399d68a1 (libcublas.so.12.1.3.1) (48 samples, 10.50%)</title><rect x="8.3151%" y="228" width="10.5033%" height="15" fill="rgb(241,83,37)"/><text x="8.5651%" y="238.50">0x7ff1399d68a1 ..</text></g><g><title>0x7ff1399a58b7 (libcublas.so.12.1.3.1) (48 samples, 10.50%)</title><rect x="8.3151%" y="244" width="10.5033%" height="15" fill="rgb(233,36,39)"/><text x="8.5651%" y="254.50">0x7ff1399a58b7 ..</text></g><g><title>0x7ff1399fcfc9 (libcublas.so.12.1.3.1) (48 samples, 10.50%)</title><rect x="8.3151%" y="260" width="10.5033%" height="15" fill="rgb(226,3,54)"/><text x="8.5651%" y="270.50">0x7ff1399fcfc9 ..</text></g><g><title>__pthread_once_slow (libpthread-2.31.so) (48 samples, 10.50%)</title><rect x="8.3151%" y="276" width="10.5033%" height="15" fill="rgb(245,192,40)"/><text x="8.5651%" y="286.50">__pthread_once_..</text></g><g><title>0x7ff1399b1754 (libcublas.so.12.1.3.1) (46 samples, 10.07%)</title><rect x="8.7527%" y="292" width="10.0656%" height="15" fill="rgb(238,167,29)"/><text x="9.0027%" y="302.50">0x7ff1399b1754 ..</text></g><g><title>0x7ff1399a555e (libcublas.so.12.1.3.1) (46 samples, 10.07%)</title><rect x="8.7527%" y="308" width="10.0656%" height="15" fill="rgb(232,182,51)"/><text x="9.0027%" y="318.50">0x7ff1399a555e ..</text></g><g><title>0x7ff1399f721d (libcublas.so.12.1.3.1) (46 samples, 10.07%)</title><rect x="8.7527%" y="324" width="10.0656%" height="15" fill="rgb(231,60,39)"/><text x="9.0027%" y="334.50">0x7ff1399f721d ..</text></g><g><title>0x7ff1399a209c (libcublas.so.12.1.3.1) (46 samples, 10.07%)</title><rect x="8.7527%" y="340" width="10.0656%" height="15" fill="rgb(208,69,12)"/><text x="9.0027%" y="350.50">0x7ff1399a209c ..</text></g><g><title>0x7ff1151a6c31 (libcuda.so.530.41.03) (46 samples, 10.07%)</title><rect x="8.7527%" y="356" width="10.0656%" height="15" fill="rgb(235,93,37)"/><text x="9.0027%" y="366.50">0x7ff1151a6c31 ..</text></g><g><title>0x7ff11514c5a7 (libcuda.so.530.41.03) (31 samples, 6.78%)</title><rect x="12.0350%" y="372" width="6.7834%" height="15" fill="rgb(213,116,39)"/><text x="12.2850%" y="382.50">0x7ff1151..</text></g><g><title>0x7ff1151482cc (libcuda.so.530.41.03) (31 samples, 6.78%)</title><rect x="12.0350%" y="388" width="6.7834%" height="15" fill="rgb(222,207,29)"/><text x="12.2850%" y="398.50">0x7ff1151..</text></g><g><title>0x7ff11537a79c (libcuda.so.530.41.03) (6 samples, 1.31%)</title><rect x="19.4748%" y="516" width="1.3129%" height="15" fill="rgb(206,96,30)"/><text x="19.7248%" y="526.50"></text></g><g><title>0x7ff11514b58e (libcuda.so.530.41.03) (10 samples, 2.19%)</title><rect x="18.8184%" y="420" width="2.1882%" height="15" fill="rgb(218,138,4)"/><text x="19.0684%" y="430.50">0..</text></g><g><title>0x7ff11513dccc (libcuda.so.530.41.03) (10 samples, 2.19%)</title><rect x="18.8184%" y="436" width="2.1882%" height="15" fill="rgb(250,191,14)"/><text x="19.0684%" y="446.50">0..</text></g><g><title>0x7ff1153b05cb (libcuda.so.530.41.03) (10 samples, 2.19%)</title><rect x="18.8184%" y="452" width="2.1882%" height="15" fill="rgb(239,60,40)"/><text x="19.0684%" y="462.50">0..</text></g><g><title>0x7ff11513d7c5 (libcuda.so.530.41.03) (10 samples, 2.19%)</title><rect x="18.8184%" y="468" width="2.1882%" height="15" fill="rgb(206,27,48)"/><text x="19.0684%" y="478.50">0..</text></g><g><title>0x7ff115384680 (libcuda.so.530.41.03) (9 samples, 1.97%)</title><rect x="19.0372%" y="484" width="1.9694%" height="15" fill="rgb(225,35,8)"/><text x="19.2872%" y="494.50">0..</text></g><g><title>0x7ff11537d385 (libcuda.so.530.41.03) (9 samples, 1.97%)</title><rect x="19.0372%" y="500" width="1.9694%" height="15" fill="rgb(250,213,24)"/><text x="19.2872%" y="510.50">0..</text></g><g><title>0x7ff115142f2b (libcuda.so.530.41.03) (7 samples, 1.53%)</title><rect x="21.0066%" y="436" width="1.5317%" height="15" fill="rgb(247,123,22)"/><text x="21.2566%" y="446.50"></text></g><g><title>0x7ff11514b7f1 (libcuda.so.530.41.03) (9 samples, 1.97%)</title><rect x="21.0066%" y="420" width="1.9694%" height="15" fill="rgb(231,138,38)"/><text x="21.2566%" y="430.50">0..</text></g><g><title>0x7ff11514c4cd (libcuda.so.530.41.03) (20 samples, 4.38%)</title><rect x="18.8184%" y="404" width="4.3764%" height="15" fill="rgb(231,145,46)"/><text x="19.0684%" y="414.50">0x7ff..</text></g><g><title>0x7ff11511624b (libcuda.so.530.41.03) (6 samples, 1.31%)</title><rect x="24.5077%" y="452" width="1.3129%" height="15" fill="rgb(251,118,11)"/><text x="24.7577%" y="462.50"></text></g><g><title>0x7ff1153512da (libcuda.so.530.41.03) (6 samples, 1.31%)</title><rect x="24.5077%" y="468" width="1.3129%" height="15" fill="rgb(217,147,25)"/><text x="24.7577%" y="478.50"></text></g><g><title>0x7ff11515e327 (libcuda.so.530.41.03) (15 samples, 3.28%)</title><rect x="23.1947%" y="436" width="3.2823%" height="15" fill="rgb(247,81,37)"/><text x="23.4447%" y="446.50">0x7..</text></g><g><title>ggml_init_cublas (ggml/libggml.so) (92 samples, 20.13%)</title><rect x="7.8775%" y="196" width="20.1313%" height="15" fill="rgb(209,12,38)"/><text x="8.1275%" y="206.50">ggml_init_cublas (ggml/libggml.s..</text></g><g><title>cublasCreate_v2 (libcublas.so.12.1.3.1) (90 samples, 19.69%)</title><rect x="8.3151%" y="212" width="19.6937%" height="15" fill="rgb(227,1,9)"/><text x="8.5651%" y="222.50">cublasCreate_v2 (libcublas.so.1..</text></g><g><title>cublasLtCtxInit (libcublasLt.so.12.1.3.1) (42 samples, 9.19%)</title><rect x="18.8184%" y="228" width="9.1904%" height="15" fill="rgb(248,47,43)"/><text x="19.0684%" y="238.50">cublasLtCtxIn..</text></g><g><title>0x7ff117267dec (libcublasLt.so.12.1.3.1) (42 samples, 9.19%)</title><rect x="18.8184%" y="244" width="9.1904%" height="15" fill="rgb(221,10,30)"/><text x="19.0684%" y="254.50">0x7ff117267de..</text></g><g><title>0x7ff11a1e3ae1 (libcublasLt.so.12.1.3.1) (42 samples, 9.19%)</title><rect x="18.8184%" y="260" width="9.1904%" height="15" fill="rgb(210,229,1)"/><text x="19.0684%" y="270.50">0x7ff11a1e3ae..</text></g><g><title>0x7ff11a1b9c77 (libcublasLt.so.12.1.3.1) (42 samples, 9.19%)</title><rect x="18.8184%" y="276" width="9.1904%" height="15" fill="rgb(222,148,37)"/><text x="19.0684%" y="286.50">0x7ff11a1b9c7..</text></g><g><title>0x7ff11a211389 (libcublasLt.so.12.1.3.1) (42 samples, 9.19%)</title><rect x="18.8184%" y="292" width="9.1904%" height="15" fill="rgb(234,67,33)"/><text x="19.0684%" y="302.50">0x7ff11a21138..</text></g><g><title>__pthread_once_slow (libpthread-2.31.so) (42 samples, 9.19%)</title><rect x="18.8184%" y="308" width="9.1904%" height="15" fill="rgb(247,98,35)"/><text x="19.0684%" y="318.50">__pthread_onc..</text></g><g><title>0x7ff11a1c5b14 (libcublasLt.so.12.1.3.1) (42 samples, 9.19%)</title><rect x="18.8184%" y="324" width="9.1904%" height="15" fill="rgb(247,138,52)"/><text x="19.0684%" y="334.50">0x7ff11a1c5b1..</text></g><g><title>0x7ff11a1b991e (libcublasLt.so.12.1.3.1) (42 samples, 9.19%)</title><rect x="18.8184%" y="340" width="9.1904%" height="15" fill="rgb(213,79,30)"/><text x="19.0684%" y="350.50">0x7ff11a1b991..</text></g><g><title>0x7ff11a20b5dd (libcublasLt.so.12.1.3.1) (42 samples, 9.19%)</title><rect x="18.8184%" y="356" width="9.1904%" height="15" fill="rgb(246,177,23)"/><text x="19.0684%" y="366.50">0x7ff11a20b5d..</text></g><g><title>0x7ff11a1b645c (libcublasLt.so.12.1.3.1) (42 samples, 9.19%)</title><rect x="18.8184%" y="372" width="9.1904%" height="15" fill="rgb(230,62,27)"/><text x="19.0684%" y="382.50">0x7ff11a1b645..</text></g><g><title>0x7ff1151a6c31 (libcuda.so.530.41.03) (42 samples, 9.19%)</title><rect x="18.8184%" y="388" width="9.1904%" height="15" fill="rgb(216,154,8)"/><text x="19.0684%" y="398.50">0x7ff1151a6c3..</text></g><g><title>0x7ff11514c5a7 (libcuda.so.530.41.03) (22 samples, 4.81%)</title><rect x="23.1947%" y="404" width="4.8140%" height="15" fill="rgb(244,35,45)"/><text x="23.4447%" y="414.50">0x7ff1..</text></g><g><title>0x7ff1151482cc (libcuda.so.530.41.03) (22 samples, 4.81%)</title><rect x="23.1947%" y="420" width="4.8140%" height="15" fill="rgb(251,115,12)"/><text x="23.4447%" y="430.50">0x7ff1..</text></g><g><title>0x7ff11515e754 (libcuda.so.530.41.03) (7 samples, 1.53%)</title><rect x="26.4770%" y="436" width="1.5317%" height="15" fill="rgb(240,54,50)"/><text x="26.7270%" y="446.50"></text></g><g><title>init_from_file (main.py:900) (110 samples, 24.07%)</title><rect x="4.5952%" y="84" width="24.0700%" height="15" fill="rgb(233,84,52)"/><text x="4.8452%" y="94.50">init_from_file (main.py:900)</text></g><g><title>ggml_init (ggml/ggml.py:983) (110 samples, 24.07%)</title><rect x="4.5952%" y="100" width="24.0700%" height="15" fill="rgb(207,117,47)"/><text x="4.8452%" y="110.50">ggml_init (ggml/ggml.py:983)</text></g><g><title>0x7ff15eb36ae7 (_ctypes.cpython-38-x86_64-linux-gnu.so) (110 samples, 24.07%)</title><rect x="4.5952%" y="116" width="24.0700%" height="15" fill="rgb(249,43,39)"/><text x="4.8452%" y="126.50">0x7ff15eb36ae7 (_ctypes.cpython-38-x86..</text></g><g><title>_ctypes_callproc (_ctypes.cpython-38-x86_64-linux-gnu.so) (110 samples, 24.07%)</title><rect x="4.5952%" y="132" width="24.0700%" height="15" fill="rgb(209,38,44)"/><text x="4.8452%" y="142.50">_ctypes_callproc (_ctypes.cpython-38-x..</text></g><g><title>0x7ff15eae940a (libffi.so.7.1.0) (110 samples, 24.07%)</title><rect x="4.5952%" y="148" width="24.0700%" height="15" fill="rgb(236,212,23)"/><text x="4.8452%" y="158.50">0x7ff15eae940a (libffi.so.7.1.0)</text></g><g><title>0x7ff15eae9ff5 (libffi.so.7.1.0) (110 samples, 24.07%)</title><rect x="4.5952%" y="164" width="24.0700%" height="15" fill="rgb(242,79,21)"/><text x="4.8452%" y="174.50">0x7ff15eae9ff5 (libffi.so.7.1.0)</text></g><g><title>ggml_init (ggml/libggml.so) (110 samples, 24.07%)</title><rect x="4.5952%" y="180" width="24.0700%" height="15" fill="rgb(211,96,35)"/><text x="4.8452%" y="190.50">ggml_init (ggml/libggml.so)</text></g><g><title>init_from_file (main.py:902) (7 samples, 1.53%)</title><rect x="28.6652%" y="84" width="1.5317%" height="15" fill="rgb(253,215,40)"/><text x="28.9152%" y="94.50"></text></g><g><title>init_from_file (main.py:952) (19 samples, 4.16%)</title><rect x="30.1969%" y="84" width="4.1575%" height="15" fill="rgb(211,81,21)"/><text x="30.4469%" y="94.50">init_..</text></g><g><title>read (libc-2.31.so) (19 samples, 4.16%)</title><rect x="30.1969%" y="100" width="4.1575%" height="15" fill="rgb(208,190,38)"/><text x="30.4469%" y="110.50">read ..</text></g><g><title>cudaMalloc (libcudart.so.12.1.105) (6 samples, 1.31%)</title><rect x="34.7921%" y="196" width="1.3129%" height="15" fill="rgb(235,213,38)"/><text x="35.0421%" y="206.50"></text></g><g><title>0x7ff13f621aab (libcudart.so.12.1.105) (6 samples, 1.31%)</title><rect x="34.7921%" y="212" width="1.3129%" height="15" fill="rgb(237,122,38)"/><text x="35.0421%" y="222.50"></text></g><g><title>0x7ff13f6501ae (libcudart.so.12.1.105) (6 samples, 1.31%)</title><rect x="34.7921%" y="228" width="1.3129%" height="15" fill="rgb(244,218,35)"/><text x="35.0421%" y="238.50"></text></g><g><title>0x7ff1151a9a0d (libcuda.so.530.41.03) (6 samples, 1.31%)</title><rect x="34.7921%" y="244" width="1.3129%" height="15" fill="rgb(240,68,47)"/><text x="35.0421%" y="254.50"></text></g><g><title>0x7ff11528eb1f (libcuda.so.530.41.03) (6 samples, 1.31%)</title><rect x="34.7921%" y="260" width="1.3129%" height="15" fill="rgb(210,16,53)"/><text x="35.0421%" y="270.50"></text></g><g><title>0x7ff11528d532 (libcuda.so.530.41.03) (6 samples, 1.31%)</title><rect x="34.7921%" y="276" width="1.3129%" height="15" fill="rgb(235,124,12)"/><text x="35.0421%" y="286.50"></text></g><g><title>0x7ff11528bf3b (libcuda.so.530.41.03) (6 samples, 1.31%)</title><rect x="34.7921%" y="292" width="1.3129%" height="15" fill="rgb(224,169,11)"/><text x="35.0421%" y="302.50"></text></g><g><title>0x7ff11528b876 (libcuda.so.530.41.03) (6 samples, 1.31%)</title><rect x="34.7921%" y="308" width="1.3129%" height="15" fill="rgb(250,166,2)"/><text x="35.0421%" y="318.50"></text></g><g><title>0x7ff11528a89c (libcuda.so.530.41.03) (5 samples, 1.09%)</title><rect x="35.0109%" y="324" width="1.0941%" height="15" fill="rgb(242,216,29)"/><text x="35.2609%" y="334.50"></text></g><g><title>0x7ff1152fc343 (libcuda.so.530.41.03) (5 samples, 1.09%)</title><rect x="35.0109%" y="340" width="1.0941%" height="15" fill="rgb(230,116,27)"/><text x="35.2609%" y="350.50"></text></g><g><title>0x7ff1152fb407 (libcuda.so.530.41.03) (5 samples, 1.09%)</title><rect x="35.0109%" y="356" width="1.0941%" height="15" fill="rgb(228,99,48)"/><text x="35.2609%" y="366.50"></text></g><g><title>0x7ff11517c38f (libcuda.so.530.41.03) (5 samples, 1.09%)</title><rect x="35.0109%" y="372" width="1.0941%" height="15" fill="rgb(253,11,6)"/><text x="35.2609%" y="382.50"></text></g><g><title>0x7ff1152afff2 (libcuda.so.530.41.03) (5 samples, 1.09%)</title><rect x="35.0109%" y="388" width="1.0941%" height="15" fill="rgb(247,143,39)"/><text x="35.2609%" y="398.50"></text></g><g><title>ioctl (libc-2.31.so) (5 samples, 1.09%)</title><rect x="35.0109%" y="404" width="1.0941%" height="15" fill="rgb(236,97,10)"/><text x="35.2609%" y="414.50"></text></g><g><title>0x7ff115062844 (libcuda.so.530.41.03) (10 samples, 2.19%)</title><rect x="36.3239%" y="356" width="2.1882%" height="15" fill="rgb(233,208,19)"/><text x="36.5739%" y="366.50">0..</text></g><g><title>0x7ff11506284f (libcuda.so.530.41.03) (11 samples, 2.41%)</title><rect x="38.5120%" y="356" width="2.4070%" height="15" fill="rgb(216,164,2)"/><text x="38.7620%" y="366.50">0x..</text></g><g><title>0x7ff1153ba25f (libcuda.so.530.41.03) (9 samples, 1.97%)</title><rect x="38.9497%" y="372" width="1.9694%" height="15" fill="rgb(220,129,5)"/><text x="39.1997%" y="382.50">0..</text></g><g><title>0x7ff1153b88bf (libcuda.so.530.41.03) (9 samples, 1.97%)</title><rect x="38.9497%" y="388" width="1.9694%" height="15" fill="rgb(242,17,10)"/><text x="39.1997%" y="398.50">0..</text></g><g><title>0x7ff15eb36ae7 (_ctypes.cpython-38-x86_64-linux-gnu.so) (29 samples, 6.35%)</title><rect x="34.7921%" y="116" width="6.3457%" height="15" fill="rgb(242,107,0)"/><text x="35.0421%" y="126.50">0x7ff15e..</text></g><g><title>_ctypes_callproc (_ctypes.cpython-38-x86_64-linux-gnu.so) (29 samples, 6.35%)</title><rect x="34.7921%" y="132" width="6.3457%" height="15" fill="rgb(251,28,31)"/><text x="35.0421%" y="142.50">_ctypes_..</text></g><g><title>0x7ff15eae940a (libffi.so.7.1.0) (29 samples, 6.35%)</title><rect x="34.7921%" y="148" width="6.3457%" height="15" fill="rgb(233,223,10)"/><text x="35.0421%" y="158.50">0x7ff15e..</text></g><g><title>0x7ff15eae9ff5 (libffi.so.7.1.0) (29 samples, 6.35%)</title><rect x="34.7921%" y="164" width="6.3457%" height="15" fill="rgb(215,21,27)"/><text x="35.0421%" y="174.50">0x7ff15e..</text></g><g><title>ggml_cuda_transform_tensor (ggml/libggml.so) (29 samples, 6.35%)</title><rect x="34.7921%" y="180" width="6.3457%" height="15" fill="rgb(232,23,21)"/><text x="35.0421%" y="190.50">ggml_cud..</text></g><g><title>cudaMemcpy (libcudart.so.12.1.105) (23 samples, 5.03%)</title><rect x="36.1050%" y="196" width="5.0328%" height="15" fill="rgb(244,5,23)"/><text x="36.3550%" y="206.50">cudaMe..</text></g><g><title>0x7ff13f6237a5 (libcudart.so.12.1.105) (23 samples, 5.03%)</title><rect x="36.1050%" y="212" width="5.0328%" height="15" fill="rgb(226,81,46)"/><text x="36.3550%" y="222.50">0x7ff1..</text></g><g><title>0x7ff13f650859 (libcudart.so.12.1.105) (23 samples, 5.03%)</title><rect x="36.1050%" y="228" width="5.0328%" height="15" fill="rgb(247,70,30)"/><text x="36.3550%" y="238.50">0x7ff1..</text></g><g><title>0x7ff1151f389e (libcuda.so.530.41.03) (23 samples, 5.03%)</title><rect x="36.1050%" y="244" width="5.0328%" height="15" fill="rgb(212,68,19)"/><text x="36.3550%" y="254.50">0x7ff1..</text></g><g><title>0x7ff11501dfc0 (libcuda.so.530.41.03) (23 samples, 5.03%)</title><rect x="36.1050%" y="260" width="5.0328%" height="15" fill="rgb(240,187,13)"/><text x="36.3550%" y="270.50">0x7ff1..</text></g><g><title>0x7ff1153a79a9 (libcuda.so.530.41.03) (23 samples, 5.03%)</title><rect x="36.1050%" y="276" width="5.0328%" height="15" fill="rgb(223,113,26)"/><text x="36.3550%" y="286.50">0x7ff1..</text></g><g><title>0x7ff1150224b3 (libcuda.so.530.41.03) (23 samples, 5.03%)</title><rect x="36.1050%" y="292" width="5.0328%" height="15" fill="rgb(206,192,2)"/><text x="36.3550%" y="302.50">0x7ff1..</text></g><g><title>0x7ff1153b13d5 (libcuda.so.530.41.03) (23 samples, 5.03%)</title><rect x="36.1050%" y="308" width="5.0328%" height="15" fill="rgb(241,108,4)"/><text x="36.3550%" y="318.50">0x7ff1..</text></g><g><title>0x7ff115151e45 (libcuda.so.530.41.03) (23 samples, 5.03%)</title><rect x="36.1050%" y="324" width="5.0328%" height="15" fill="rgb(247,173,49)"/><text x="36.3550%" y="334.50">0x7ff1..</text></g><g><title>0x7ff11516bf61 (libcuda.so.530.41.03) (23 samples, 5.03%)</title><rect x="36.1050%" y="340" width="5.0328%" height="15" fill="rgb(224,114,35)"/><text x="36.3550%" y="350.50">0x7ff1..</text></g><g><title>init_from_file (main.py:968) (30 samples, 6.56%)</title><rect x="34.7921%" y="84" width="6.5646%" height="15" fill="rgb(245,159,27)"/><text x="35.0421%" y="94.50">init_from..</text></g><g><title>ggml_cuda_transform_tensor (ggml/ggml.py:5215) (30 samples, 6.56%)</title><rect x="34.7921%" y="100" width="6.5646%" height="15" fill="rgb(245,172,44)"/><text x="35.0421%" y="110.50">ggml_cuda..</text></g><g><title>0x7ff11505fc36 (libcuda.so.530.41.03) (5 samples, 1.09%)</title><rect x="43.7637%" y="420" width="1.0941%" height="15" fill="rgb(236,23,11)"/><text x="44.0137%" y="430.50"></text></g><g><title>cudaDeviceSynchronize (libcudart.so.12.1.105) (17 samples, 3.72%)</title><rect x="41.7943%" y="276" width="3.7199%" height="15" fill="rgb(205,117,38)"/><text x="42.0443%" y="286.50">cuda..</text></g><g><title>0x7ff13f61cbe9 (libcudart.so.12.1.105) (17 samples, 3.72%)</title><rect x="41.7943%" y="292" width="3.7199%" height="15" fill="rgb(237,72,25)"/><text x="42.0443%" y="302.50">0x7f..</text></g><g><title>0x7ff1151a2075 (libcuda.so.530.41.03) (17 samples, 3.72%)</title><rect x="41.7943%" y="308" width="3.7199%" height="15" fill="rgb(244,70,9)"/><text x="42.0443%" y="318.50">0x7f..</text></g><g><title>0x7ff114ff7e0d (libcuda.so.530.41.03) (17 samples, 3.72%)</title><rect x="41.7943%" y="324" width="3.7199%" height="15" fill="rgb(217,125,39)"/><text x="42.0443%" y="334.50">0x7f..</text></g><g><title>0x7ff1150f126a (libcuda.so.530.41.03) (17 samples, 3.72%)</title><rect x="41.7943%" y="340" width="3.7199%" height="15" fill="rgb(235,36,10)"/><text x="42.0443%" y="350.50">0x7f..</text></g><g><title>0x7ff1150ef28a (libcuda.so.530.41.03) (17 samples, 3.72%)</title><rect x="41.7943%" y="356" width="3.7199%" height="15" fill="rgb(251,123,47)"/><text x="42.0443%" y="366.50">0x7f..</text></g><g><title>0x7ff11506284f (libcuda.so.530.41.03) (12 samples, 2.63%)</title><rect x="42.8884%" y="372" width="2.6258%" height="15" fill="rgb(221,13,13)"/><text x="43.1384%" y="382.50">0x..</text></g><g><title>0x7ff1153ba25f (libcuda.so.530.41.03) (9 samples, 1.97%)</title><rect x="43.5449%" y="388" width="1.9694%" height="15" fill="rgb(238,131,9)"/><text x="43.7949%" y="398.50">0..</text></g><g><title>0x7ff1153b88bf (libcuda.so.530.41.03) (9 samples, 1.97%)</title><rect x="43.5449%" y="404" width="1.9694%" height="15" fill="rgb(211,50,8)"/><text x="43.7949%" y="414.50">0..</text></g><g><title>0x7ff15eb36ae7 (_ctypes.cpython-38-x86_64-linux-gnu.so) (21 samples, 4.60%)</title><rect x="41.3567%" y="148" width="4.5952%" height="15" fill="rgb(245,182,24)"/><text x="41.6067%" y="158.50">0x7ff..</text></g><g><title>_ctypes_callproc (_ctypes.cpython-38-x86_64-linux-gnu.so) (21 samples, 4.60%)</title><rect x="41.3567%" y="164" width="4.5952%" height="15" fill="rgb(242,14,37)"/><text x="41.6067%" y="174.50">_ctyp..</text></g><g><title>0x7ff15eae940a (libffi.so.7.1.0) (21 samples, 4.60%)</title><rect x="41.3567%" y="180" width="4.5952%" height="15" fill="rgb(246,228,12)"/><text x="41.6067%" y="190.50">0x7ff..</text></g><g><title>0x7ff15eae9ff5 (libffi.so.7.1.0) (21 samples, 4.60%)</title><rect x="41.3567%" y="196" width="4.5952%" height="15" fill="rgb(213,55,15)"/><text x="41.6067%" y="206.50">0x7ff..</text></g><g><title>ggml_graph_compute (ggml/libggml.so) (21 samples, 4.60%)</title><rect x="41.3567%" y="212" width="4.5952%" height="15" fill="rgb(209,9,3)"/><text x="41.6067%" y="222.50">ggml_..</text></g><g><title>ggml_graph_compute_thread (ggml/libggml.so) (21 samples, 4.60%)</title><rect x="41.3567%" y="228" width="4.5952%" height="15" fill="rgb(230,59,30)"/><text x="41.6067%" y="238.50">ggml_..</text></g><g><title>ggml_cuda_compute_forward (ggml/libggml.so) (21 samples, 4.60%)</title><rect x="41.3567%" y="244" width="4.5952%" height="15" fill="rgb(209,121,21)"/><text x="41.6067%" y="254.50">ggml_..</text></g><g><title>ggml_cuda_op (ggml/libggml.so) (21 samples, 4.60%)</title><rect x="41.3567%" y="260" width="4.5952%" height="15" fill="rgb(220,109,13)"/><text x="41.6067%" y="270.50">ggml_..</text></g><g><title>eval (main.py:776) (22 samples, 4.81%)</title><rect x="41.3567%" y="100" width="4.8140%" height="15" fill="rgb(232,18,1)"/><text x="41.6067%" y="110.50">eval (..</text></g><g><title>_eval_internal (main.py:762) (22 samples, 4.81%)</title><rect x="41.3567%" y="116" width="4.8140%" height="15" fill="rgb(215,41,42)"/><text x="41.6067%" y="126.50">_eval_..</text></g><g><title>ggml_graph_compute (ggml/ggml.py:4433) (22 samples, 4.81%)</title><rect x="41.3567%" y="132" width="4.8140%" height="15" fill="rgb(224,123,36)"/><text x="41.6067%" y="142.50">ggml_g..</text></g><g><title>0x7ff11506284f (libcuda.so.530.41.03) (8 samples, 1.75%)</title><rect x="47.0460%" y="372" width="1.7505%" height="15" fill="rgb(240,125,3)"/><text x="47.2960%" y="382.50"></text></g><g><title>0x7ff1153ba25f (libcuda.so.530.41.03) (8 samples, 1.75%)</title><rect x="47.0460%" y="388" width="1.7505%" height="15" fill="rgb(205,98,50)"/><text x="47.2960%" y="398.50"></text></g><g><title>0x7ff1153b88bf (libcuda.so.530.41.03) (8 samples, 1.75%)</title><rect x="47.0460%" y="404" width="1.7505%" height="15" fill="rgb(205,185,37)"/><text x="47.2960%" y="414.50"></text></g><g><title>cudaDeviceSynchronize (libcudart.so.12.1.105) (10 samples, 2.19%)</title><rect x="47.0460%" y="276" width="2.1882%" height="15" fill="rgb(238,207,15)"/><text x="47.2960%" y="286.50">c..</text></g><g><title>0x7ff13f61cbe9 (libcudart.so.12.1.105) (10 samples, 2.19%)</title><rect x="47.0460%" y="292" width="2.1882%" height="15" fill="rgb(213,199,42)"/><text x="47.2960%" y="302.50">0..</text></g><g><title>0x7ff1151a2075 (libcuda.so.530.41.03) (10 samples, 2.19%)</title><rect x="47.0460%" y="308" width="2.1882%" height="15" fill="rgb(235,201,11)"/><text x="47.2960%" y="318.50">0..</text></g><g><title>0x7ff114ff7e0d (libcuda.so.530.41.03) (10 samples, 2.19%)</title><rect x="47.0460%" y="324" width="2.1882%" height="15" fill="rgb(207,46,11)"/><text x="47.2960%" y="334.50">0..</text></g><g><title>0x7ff1150f126a (libcuda.so.530.41.03) (10 samples, 2.19%)</title><rect x="47.0460%" y="340" width="2.1882%" height="15" fill="rgb(241,35,35)"/><text x="47.2960%" y="350.50">0..</text></g><g><title>0x7ff1150ef28a (libcuda.so.530.41.03) (10 samples, 2.19%)</title><rect x="47.0460%" y="356" width="2.1882%" height="15" fill="rgb(243,32,47)"/><text x="47.2960%" y="366.50">0..</text></g><g><title>ggml_cuda_compute_forward (ggml/libggml.so) (14 samples, 3.06%)</title><rect x="46.8271%" y="244" width="3.0635%" height="15" fill="rgb(247,202,23)"/><text x="47.0771%" y="254.50">ggm..</text></g><g><title>ggml_cuda_op (ggml/libggml.so) (14 samples, 3.06%)</title><rect x="46.8271%" y="260" width="3.0635%" height="15" fill="rgb(219,102,11)"/><text x="47.0771%" y="270.50">ggm..</text></g><g><title>&lt;module&gt; (main.py:1050) (229 samples, 50.11%)</title><rect x="0.0000%" y="68" width="50.1094%" height="15" fill="rgb(243,110,44)"/><text x="0.2500%" y="78.50">&lt;module&gt; (main.py:1050)</text></g><g><title>init_from_file (main.py:989) (40 samples, 8.75%)</title><rect x="41.3567%" y="84" width="8.7527%" height="15" fill="rgb(222,74,54)"/><text x="41.6067%" y="94.50">init_from_fi..</text></g><g><title>eval (main.py:781) (18 samples, 3.94%)</title><rect x="46.1707%" y="100" width="3.9387%" height="15" fill="rgb(216,99,12)"/><text x="46.4207%" y="110.50">eval..</text></g><g><title>_eval_internal (main.py:762) (18 samples, 3.94%)</title><rect x="46.1707%" y="116" width="3.9387%" height="15" fill="rgb(226,22,26)"/><text x="46.4207%" y="126.50">_eva..</text></g><g><title>ggml_graph_compute (ggml/ggml.py:4433) (18 samples, 3.94%)</title><rect x="46.1707%" y="132" width="3.9387%" height="15" fill="rgb(217,163,10)"/><text x="46.4207%" y="142.50">ggml..</text></g><g><title>0x7ff15eb36ae7 (_ctypes.cpython-38-x86_64-linux-gnu.so) (18 samples, 3.94%)</title><rect x="46.1707%" y="148" width="3.9387%" height="15" fill="rgb(213,25,53)"/><text x="46.4207%" y="158.50">0x7f..</text></g><g><title>_ctypes_callproc (_ctypes.cpython-38-x86_64-linux-gnu.so) (18 samples, 3.94%)</title><rect x="46.1707%" y="164" width="3.9387%" height="15" fill="rgb(252,105,26)"/><text x="46.4207%" y="174.50">_cty..</text></g><g><title>0x7ff15eae940a (libffi.so.7.1.0) (18 samples, 3.94%)</title><rect x="46.1707%" y="180" width="3.9387%" height="15" fill="rgb(220,39,43)"/><text x="46.4207%" y="190.50">0x7f..</text></g><g><title>0x7ff15eae9ff5 (libffi.so.7.1.0) (18 samples, 3.94%)</title><rect x="46.1707%" y="196" width="3.9387%" height="15" fill="rgb(229,68,48)"/><text x="46.4207%" y="206.50">0x7f..</text></g><g><title>ggml_graph_compute (ggml/libggml.so) (18 samples, 3.94%)</title><rect x="46.1707%" y="212" width="3.9387%" height="15" fill="rgb(252,8,32)"/><text x="46.4207%" y="222.50">ggml..</text></g><g><title>ggml_graph_compute_thread (ggml/libggml.so) (18 samples, 3.94%)</title><rect x="46.1707%" y="228" width="3.9387%" height="15" fill="rgb(223,20,43)"/><text x="46.4207%" y="238.50">ggml..</text></g><g><title>_build_forward (main.py:472) (5 samples, 1.09%)</title><rect x="53.1729%" y="116" width="1.0941%" height="15" fill="rgb(229,81,49)"/><text x="53.4229%" y="126.50"></text></g><g><title>ggml_build_forward_expand (ggml/ggml.py:4379) (5 samples, 1.09%)</title><rect x="53.1729%" y="132" width="1.0941%" height="15" fill="rgb(236,28,36)"/><text x="53.4229%" y="142.50"></text></g><g><title>_eval_internal (main.py:756) (32 samples, 7.00%)</title><rect x="50.7659%" y="100" width="7.0022%" height="15" fill="rgb(249,185,26)"/><text x="51.0159%" y="110.50">_eval_int..</text></g><g><title>ggml_compute_forward.part.0 (ggml/libggml.so) (7 samples, 1.53%)</title><rect x="57.7681%" y="228" width="1.5317%" height="15" fill="rgb(249,174,33)"/><text x="58.0181%" y="238.50"></text></g><g><title>ggml_compute_forward_mul_mat_f16_f32 (ggml/libggml.so) (5 samples, 1.09%)</title><rect x="60.3939%" y="228" width="1.0941%" height="15" fill="rgb(233,201,37)"/><text x="60.6439%" y="238.50"></text></g><g><title>0x7ff115015e1d (libcuda.so.530.41.03) (5 samples, 1.09%)</title><rect x="63.4573%" y="340" width="1.0941%" height="15" fill="rgb(221,78,26)"/><text x="63.7073%" y="350.50"></text></g><g><title>0x7ff1150156f3 (libcuda.so.530.41.03) (5 samples, 1.09%)</title><rect x="63.4573%" y="356" width="1.0941%" height="15" fill="rgb(250,127,30)"/><text x="63.7073%" y="366.50"></text></g><g><title>convert_fp16_to_fp32_cuda (ggml/libggml.so) (9 samples, 1.97%)</title><rect x="62.8009%" y="260" width="1.9694%" height="15" fill="rgb(230,49,44)"/><text x="63.0509%" y="270.50">c..</text></g><g><title>cudaLaunchKernel (libcudart.so.12.1.105) (9 samples, 1.97%)</title><rect x="62.8009%" y="276" width="1.9694%" height="15" fill="rgb(229,67,23)"/><text x="63.0509%" y="286.50">c..</text></g><g><title>0x7ff13f62098c (libcudart.so.12.1.105) (6 samples, 1.31%)</title><rect x="63.4573%" y="292" width="1.3129%" height="15" fill="rgb(249,83,47)"/><text x="63.7073%" y="302.50"></text></g><g><title>0x7ff1151fb36e (libcuda.so.530.41.03) (6 samples, 1.31%)</title><rect x="63.4573%" y="308" width="1.3129%" height="15" fill="rgb(215,43,3)"/><text x="63.7073%" y="318.50"></text></g><g><title>0x7ff11501871a (libcuda.so.530.41.03) (6 samples, 1.31%)</title><rect x="63.4573%" y="324" width="1.3129%" height="15" fill="rgb(238,154,13)"/><text x="63.7073%" y="334.50"></text></g><g><title>0x7ff115062844 (libcuda.so.530.41.03) (13 samples, 2.84%)</title><rect x="64.9891%" y="356" width="2.8446%" height="15" fill="rgb(219,56,2)"/><text x="65.2391%" y="366.50">0x..</text></g><g><title>0x7ff115062847 (libcuda.so.530.41.03) (5 samples, 1.09%)</title><rect x="67.8337%" y="356" width="1.0941%" height="15" fill="rgb(233,0,4)"/><text x="68.0837%" y="366.50"></text></g><g><title>0x7ff11505fc36 (libcuda.so.530.41.03) (16 samples, 3.50%)</title><rect x="71.3348%" y="404" width="3.5011%" height="15" fill="rgb(235,30,7)"/><text x="71.5848%" y="414.50">0x7..</text></g><g><title>0x7ff11505fd7e (libcuda.so.530.41.03) (15 samples, 3.28%)</title><rect x="75.9300%" y="404" width="3.2823%" height="15" fill="rgb(250,79,13)"/><text x="76.1800%" y="414.50">0x7..</text></g><g><title>0x7ff11506284f (libcuda.so.530.41.03) (57 samples, 12.47%)</title><rect x="68.9278%" y="356" width="12.4726%" height="15" fill="rgb(211,146,34)"/><text x="69.1778%" y="366.50">0x7ff11506284f (lib..</text></g><g><title>0x7ff1153ba25f (libcuda.so.530.41.03) (51 samples, 11.16%)</title><rect x="70.2407%" y="372" width="11.1597%" height="15" fill="rgb(228,22,38)"/><text x="70.4907%" y="382.50">0x7ff1153ba25f (..</text></g><g><title>0x7ff1153b88bf (libcuda.so.530.41.03) (51 samples, 11.16%)</title><rect x="70.2407%" y="388" width="11.1597%" height="15" fill="rgb(235,168,5)"/><text x="70.4907%" y="398.50">0x7ff1153b88bf (..</text></g><g><title>0x7ff11505fde6 (libcuda.so.530.41.03) (7 samples, 1.53%)</title><rect x="79.8687%" y="404" width="1.5317%" height="15" fill="rgb(221,155,16)"/><text x="80.1187%" y="414.50"></text></g><g><title>0x7ff1150f126a (libcuda.so.530.41.03) (78 samples, 17.07%)</title><rect x="64.7702%" y="324" width="17.0678%" height="15" fill="rgb(215,215,53)"/><text x="65.0202%" y="334.50">0x7ff1150f126a (libcuda.so..</text></g><g><title>0x7ff1150ef28a (libcuda.so.530.41.03) (78 samples, 17.07%)</title><rect x="64.7702%" y="340" width="17.0678%" height="15" fill="rgb(223,4,10)"/><text x="65.0202%" y="350.50">0x7ff1150ef28a (libcuda.so..</text></g><g><title>cudaDeviceSynchronize (libcudart.so.12.1.105) (79 samples, 17.29%)</title><rect x="64.7702%" y="260" width="17.2867%" height="15" fill="rgb(234,103,6)"/><text x="65.0202%" y="270.50">cudaDeviceSynchronize (libc..</text></g><g><title>0x7ff13f61cbe9 (libcudart.so.12.1.105) (79 samples, 17.29%)</title><rect x="64.7702%" y="276" width="17.2867%" height="15" fill="rgb(227,97,0)"/><text x="65.0202%" y="286.50">0x7ff13f61cbe9 (libcudart.s..</text></g><g><title>0x7ff1151a2075 (libcuda.so.530.41.03) (79 samples, 17.29%)</title><rect x="64.7702%" y="292" width="17.2867%" height="15" fill="rgb(234,150,53)"/><text x="65.0202%" y="302.50">0x7ff1151a2075 (libcuda.so...</text></g><g><title>0x7ff114ff7e0d (libcuda.so.530.41.03) (79 samples, 17.29%)</title><rect x="64.7702%" y="308" width="17.2867%" height="15" fill="rgb(228,201,54)"/><text x="65.0202%" y="318.50">0x7ff114ff7e0d (libcuda.so...</text></g><g><title>0x7ff1153b24a5 (libcuda.so.530.41.03) (8 samples, 1.75%)</title><rect x="83.3698%" y="388" width="1.7505%" height="15" fill="rgb(222,22,37)"/><text x="83.6198%" y="398.50"></text></g><g><title>0x7ff1151511b2 (libcuda.so.530.41.03) (5 samples, 1.09%)</title><rect x="84.0263%" y="404" width="1.0941%" height="15" fill="rgb(237,53,32)"/><text x="84.2763%" y="414.50"></text></g><g><title>0x7ff1153b866d (libcuda.so.530.41.03) (5 samples, 1.09%)</title><rect x="84.0263%" y="420" width="1.0941%" height="15" fill="rgb(233,25,53)"/><text x="84.2763%" y="430.50"></text></g><g><title>0x7ff1150224b3 (libcuda.so.530.41.03) (12 samples, 2.63%)</title><rect x="82.7133%" y="372" width="2.6258%" height="15" fill="rgb(210,40,34)"/><text x="82.9633%" y="382.50">0x..</text></g><g><title>0x7ff115029fa2 (libcuda.so.530.41.03) (14 samples, 3.06%)</title><rect x="82.4945%" y="340" width="3.0635%" height="15" fill="rgb(241,220,44)"/><text x="82.7445%" y="350.50">0x7..</text></g><g><title>0x7ff115022941 (libcuda.so.530.41.03) (14 samples, 3.06%)</title><rect x="82.4945%" y="356" width="3.0635%" height="15" fill="rgb(235,28,35)"/><text x="82.7445%" y="366.50">0x7..</text></g><g><title>cudaMemcpy2DAsync (libcudart.so.12.1.105) (21 samples, 4.60%)</title><rect x="82.0569%" y="276" width="4.5952%" height="15" fill="rgb(210,56,17)"/><text x="82.3069%" y="286.50">cudaM..</text></g><g><title>0x7ff13f624821 (libcudart.so.12.1.105) (20 samples, 4.38%)</title><rect x="82.2757%" y="292" width="4.3764%" height="15" fill="rgb(224,130,29)"/><text x="82.5257%" y="302.50">0x7ff..</text></g><g><title>0x7ff13f6500e9 (libcudart.so.12.1.105) (19 samples, 4.16%)</title><rect x="82.4945%" y="308" width="4.1575%" height="15" fill="rgb(235,212,8)"/><text x="82.7445%" y="318.50">0x7ff..</text></g><g><title>0x7ff1151f6ad3 (libcuda.so.530.41.03) (19 samples, 4.16%)</title><rect x="82.4945%" y="324" width="4.1575%" height="15" fill="rgb(223,33,50)"/><text x="82.7445%" y="334.50">0x7ff..</text></g><g><title>ggml_cuda_cpy_tensor_2d (ggml/libggml.so) (26 samples, 5.69%)</title><rect x="82.0569%" y="260" width="5.6893%" height="15" fill="rgb(219,149,13)"/><text x="82.3069%" y="270.50">ggml_cu..</text></g><g><title>cudaMemcpyAsync (libcudart.so.12.1.105) (5 samples, 1.09%)</title><rect x="86.6521%" y="276" width="1.0941%" height="15" fill="rgb(250,156,29)"/><text x="86.9021%" y="286.50"></text></g><g><title>0x7ff13f6238ad (libcudart.so.12.1.105) (5 samples, 1.09%)</title><rect x="86.6521%" y="292" width="1.0941%" height="15" fill="rgb(216,193,19)"/><text x="86.9021%" y="302.50"></text></g><g><title>0x7ff13f6509c9 (libcudart.so.12.1.105) (5 samples, 1.09%)</title><rect x="86.6521%" y="308" width="1.0941%" height="15" fill="rgb(216,135,14)"/><text x="86.9021%" y="318.50"></text></g><g><title>0x7ff1151f6461 (libcuda.so.530.41.03) (5 samples, 1.09%)</title><rect x="86.6521%" y="324" width="1.0941%" height="15" fill="rgb(241,47,5)"/><text x="86.9021%" y="334.50"></text></g><g><title>0x7ff1150233e8 (libcuda.so.530.41.03) (5 samples, 1.09%)</title><rect x="86.6521%" y="340" width="1.0941%" height="15" fill="rgb(233,42,35)"/><text x="86.9021%" y="350.50"></text></g><g><title>0x7ff115022941 (libcuda.so.530.41.03) (5 samples, 1.09%)</title><rect x="86.6521%" y="356" width="1.0941%" height="15" fill="rgb(231,13,6)"/><text x="86.9021%" y="366.50"></text></g><g><title>0x7ff117382428 (libcublasLt.so.12.1.3.1) (5 samples, 1.09%)</title><rect x="89.4967%" y="356" width="1.0941%" height="15" fill="rgb(207,181,40)"/><text x="89.7467%" y="366.50"></text></g><g><title>0x7ff1395e90e6 (libcublas.so.12.1.3.1) (10 samples, 2.19%)</title><rect x="88.8403%" y="324" width="2.1882%" height="15" fill="rgb(254,173,49)"/><text x="89.0903%" y="334.50">0..</text></g><g><title>cublasLtSSSMatmul (libcublasLt.so.12.1.3.1) (10 samples, 2.19%)</title><rect x="88.8403%" y="340" width="2.1882%" height="15" fill="rgb(221,1,38)"/><text x="89.0903%" y="350.50">c..</text></g><g><title>ggml_cuda_op_mul_mat_cublas (ggml/libggml.so) (17 samples, 3.72%)</title><rect x="88.4026%" y="260" width="3.7199%" height="15" fill="rgb(206,124,46)"/><text x="88.6526%" y="270.50">ggml..</text></g><g><title>cublasSgemm_v2 (libcublas.so.12.1.3.1) (16 samples, 3.50%)</title><rect x="88.6214%" y="276" width="3.5011%" height="15" fill="rgb(249,21,11)"/><text x="88.8714%" y="286.50">cub..</text></g><g><title>0x7ff1396db424 (libcublas.so.12.1.3.1) (16 samples, 3.50%)</title><rect x="88.6214%" y="292" width="3.5011%" height="15" fill="rgb(222,201,40)"/><text x="88.8714%" y="302.50">0x7..</text></g><g><title>0x7ff1395eb662 (libcublas.so.12.1.3.1) (16 samples, 3.50%)</title><rect x="88.6214%" y="308" width="3.5011%" height="15" fill="rgb(235,61,29)"/><text x="88.8714%" y="318.50">0x7..</text></g><g><title>0x7ff1395e942c (libcublas.so.12.1.3.1) (5 samples, 1.09%)</title><rect x="91.0284%" y="324" width="1.0941%" height="15" fill="rgb(219,207,3)"/><text x="91.2784%" y="334.50"></text></g><g><title>0x7ff1395e897a (libcublas.so.12.1.3.1) (5 samples, 1.09%)</title><rect x="91.0284%" y="340" width="1.0941%" height="15" fill="rgb(222,56,46)"/><text x="91.2784%" y="350.50"></text></g><g><title>cublasLtSSSMatmulAlgoGetHeuristic (libcublasLt.so.12.1.3.1) (5 samples, 1.09%)</title><rect x="91.0284%" y="356" width="1.0941%" height="15" fill="rgb(239,76,54)"/><text x="91.2784%" y="366.50"></text></g><g><title>ggml_cuda_compute_forward (ggml/libggml.so) (138 samples, 30.20%)</title><rect x="62.1444%" y="228" width="30.1969%" height="15" fill="rgb(231,124,27)"/><text x="62.3944%" y="238.50">ggml_cuda_compute_forward (ggml/libggml.so)</text></g><g><title>ggml_cuda_op (ggml/libggml.so) (137 samples, 29.98%)</title><rect x="62.3632%" y="244" width="29.9781%" height="15" fill="rgb(249,195,6)"/><text x="62.6132%" y="254.50">ggml_cuda_op (ggml/libggml.so)</text></g><g><title>0x7ff15eb36ae7 (_ctypes.cpython-38-x86_64-linux-gnu.so) (160 samples, 35.01%)</title><rect x="57.7681%" y="132" width="35.0109%" height="15" fill="rgb(237,174,47)"/><text x="58.0181%" y="142.50">0x7ff15eb36ae7 (_ctypes.cpython-38-x86_64-linux-gnu.so)</text></g><g><title>_ctypes_callproc (_ctypes.cpython-38-x86_64-linux-gnu.so) (160 samples, 35.01%)</title><rect x="57.7681%" y="148" width="35.0109%" height="15" fill="rgb(206,201,31)"/><text x="58.0181%" y="158.50">_ctypes_callproc (_ctypes.cpython-38-x86_64-linux-gnu.so)</text></g><g><title>0x7ff15eae940a (libffi.so.7.1.0) (160 samples, 35.01%)</title><rect x="57.7681%" y="164" width="35.0109%" height="15" fill="rgb(231,57,52)"/><text x="58.0181%" y="174.50">0x7ff15eae940a (libffi.so.7.1.0)</text></g><g><title>0x7ff15eae9ff5 (libffi.so.7.1.0) (160 samples, 35.01%)</title><rect x="57.7681%" y="180" width="35.0109%" height="15" fill="rgb(248,177,22)"/><text x="58.0181%" y="190.50">0x7ff15eae9ff5 (libffi.so.7.1.0)</text></g><g><title>ggml_graph_compute (ggml/libggml.so) (160 samples, 35.01%)</title><rect x="57.7681%" y="196" width="35.0109%" height="15" fill="rgb(215,211,37)"/><text x="58.0181%" y="206.50">ggml_graph_compute (ggml/libggml.so)</text></g><g><title>ggml_graph_compute_thread (ggml/libggml.so) (160 samples, 35.01%)</title><rect x="57.7681%" y="212" width="35.0109%" height="15" fill="rgb(241,128,51)"/><text x="58.0181%" y="222.50">ggml_graph_compute_thread (ggml/libggml.so)</text></g><g><title>_eval_internal (main.py:762) (165 samples, 36.11%)</title><rect x="57.7681%" y="100" width="36.1050%" height="15" fill="rgb(227,165,31)"/><text x="58.0181%" y="110.50">_eval_internal (main.py:762)</text></g><g><title>ggml_graph_compute (ggml/ggml.py:4433) (165 samples, 36.11%)</title><rect x="57.7681%" y="116" width="36.1050%" height="15" fill="rgb(228,167,24)"/><text x="58.0181%" y="126.50">ggml_graph_compute (ggml/ggml.py:4433)</text></g><g><title>&lt;module&gt; (main.py:1068) (198 samples, 43.33%)</title><rect x="50.7659%" y="68" width="43.3260%" height="15" fill="rgb(228,143,12)"/><text x="51.0159%" y="78.50">&lt;module&gt; (main.py:1068)</text></g><g><title>eval (main.py:781) (198 samples, 43.33%)</title><rect x="50.7659%" y="84" width="43.3260%" height="15" fill="rgb(249,149,8)"/><text x="51.0159%" y="94.50">eval (main.py:781)</text></g><g><title>&lt;module&gt; (main.py:20) (5 samples, 1.09%)</title><rect x="94.0919%" y="68" width="1.0941%" height="15" fill="rgb(243,35,44)"/><text x="94.3419%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (5 samples, 1.09%)</title><rect x="94.0919%" y="84" width="1.0941%" height="15" fill="rgb(246,89,9)"/><text x="94.3419%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (5 samples, 1.09%)</title><rect x="94.0919%" y="100" width="1.0941%" height="15" fill="rgb(233,213,13)"/><text x="94.3419%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (5 samples, 1.09%)</title><rect x="94.0919%" y="116" width="1.0941%" height="15" fill="rgb(233,141,41)"/><text x="94.3419%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:848) (5 samples, 1.09%)</title><rect x="94.0919%" y="132" width="1.0941%" height="15" fill="rgb(239,167,4)"/><text x="94.3419%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.09%)</title><rect x="94.0919%" y="148" width="1.0941%" height="15" fill="rgb(209,217,16)"/><text x="94.3419%" y="158.50"></text></g><g><title>&lt;module&gt; (main.py:23) (8 samples, 1.75%)</title><rect x="95.4048%" y="68" width="1.7505%" height="15" fill="rgb(219,88,35)"/><text x="95.6548%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (8 samples, 1.75%)</title><rect x="95.4048%" y="84" width="1.7505%" height="15" fill="rgb(220,193,23)"/><text x="95.6548%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (8 samples, 1.75%)</title><rect x="95.4048%" y="100" width="1.7505%" height="15" fill="rgb(230,90,52)"/><text x="95.6548%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (8 samples, 1.75%)</title><rect x="95.4048%" y="116" width="1.7505%" height="15" fill="rgb(252,106,19)"/><text x="95.6548%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:848) (8 samples, 1.75%)</title><rect x="95.4048%" y="132" width="1.7505%" height="15" fill="rgb(206,74,20)"/><text x="95.6548%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.75%)</title><rect x="95.4048%" y="148" width="1.7505%" height="15" fill="rgb(230,138,44)"/><text x="95.6548%" y="158.50"></text></g><g><title>&lt;module&gt; (ggml/__init__.py:1) (8 samples, 1.75%)</title><rect x="95.4048%" y="164" width="1.7505%" height="15" fill="rgb(235,182,43)"/><text x="95.6548%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (8 samples, 1.75%)</title><rect x="95.4048%" y="180" width="1.7505%" height="15" fill="rgb(242,16,51)"/><text x="95.6548%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (8 samples, 1.75%)</title><rect x="95.4048%" y="196" width="1.7505%" height="15" fill="rgb(248,9,4)"/><text x="95.6548%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (8 samples, 1.75%)</title><rect x="95.4048%" y="212" width="1.7505%" height="15" fill="rgb(210,31,22)"/><text x="95.6548%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:848) (8 samples, 1.75%)</title><rect x="95.4048%" y="228" width="1.7505%" height="15" fill="rgb(239,54,39)"/><text x="95.6548%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.75%)</title><rect x="95.4048%" y="244" width="1.7505%" height="15" fill="rgb(230,99,41)"/><text x="95.6548%" y="254.50"></text></g><g><title>&lt;module&gt; (ggml/ggml.py:104) (8 samples, 1.75%)</title><rect x="95.4048%" y="260" width="1.7505%" height="15" fill="rgb(253,106,12)"/><text x="95.6548%" y="270.50"></text></g><g><title>load_shared_library (ggml/ggml.py:97) (8 samples, 1.75%)</title><rect x="95.4048%" y="276" width="1.7505%" height="15" fill="rgb(213,46,41)"/><text x="95.6548%" y="286.50"></text></g><g><title>__init__ (ctypes/__init__.py:373) (8 samples, 1.75%)</title><rect x="95.4048%" y="292" width="1.7505%" height="15" fill="rgb(215,133,35)"/><text x="95.6548%" y="302.50"></text></g><g><title>0x7ff15eb38ac1 (_ctypes.cpython-38-x86_64-linux-gnu.so) (8 samples, 1.75%)</title><rect x="95.4048%" y="308" width="1.7505%" height="15" fill="rgb(213,28,5)"/><text x="95.6548%" y="318.50"></text></g><g><title>dlopen (libdl-2.31.so) (8 samples, 1.75%)</title><rect x="95.4048%" y="324" width="1.7505%" height="15" fill="rgb(215,77,49)"/><text x="95.6548%" y="334.50"></text></g><g><title>0x7ff15f51ab59 (libdl-2.31.so) (8 samples, 1.75%)</title><rect x="95.4048%" y="340" width="1.7505%" height="15" fill="rgb(248,100,22)"/><text x="95.6548%" y="350.50"></text></g><g><title>_dl_catch_error (libc-2.31.so) (8 samples, 1.75%)</title><rect x="95.4048%" y="356" width="1.7505%" height="15" fill="rgb(208,67,9)"/><text x="95.6548%" y="366.50"></text></g><g><title>_dl_catch_exception (libc-2.31.so) (8 samples, 1.75%)</title><rect x="95.4048%" y="372" width="1.7505%" height="15" fill="rgb(219,133,21)"/><text x="95.6548%" y="382.50"></text></g><g><title>0x7ff15f51a34c (libdl-2.31.so) (8 samples, 1.75%)</title><rect x="95.4048%" y="388" width="1.7505%" height="15" fill="rgb(246,46,29)"/><text x="95.6548%" y="398.50"></text></g><g><title>0x7ff15f77f60a (ld-2.31.so) (8 samples, 1.75%)</title><rect x="95.4048%" y="404" width="1.7505%" height="15" fill="rgb(246,185,52)"/><text x="95.6548%" y="414.50"></text></g><g><title>_dl_catch_exception (libc-2.31.so) (8 samples, 1.75%)</title><rect x="95.4048%" y="420" width="1.7505%" height="15" fill="rgb(252,136,11)"/><text x="95.6548%" y="430.50"></text></g><g><title>0x7ff15f7800cf (ld-2.31.so) (8 samples, 1.75%)</title><rect x="95.4048%" y="436" width="1.7505%" height="15" fill="rgb(219,138,53)"/><text x="95.6548%" y="446.50"></text></g><g><title>_dl_catch_exception (libc-2.31.so) (8 samples, 1.75%)</title><rect x="95.4048%" y="452" width="1.7505%" height="15" fill="rgb(211,51,23)"/><text x="95.6548%" y="462.50"></text></g><g><title>0x7ff15f77bca1 (ld-2.31.so) (8 samples, 1.75%)</title><rect x="95.4048%" y="468" width="1.7505%" height="15" fill="rgb(247,221,28)"/><text x="95.6548%" y="478.50"></text></g><g><title>0x7ff15f77bb9a (ld-2.31.so) (8 samples, 1.75%)</title><rect x="95.4048%" y="484" width="1.7505%" height="15" fill="rgb(251,222,45)"/><text x="95.6548%" y="494.50"></text></g><g><title>munmap (libc-2.31.so) (5 samples, 1.09%)</title><rect x="98.6871%" y="68" width="1.0941%" height="15" fill="rgb(217,162,53)"/><text x="98.9371%" y="78.50"></text></g><g><title>all (457 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(229,93,14)"/><text x="0.2500%" y="62.50"></text></g></svg></svg>