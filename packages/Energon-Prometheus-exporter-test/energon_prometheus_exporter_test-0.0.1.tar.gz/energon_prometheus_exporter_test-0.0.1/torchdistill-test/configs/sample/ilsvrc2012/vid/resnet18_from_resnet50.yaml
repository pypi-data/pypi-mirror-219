datasets:
  &imagenet_train ilsvrc2012/train: !import_call
    _name: &dataset_name 'ilsvrc2012'
    _root: &root_dir !join ['~/datasets/', *dataset_name]
    key: 'torchvision.datasets.ImageFolder'
    init:
      kwargs:
        root: !join [*root_dir, '/train']
        transform: !import_call
          key: 'torchvision.transforms.Compose'
          init:
            kwargs:
              transforms:
                - !import_call
                  key: 'torchvision.transforms.RandomResizedCrop'
                  init:
                    kwargs:
                      size: &input_size [224, 224]
                - !import_call
                  key: 'torchvision.transforms.RandomHorizontalFlip'
                  init:
                    kwargs:
                      p: 0.5
                - !import_call
                  key: 'torchvision.transforms.ToTensor'
                  init:
                - !import_call
                  key: 'torchvision.transforms.Normalize'
                  init:
                    kwargs: &normalize_kwargs
                      mean: [0.485, 0.456, 0.406]
                      std: [0.229, 0.224, 0.225]
  &imagenet_val ilsvrc2012/val: !import_call
    key: 'torchvision.datasets.ImageFolder'
    init:
      kwargs:
        root: !join [*root_dir, '/val']
        transform: !import_call
          key: 'torchvision.transforms.Compose'
          init:
            kwargs:
              transforms:
                - !import_call
                  key: 'torchvision.transforms.Resize'
                  init:
                    kwargs:
                      size: 256
                - !import_call
                  key: 'torchvision.transforms.CenterCrop'
                  init:
                    kwargs:
                      size: *input_size
                - !import_call
                  key: 'torchvision.transforms.ToTensor'
                  init:
                - !import_call
                  key: 'torchvision.transforms.Normalize'
                  init:
                    kwargs: *normalize_kwargs

models:
  teacher_model:
    key: &teacher_model_key 'resnet50'
    _weights: &teacher_weights !import_get
      key: 'torchvision.models.resnet.ResNet50_Weights'
    kwargs:
      num_classes: 1000
      weights: !getattr [*teacher_weights, 'IMAGENET1K_V1']
    src_ckpt:
  student_model:
    key: &student_model_key 'resnet18'
    kwargs:
      num_classes: 1000
    _experiment: &student_experiment !join [*dataset_name, '-', *student_model_key, '_from_', *teacher_model_key]
    src_ckpt:
    dst_ckpt: !join ['./resource/ckpt/ilsvrc2012/vid/', *student_experiment, '.pt']

train:
  log_freq: 1000
  num_epochs: 20
  train_data_loader:
    dataset_id: *imagenet_train
    sampler:
      class_or_func: !import_get
        key: 'torch.utils.data.RandomSampler'
      kwargs:
    kwargs:
      batch_size: 32
      num_workers: 16
      pin_memory: True
      drop_last: False
    cache_output:
  val_data_loader:
    dataset_id: *imagenet_val
    sampler: &val_sampler
      class_or_func: !import_get
        key: 'torch.utils.data.SequentialSampler'
      kwargs:
    kwargs:
      batch_size: 32
      num_workers: 16
      pin_memory: True
      drop_last: False
  teacher:
    sequential: []
    forward_hook:
      input: []
      output: ['layer1', 'layer2', 'layer3', 'layer4']
    wrapper: 'DataParallel'
    requires_grad: False
  student:
    adaptations:
    sequential: []
    auxiliary_model_wrapper:
      key: 'VariationalDistributor4VID'
      kwargs:
        regressors:
          regressor1:
            io: 'output'
            path: 'student_model.layer1'
            regressor_kwargs:
              in_channels: 64
              middle_channels: &och1 256
              out_channels: *och1
              eps: 0.00001
              init_pred_var: 5.0
          regressor2:
            io: 'output'
            path: 'student_model.layer2'
            regressor_kwargs:
              in_channels: 128
              middle_channels: &och2 512
              out_channels: *och2
              eps: 0.00001
              init_pred_var: 5.0
          regressor3:
            io: 'output'
            path: 'student_model.layer3'
            regressor_kwargs:
              in_channels: 256
              middle_channels: &och3 1024
              out_channels: *och3
              eps: 0.00001
              init_pred_var: 5.0
          regressor4:
            io: 'output'
            path: 'student_model.layer4'
            regressor_kwargs:
              in_channels: 512
              middle_channels: &och4 2048
              out_channels: *och4
              eps: 0.00001
              init_pred_var: 5.0
    frozen_modules: []
    forward_hook:
      input: []
      output: ['student_model.layer1', 'student_model.layer2', 'student_model.layer3', 'student_model.layer4', 'regressor_dict.regressor1', 'regressor_dict.regressor2', 'regressor_dict.regressor3', 'regressor_dict.regressor4']
    wrapper:
    requires_grad: True
  optimizer:
    key: 'SGD'
    kwargs:
      lr: 0.0001
      momentum: 0.9
      weight_decay: 0.0001
  scheduler:
    key: 'MultiStepLR'
    kwargs:
      milestones: [5, 10]
      gamma: 0.1
  criterion:
    key: 'WeightedSumLoss'
    kwargs:
      sub_terms:
        kd:
          criterion:
            key: 'KDLoss'
            kwargs:
              student_module_path: '.'
              student_module_io: 'output'
              teacher_module_path: '.'
              teacher_module_io: 'output'
              temperature: 1.0
              alpha: 1.0
              reduction: 'batchmean'
          weight: 1.0
        vid:
          criterion:
            key: 'VIDLoss'
            kwargs:
              feature_pairs:
                pair1:
                  teacher:
                    io: 'output'
                    path: 'layer1'
                  student:
                    io: 'output'
                    path: 'regressor_dict.regressor1'
                  weight: 1
                pair2:
                  teacher:
                    io: 'output'
                    path: 'layer2'
                  student:
                    io: 'output'
                    path: 'regressor_dict.regressor2'
                  weight: 1
                pair3:
                  teacher:
                    io: 'output'
                    path: 'layer3'
                  student:
                    io: 'output'
                    path: 'regressor_dict.regressor3'
                  weight: 1
                pair4:
                  teacher:
                    io: 'output'
                    path: 'layer4'
                  student:
                    io: 'output'
                    path: 'regressor_dict.regressor4'
                  weight: 1
              margin: 1.0
          weight: 1.0

test:
  test_data_loader:
    dataset_id: *imagenet_val
    sampler: *val_sampler
    kwargs:
      batch_size: 1
      num_workers: 16
      pin_memory: True
      drop_last: False
