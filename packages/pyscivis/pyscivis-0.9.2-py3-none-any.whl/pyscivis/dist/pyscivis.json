{"version":4,"artifacts":[{"module":{"file":"C:\\Users\\Jannik\\Desktop\\pyscivis\\src\\pyscivis\\dist\\compiled\\index.js","base":"C:\\Users\\Jannik\\Desktop\\pyscivis\\src\\pyscivis\\dist\\compiled","base_path":"index.js","canonical":"index","resolution":"ESM","id":"b5bf9b8817","hash":"b5bf9b88175f6346023cc95886f2103345bcb0586f1bdd6ded9751f4cdef7b49","source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.VizModels = void 0;\r\nconst tslib_1 = require(\"tslib\");\r\nconst VizModels = tslib_1.__importStar(require(\"./visualizer/models/index\"));\r\nexports.VizModels = VizModels;\r\nconst base_1 = require(\"@bokehjs/base\");\r\nbase_1.register_models(VizModels);\r\n//# sourceMappingURL=index.js.map\r\n","type":"js","dependency_paths":[["./visualizer/models/index","C:\\Users\\Jannik\\Desktop\\pyscivis\\src\\pyscivis\\dist\\compiled\\visualizer\\models\\index.js"]],"dependency_map":[],"exported":[],"externals":[],"shims":[]},"code":{"source":"/* index.js */ function _(require, module, exports, __esModule, __esExport) {\r\n    __esModule();\r\n    const tslib_1 = require(\"tslib\");\r\n    const VizModels = tslib_1.__importStar(require(\"88dea9ae8f\") /* ./visualizer/models/index */);\r\n    exports.VizModels = VizModels;\r\n    const base_1 = require(\"@bokehjs/base\");\r\n    base_1.register_models(VizModels);\r\n}\r\n","min_source":"function _(e,s,o,t,i){t();const a=e(\"tslib\").__importStar(e(\"88dea9ae8f\"));o.VizModels=a;e(\"@bokehjs/base\").register_models(a)}\n//# sourceMappingURL=index.min.js.map","min_map":"{\"version\":3,\"sources\":[\"0\"],\"names\":[\"_\",\"require\",\"module\",\"exports\",\"__esModule\",\"__esExport\",\"VizModels\",\"__importStar\",\"register_models\"],\"mappings\":\"AAAe,SAASA,EAAEC,EAASC,EAAQC,EAASC,EAAYC,GAC5DD,IACA,MACME,EADUL,EAAQ,SACEM,aAAaN,EAAQ,eAC/CE,EAAQG,UAAYA,EACLL,EAAQ,iBAChBO,gBAAgBF\",\"file\":\"index.min.js\"}"}},{"module":{"file":"C:\\Users\\Jannik\\Desktop\\pyscivis\\src\\pyscivis\\dist\\compiled\\visualizer\\models\\index.js","base":"C:\\Users\\Jannik\\Desktop\\pyscivis\\src\\pyscivis\\dist\\compiled","base_path":"visualizer\\models\\index.js","canonical":"visualizer/models/index","resolution":"ESM","id":"88dea9ae8f","hash":"88dea9ae8f16076af901aa5bdf0be77e4adf1e6e3d848e88d3a63923615bce6b","source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Tree = exports.ThrottledSlider = exports.OffsetLogTickFormatter = exports.OffsetLogColorMapper = void 0;\r\nvar offset_log_color_mapper_1 = require(\"./offset_log_color_mapper\");\r\nObject.defineProperty(exports, \"OffsetLogColorMapper\", { enumerable: true, get: function () { return offset_log_color_mapper_1.OffsetLogColorMapper; } });\r\nvar offset_log_tick_formatter_1 = require(\"./offset_log_tick_formatter\");\r\nObject.defineProperty(exports, \"OffsetLogTickFormatter\", { enumerable: true, get: function () { return offset_log_tick_formatter_1.OffsetLogTickFormatter; } });\r\nvar throttled_slider_1 = require(\"./throttled_slider\");\r\nObject.defineProperty(exports, \"ThrottledSlider\", { enumerable: true, get: function () { return throttled_slider_1.ThrottledSlider; } });\r\nvar filetree_1 = require(\"./filetree\");\r\nObject.defineProperty(exports, \"Tree\", { enumerable: true, get: function () { return filetree_1.Tree; } });\r\n//# sourceMappingURL=index.js.map\r\n","type":"js","dependency_paths":[["./offset_log_color_mapper","C:\\Users\\Jannik\\Desktop\\pyscivis\\src\\pyscivis\\dist\\compiled\\visualizer\\models\\offset_log_color_mapper.js"],["./offset_log_tick_formatter","C:\\Users\\Jannik\\Desktop\\pyscivis\\src\\pyscivis\\dist\\compiled\\visualizer\\models\\offset_log_tick_formatter.js"],["./throttled_slider","C:\\Users\\Jannik\\Desktop\\pyscivis\\src\\pyscivis\\dist\\compiled\\visualizer\\models\\throttled_slider.js"],["./filetree","C:\\Users\\Jannik\\Desktop\\pyscivis\\src\\pyscivis\\dist\\compiled\\visualizer\\models\\filetree.js"]],"dependency_map":[],"exported":[{"type":"bindings","bindings":[[null,"OffsetLogColorMapper"]],"module":"./offset_log_color_mapper"},{"type":"bindings","bindings":[[null,"OffsetLogTickFormatter"]],"module":"./offset_log_tick_formatter"},{"type":"bindings","bindings":[[null,"ThrottledSlider"]],"module":"./throttled_slider"},{"type":"bindings","bindings":[[null,"Tree"]],"module":"./filetree"}],"externals":[],"shims":[]},"code":{"source":"/* visualizer\\models\\index.js */ function _(require, module, exports, __esModule, __esExport) {\r\n    __esModule();\r\n    var offset_log_color_mapper_1 = require(\"31d02535b8\") /* ./offset_log_color_mapper */;\r\n    __esExport(\"OffsetLogColorMapper\", offset_log_color_mapper_1.OffsetLogColorMapper);\r\n    var offset_log_tick_formatter_1 = require(\"3571f5e394\") /* ./offset_log_tick_formatter */;\r\n    __esExport(\"OffsetLogTickFormatter\", offset_log_tick_formatter_1.OffsetLogTickFormatter);\r\n    var throttled_slider_1 = require(\"c7269ba5d4\") /* ./throttled_slider */;\r\n    __esExport(\"ThrottledSlider\", throttled_slider_1.ThrottledSlider);\r\n    var filetree_1 = require(\"342f084289\") /* ./filetree */;\r\n    __esExport(\"Tree\", filetree_1.Tree);\r\n}\r\n","min_source":"function _(e,r,o,t,f){t(),f(\"OffsetLogColorMapper\",e(\"31d02535b8\").OffsetLogColorMapper),f(\"OffsetLogTickFormatter\",e(\"3571f5e394\").OffsetLogTickFormatter),f(\"ThrottledSlider\",e(\"c7269ba5d4\").ThrottledSlider),f(\"Tree\",e(\"342f084289\").Tree)}\n//# sourceMappingURL=index.min.js.map","min_map":"{\"version\":3,\"sources\":[\"0\"],\"names\":[\"_\",\"require\",\"module\",\"exports\",\"__esModule\",\"__esExport\",\"OffsetLogColorMapper\",\"OffsetLogTickFormatter\",\"ThrottledSlider\",\"Tree\"],\"mappings\":\"AAAiC,SAASA,EAAEC,EAASC,EAAQC,EAASC,EAAYC,GAC9ED,IAEAC,EAAW,uBADqBJ,EAAQ,cACqBK,sBAE7DD,EAAW,yBADuBJ,EAAQ,cACuBM,wBAEjEF,EAAW,kBADcJ,EAAQ,cACgBO,iBAEjDH,EAAW,OADMJ,EAAQ,cACKQ\",\"file\":\"index.min.js\"}"}},{"module":{"file":"C:\\Users\\Jannik\\Desktop\\pyscivis\\src\\pyscivis\\dist\\compiled\\visualizer\\models\\offset_log_color_mapper.js","base":"C:\\Users\\Jannik\\Desktop\\pyscivis\\src\\pyscivis\\dist\\compiled","base_path":"visualizer\\models\\offset_log_color_mapper.js","canonical":"visualizer/models/offset_log_color_mapper","resolution":"ESM","id":"31d02535b8","hash":"31d02535b88174ec99c1159bdb988d7d7051a8b61443bc935998a36f9267a466","source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.OffsetLogColorMapper = void 0;\r\nconst log_color_mapper_1 = require(\"@bokehjs/models/mappers/log_color_mapper\");\r\nconst arrayable_1 = require(\"@bokehjs/core/util/arrayable\");\r\nclass OffsetLogColorMapper extends log_color_mapper_1.LogColorMapper {\r\n    constructor(attrs) {\r\n        super(attrs);\r\n    }\r\n    static init_OffsetLogColorMapper() {\r\n        this.define(({ Array, Number }) => ({\r\n            log_span: [Array(Number), [1, 10]],\r\n        }));\r\n    }\r\n    scan(data, n) {\r\n        // retrieve specified low and high or calculate it if unspecified\r\n        let low = this.low != null ? this.low : arrayable_1.min(data);\r\n        let high = this.high != null ? this.high : arrayable_1.max(data);\r\n        let span = this.log_span != null ? this.log_span : [1, 10];\r\n        const interval = [low, high];\r\n        // n: Palette-size\r\n        const scale = n / (Math.log(span[1]) - Math.log(span[0]));\r\n        return { max: span[1], min: span[0], scale, interval };\r\n    }\r\n    cmap(d, palette, low_color, high_color, scan_data) {\r\n        const max_key = palette.length - 1;\r\n        let _max = scan_data.max;\r\n        let _min = scan_data.min;\r\n        let interval = scan_data.interval;\r\n        // mapping our interval [_min, _max] onto the logspan [interval[0], interval[1]]\r\n        // https://math.stackexchange.com/a/914843\r\n        d = _min + (_max - _min) / (interval[1] - interval[0]) * (d - interval[0]);\r\n        if (d > _max) {\r\n            return high_color;\r\n        }\r\n        // This handles the edge case where d == high, since the code below maps\r\n        // values exactly equal to high to palette.length, which is greater than\r\n        // max_key\r\n        if (d == _max) {\r\n            return palette[max_key];\r\n        }\r\n        else if (d < _min) {\r\n            return low_color;\r\n        }\r\n        // Get the palette-color key by calculating the log of the\r\n        // to-be-colormapped value and multiplying it by the scale\r\n        const log = Math.log(d) - Math.log(_min); // subtract the low offset\r\n        let key = Math.floor(log * scan_data.scale);\r\n        // Deal with upper bound\r\n        if (key > max_key) {\r\n            key = max_key;\r\n        }\r\n        return palette[key];\r\n    }\r\n}\r\nexports.OffsetLogColorMapper = OffsetLogColorMapper;\r\nOffsetLogColorMapper.__name__ = \"OffsetLogColorMapper\";\r\nOffsetLogColorMapper.__module__ = \"pyscivis.visualizer.models.offset_log_color_mapper\";\r\nOffsetLogColorMapper.init_OffsetLogColorMapper();\r\n//# sourceMappingURL=offset_log_color_mapper.js.map\r\n","type":"js","dependency_paths":[],"dependency_map":[],"exported":[{"type":"named","name":"OffsetLogColorMapper"}],"externals":[],"shims":[]},"code":{"source":"/* visualizer\\models\\offset_log_color_mapper.js */ function _(require, module, exports, __esModule, __esExport) {\r\n    __esModule();\r\n    const log_color_mapper_1 = require(\"@bokehjs/models/mappers/log_color_mapper\");\r\n    const arrayable_1 = require(\"@bokehjs/core/util/arrayable\");\r\n    class OffsetLogColorMapper extends log_color_mapper_1.LogColorMapper {\r\n        constructor(attrs) {\r\n            super(attrs);\r\n        }\r\n        static init_OffsetLogColorMapper() {\r\n            this.define(({ Array, Number }) => ({\r\n                log_span: [Array(Number), [1, 10]],\r\n            }));\r\n        }\r\n        scan(data, n) {\r\n            // retrieve specified low and high or calculate it if unspecified\r\n            let low = this.low != null ? this.low : arrayable_1.min(data);\r\n            let high = this.high != null ? this.high : arrayable_1.max(data);\r\n            let span = this.log_span != null ? this.log_span : [1, 10];\r\n            const interval = [low, high];\r\n            // n: Palette-size\r\n            const scale = n / (Math.log(span[1]) - Math.log(span[0]));\r\n            return { max: span[1], min: span[0], scale, interval };\r\n        }\r\n        cmap(d, palette, low_color, high_color, scan_data) {\r\n            const max_key = palette.length - 1;\r\n            let _max = scan_data.max;\r\n            let _min = scan_data.min;\r\n            let interval = scan_data.interval;\r\n            // mapping our interval [_min, _max] onto the logspan [interval[0], interval[1]]\r\n            // https://math.stackexchange.com/a/914843\r\n            d = _min + (_max - _min) / (interval[1] - interval[0]) * (d - interval[0]);\r\n            if (d > _max) {\r\n                return high_color;\r\n            }\r\n            // This handles the edge case where d == high, since the code below maps\r\n            // values exactly equal to high to palette.length, which is greater than\r\n            // max_key\r\n            if (d == _max) {\r\n                return palette[max_key];\r\n            }\r\n            else if (d < _min) {\r\n                return low_color;\r\n            }\r\n            // Get the palette-color key by calculating the log of the\r\n            // to-be-colormapped value and multiplying it by the scale\r\n            const log = Math.log(d) - Math.log(_min); // subtract the low offset\r\n            let key = Math.floor(log * scan_data.scale);\r\n            // Deal with upper bound\r\n            if (key > max_key) {\r\n                key = max_key;\r\n            }\r\n            return palette[key];\r\n        }\r\n    }\r\n    exports.OffsetLogColorMapper = OffsetLogColorMapper;\r\n    OffsetLogColorMapper.__name__ = \"OffsetLogColorMapper\";\r\n    OffsetLogColorMapper.__module__ = \"pyscivis.visualizer.models.offset_log_color_mapper\";\r\n    OffsetLogColorMapper.init_OffsetLogColorMapper();\r\n}\r\n","min_source":"function _(o,e,t,l,r){l();const s=o(\"@bokehjs/models/mappers/log_color_mapper\"),a=o(\"@bokehjs/core/util/arrayable\");class n extends s.LogColorMapper{constructor(o){super(o)}static init_OffsetLogColorMapper(){this.define((({Array:o,Number:e})=>({log_span:[o(e),[1,10]]})))}scan(o,e){let t=null!=this.low?this.low:a.min(o),l=null!=this.high?this.high:a.max(o),r=null!=this.log_span?this.log_span:[1,10];const s=[t,l],n=e/(Math.log(r[1])-Math.log(r[0]));return{max:r[1],min:r[0],scale:n,interval:s}}cmap(o,e,t,l,r){const s=e.length-1;let a=r.max,n=r.min,i=r.interval;if((o=n+(a-n)/(i[1]-i[0])*(o-i[0]))>a)return l;if(o==a)return e[s];if(o<n)return t;const p=Math.log(o)-Math.log(n);let h=Math.floor(p*r.scale);return h>s&&(h=s),e[h]}}t.OffsetLogColorMapper=n,n.__name__=\"OffsetLogColorMapper\",n.__module__=\"pyscivis.visualizer.models.offset_log_color_mapper\",n.init_OffsetLogColorMapper()}\n//# sourceMappingURL=offset_log_color_mapper.min.js.map","min_map":"{\"version\":3,\"sources\":[\"0\"],\"names\":[\"_\",\"require\",\"module\",\"exports\",\"__esModule\",\"__esExport\",\"log_color_mapper_1\",\"arrayable_1\",\"OffsetLogColorMapper\",\"LogColorMapper\",\"[object Object]\",\"attrs\",\"super\",\"this\",\"define\",\"Array\",\"Number\",\"log_span\",\"data\",\"n\",\"low\",\"min\",\"high\",\"max\",\"span\",\"interval\",\"scale\",\"Math\",\"log\",\"d\",\"palette\",\"low_color\",\"high_color\",\"scan_data\",\"max_key\",\"length\",\"_max\",\"_min\",\"key\",\"floor\",\"__name__\",\"__module__\",\"init_OffsetLogColorMapper\"],\"mappings\":\"AAAmD,SAASA,EAAEC,EAASC,EAAQC,EAASC,EAAYC,GAChGD,IACA,MAAME,EAAqBL,EAAQ,4CAC7BM,EAAcN,EAAQ,gCAC5B,MAAMO,UAA6BF,EAAmBG,eAClDC,YAAYC,GACRC,MAAMD,GAEVD,mCACIG,KAAKC,QAAO,EAAGC,MAAAA,EAAOC,OAAAA,MAAa,CAC/BC,SAAU,CAACF,EAAMC,GAAS,CAAC,EAAG,SAGtCN,KAAKQ,EAAMC,GAEP,IAAIC,EAAkB,MAAZP,KAAKO,IAAcP,KAAKO,IAAMb,EAAYc,IAAIH,GACpDI,EAAoB,MAAbT,KAAKS,KAAeT,KAAKS,KAAOf,EAAYgB,IAAIL,GACvDM,EAAwB,MAAjBX,KAAKI,SAAmBJ,KAAKI,SAAW,CAAC,EAAG,IACvD,MAAMQ,EAAW,CAACL,EAAKE,GAEjBI,EAAQP,GAAKQ,KAAKC,IAAIJ,EAAK,IAAMG,KAAKC,IAAIJ,EAAK,KACrD,MAAO,CAAED,IAAKC,EAAK,GAAIH,IAAKG,EAAK,GAAIE,MAAAA,EAAOD,SAAAA,GAEhDf,KAAKmB,EAAGC,EAASC,EAAWC,EAAYC,GACpC,MAAMC,EAAUJ,EAAQK,OAAS,EACjC,IAAIC,EAAOH,EAAUV,IACjBc,EAAOJ,EAAUZ,IACjBI,EAAWQ,EAAUR,SAIzB,IADAI,EAAIQ,GAAQD,EAAOC,IAASZ,EAAS,GAAKA,EAAS,KAAOI,EAAIJ,EAAS,KAC/DW,EACJ,OAAOJ,EAKX,GAAIH,GAAKO,EACL,OAAON,EAAQI,GAEd,GAAIL,EAAIQ,EACT,OAAON,EAIX,MAAMH,EAAMD,KAAKC,IAAIC,GAAKF,KAAKC,IAAIS,GACnC,IAAIC,EAAMX,KAAKY,MAAMX,EAAMK,EAAUP,OAKrC,OAHIY,EAAMJ,IACNI,EAAMJ,GAEHJ,EAAQQ,IAGvBnC,EAAQK,qBAAuBA,EAC/BA,EAAqBgC,SAAW,uBAChChC,EAAqBiC,WAAa,qDAClCjC,EAAqBkC\",\"file\":\"offset_log_color_mapper.min.js\"}"}},{"module":{"file":"C:\\Users\\Jannik\\Desktop\\pyscivis\\src\\pyscivis\\dist\\compiled\\visualizer\\models\\offset_log_tick_formatter.js","base":"C:\\Users\\Jannik\\Desktop\\pyscivis\\src\\pyscivis\\dist\\compiled","base_path":"visualizer\\models\\offset_log_tick_formatter.js","canonical":"visualizer/models/offset_log_tick_formatter","resolution":"ESM","id":"3571f5e394","hash":"3571f5e394858fbccaa04b56e86b2a495f50d1a5bf25eb4264f6cea91dcfeb9d","source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.OffsetLogTickFormatter = void 0;\r\nconst log_tick_formatter_1 = require(\"@bokehjs/models/formatters/log_tick_formatter\");\r\nconst arrayable_1 = require(\"@bokehjs/core/util/arrayable\");\r\nclass OffsetLogTickFormatter extends log_tick_formatter_1.LogTickFormatter {\r\n    constructor(attrs) {\r\n        super(attrs);\r\n    }\r\n    static init_OffsetLogTickFormatter() {\r\n        this.define(({ Array, Number }) => ({\r\n            low: [Number, 0],\r\n            high: [Number, 0],\r\n            log_span: [Array(Number), [1, 10]]\r\n        }));\r\n    }\r\n    format_graphics(ticks, opts) {\r\n        if (ticks.length == 0)\r\n            return [];\r\n        const start = arrayable_1.min(this.log_span);\r\n        const end = arrayable_1.max(this.log_span);\r\n        ticks = ticks.map((value) => {\r\n            return this.low + (this.high - this.low) / (end - start) * (value - start);\r\n        });\r\n        return this.basic_formatter.format_graphics(ticks, opts);\r\n    }\r\n}\r\nexports.OffsetLogTickFormatter = OffsetLogTickFormatter;\r\nOffsetLogTickFormatter.__name__ = \"OffsetLogTickFormatter\";\r\nOffsetLogTickFormatter.__module__ = \"pyscivis.visualizer.models.offset_log_tick_formatter\";\r\nOffsetLogTickFormatter.init_OffsetLogTickFormatter();\r\n//# sourceMappingURL=offset_log_tick_formatter.js.map\r\n","type":"js","dependency_paths":[],"dependency_map":[],"exported":[{"type":"named","name":"OffsetLogTickFormatter"}],"externals":[],"shims":[]},"code":{"source":"/* visualizer\\models\\offset_log_tick_formatter.js */ function _(require, module, exports, __esModule, __esExport) {\r\n    __esModule();\r\n    const log_tick_formatter_1 = require(\"@bokehjs/models/formatters/log_tick_formatter\");\r\n    const arrayable_1 = require(\"@bokehjs/core/util/arrayable\");\r\n    class OffsetLogTickFormatter extends log_tick_formatter_1.LogTickFormatter {\r\n        constructor(attrs) {\r\n            super(attrs);\r\n        }\r\n        static init_OffsetLogTickFormatter() {\r\n            this.define(({ Array, Number }) => ({\r\n                low: [Number, 0],\r\n                high: [Number, 0],\r\n                log_span: [Array(Number), [1, 10]]\r\n            }));\r\n        }\r\n        format_graphics(ticks, opts) {\r\n            if (ticks.length == 0)\r\n                return [];\r\n            const start = arrayable_1.min(this.log_span);\r\n            const end = arrayable_1.max(this.log_span);\r\n            ticks = ticks.map((value) => {\r\n                return this.low + (this.high - this.low) / (end - start) * (value - start);\r\n            });\r\n            return this.basic_formatter.format_graphics(ticks, opts);\r\n        }\r\n    }\r\n    exports.OffsetLogTickFormatter = OffsetLogTickFormatter;\r\n    OffsetLogTickFormatter.__name__ = \"OffsetLogTickFormatter\";\r\n    OffsetLogTickFormatter.__module__ = \"pyscivis.visualizer.models.offset_log_tick_formatter\";\r\n    OffsetLogTickFormatter.init_OffsetLogTickFormatter();\r\n}\r\n","min_source":"function _(t,o,r,s,i){s();const e=t(\"@bokehjs/models/formatters/log_tick_formatter\"),a=t(\"@bokehjs/core/util/arrayable\");class _ extends e.LogTickFormatter{constructor(t){super(t)}static init_OffsetLogTickFormatter(){this.define((({Array:t,Number:o})=>({low:[o,0],high:[o,0],log_span:[t(o),[1,10]]})))}format_graphics(t,o){if(0==t.length)return[];const r=a.min(this.log_span),s=a.max(this.log_span);return t=t.map((t=>this.low+(this.high-this.low)/(s-r)*(t-r))),this.basic_formatter.format_graphics(t,o)}}r.OffsetLogTickFormatter=_,_.__name__=\"OffsetLogTickFormatter\",_.__module__=\"pyscivis.visualizer.models.offset_log_tick_formatter\",_.init_OffsetLogTickFormatter()}\n//# sourceMappingURL=offset_log_tick_formatter.min.js.map","min_map":"{\"version\":3,\"sources\":[\"0\"],\"names\":[\"_\",\"require\",\"module\",\"exports\",\"__esModule\",\"__esExport\",\"log_tick_formatter_1\",\"arrayable_1\",\"OffsetLogTickFormatter\",\"LogTickFormatter\",\"[object Object]\",\"attrs\",\"super\",\"this\",\"define\",\"Array\",\"Number\",\"low\",\"high\",\"log_span\",\"ticks\",\"opts\",\"length\",\"start\",\"min\",\"end\",\"max\",\"map\",\"value\",\"basic_formatter\",\"format_graphics\",\"__name__\",\"__module__\",\"init_OffsetLogTickFormatter\"],\"mappings\":\"AAAqD,SAASA,EAAEC,EAASC,EAAQC,EAASC,EAAYC,GAClGD,IACA,MAAME,EAAuBL,EAAQ,iDAC/BM,EAAcN,EAAQ,gCAC5B,MAAMO,UAA+BF,EAAqBG,iBACtDC,YAAYC,GACRC,MAAMD,GAEVD,qCACIG,KAAKC,QAAO,EAAGC,MAAAA,EAAOC,OAAAA,MAAa,CAC/BC,IAAK,CAACD,EAAQ,GACdE,KAAM,CAACF,EAAQ,GACfG,SAAU,CAACJ,EAAMC,GAAS,CAAC,EAAG,SAGtCN,gBAAgBU,EAAOC,GACnB,GAAoB,GAAhBD,EAAME,OACN,MAAO,GACX,MAAMC,EAAQhB,EAAYiB,IAAIX,KAAKM,UAC7BM,EAAMlB,EAAYmB,IAAIb,KAAKM,UAIjC,OAHAC,EAAQA,EAAMO,KAAKC,GACRf,KAAKI,KAAOJ,KAAKK,KAAOL,KAAKI,MAAQQ,EAAMF,IAAUK,EAAQL,KAEjEV,KAAKgB,gBAAgBC,gBAAgBV,EAAOC,IAG3DlB,EAAQK,uBAAyBA,EACjCA,EAAuBuB,SAAW,yBAClCvB,EAAuBwB,WAAa,uDACpCxB,EAAuByB\",\"file\":\"offset_log_tick_formatter.min.js\"}"}},{"module":{"file":"C:\\Users\\Jannik\\Desktop\\pyscivis\\src\\pyscivis\\dist\\compiled\\visualizer\\models\\throttled_slider.js","base":"C:\\Users\\Jannik\\Desktop\\pyscivis\\src\\pyscivis\\dist\\compiled","base_path":"visualizer\\models\\throttled_slider.js","canonical":"visualizer/models/throttled_slider","resolution":"ESM","id":"c7269ba5d4","hash":"c7269ba5d42b7f649c19a4973c646e4251254dac48f9478784dbe13a30c80a7f","source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ThrottledSlider = void 0;\r\nconst slider_1 = require(\"@bokehjs/models/widgets/slider\");\r\nclass ThrottledSlider extends slider_1.Slider {\r\n}\r\nexports.ThrottledSlider = ThrottledSlider;\r\nThrottledSlider.__name__ = \"ThrottledSlider\";\r\nThrottledSlider.__module__ = \"pyscivis.visualizer.models.throttled_slider\";\r\n//# sourceMappingURL=throttled_slider.js.map\r\n","type":"js","dependency_paths":[],"dependency_map":[],"exported":[{"type":"named","name":"ThrottledSlider"}],"externals":[],"shims":[]},"code":{"source":"/* visualizer\\models\\throttled_slider.js */ function _(require, module, exports, __esModule, __esExport) {\r\n    __esModule();\r\n    const slider_1 = require(\"@bokehjs/models/widgets/slider\");\r\n    class ThrottledSlider extends slider_1.Slider {\r\n    }\r\n    exports.ThrottledSlider = ThrottledSlider;\r\n    ThrottledSlider.__name__ = \"ThrottledSlider\";\r\n    ThrottledSlider.__module__ = \"pyscivis.visualizer.models.throttled_slider\";\r\n}\r\n","min_source":"function _(e,d,l,s,i){s();const t=e(\"@bokehjs/models/widgets/slider\");class _ extends t.Slider{}l.ThrottledSlider=_,_.__name__=\"ThrottledSlider\",_.__module__=\"pyscivis.visualizer.models.throttled_slider\"}\n//# sourceMappingURL=throttled_slider.min.js.map","min_map":"{\"version\":3,\"sources\":[\"0\"],\"names\":[\"_\",\"require\",\"module\",\"exports\",\"__esModule\",\"__esExport\",\"slider_1\",\"ThrottledSlider\",\"Slider\",\"__name__\",\"__module__\"],\"mappings\":\"AAA4C,SAASA,EAAEC,EAASC,EAAQC,EAASC,EAAYC,GACzFD,IACA,MAAME,EAAWL,EAAQ,kCACzB,MAAMM,UAAwBD,EAASE,QAEvCL,EAAQI,gBAAkBA,EAC1BA,EAAgBE,SAAW,kBAC3BF,EAAgBG,WAAa\",\"file\":\"throttled_slider.min.js\"}"}},{"module":{"file":"C:\\Users\\Jannik\\Desktop\\pyscivis\\src\\pyscivis\\dist\\compiled\\visualizer\\models\\filetree.js","base":"C:\\Users\\Jannik\\Desktop\\pyscivis\\src\\pyscivis\\dist\\compiled","base_path":"visualizer\\models\\filetree.js","canonical":"visualizer/models/filetree","resolution":"ESM","id":"342f084289","hash":"342f0842896a9d1582912e902db55061c34b6a29dc53606e06a85bc9c65eec86","source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Tree = exports.TreeView = void 0;\r\nconst widget_1 = require(\"@bokehjs/models/widgets/widget\");\r\nclass TreeView extends widget_1.WidgetView {\r\n    render() {\r\n        $(this.el)\r\n            .on('select_node.jstree', (_e, data) => {\r\n            // Only returns the name if it is a leaf (is in leaf_types)\r\n            // Only 1 Leaf can be selected max -> selected[0]\r\n            var selected_node = data.instance.get_node(data.selected[0]);\r\n            var leaf_types = [\"images\", \"header\", \"acquisitions\"];\r\n            if (leaf_types.includes(selected_node.type)) {\r\n                this.model.selected = [selected_node.parent, selected_node.id, selected_node.type];\r\n            }\r\n        })\r\n            .on('loaded.jstree', () => {\r\n            $(this.el).jstree('open_all');\r\n        })\r\n            .jstree(this.get_data());\r\n    }\r\n    get_data() {\r\n        return {\r\n            \"types\": {\r\n                \"images\": {\r\n                    \"valid_children\": \"none\",\r\n                    \"icon\": \"glyphicon glyphicon-picture\",\r\n                },\r\n                \"acquisitions\": {\r\n                    \"valid_children\": \"none\",\r\n                    \"icon\": \"glyphicon glyphicon-list\"\r\n                },\r\n                \"header\": {\r\n                    \"valid_children\": \"none\",\r\n                    \"icon\": \"glyphicon glyphicon-file\"\r\n                },\r\n                \"container\": {\r\n                    \"valid_children\": [\"folder\", \"image\", \"acquisition\", \"header\"],\r\n                    \"icon\": \"glyphicon glyphicon-folder-open\"\r\n                },\r\n                \"file\": {\r\n                    \"valid_children\": [\"folder\", \"image\", \"acquisition\", \"header\"],\r\n                    \"icon\": \"glyphicon glyphicon-hdd\"\r\n                },\r\n                \"default\": {\r\n                    \"valid_children\": [\"folder\", \"image\", \"acquisition\", \"header\"],\r\n                    \"icon\": \"glyphicon glyphicon-question-sign\"\r\n                }\r\n            },\r\n            'core': {\r\n                'multiple': false,\r\n                'data': this.model.tree,\r\n                'themes': {\r\n                    'name': this.model.theme == \"dark\" ? \"default-dark\" : \"default\",\r\n                    \"dots\": true,\r\n                    \"icons\": true\r\n                }\r\n            },\r\n            \"plugins\": [\"types\"],\r\n        };\r\n    }\r\n}\r\nexports.TreeView = TreeView;\r\nTreeView.__name__ = \"TreeView\";\r\nclass Tree extends widget_1.Widget {\r\n    constructor(attrs) {\r\n        super(attrs);\r\n    }\r\n    static init_Tree() {\r\n        this.prototype.default_view = TreeView;\r\n        this.define(({ Tuple, String, Any }) => ({\r\n            selected: [Tuple(String, String, String)],\r\n            theme: [String],\r\n            tree: [Any],\r\n        }));\r\n    }\r\n}\r\nexports.Tree = Tree;\r\nTree.__name__ = \"Tree\";\r\nTree.__module__ = \"pyscivis.visualizer.models.filetree\";\r\nTree.init_Tree();\r\n//# sourceMappingURL=filetree.js.map\r\n","type":"js","dependency_paths":[],"dependency_map":[],"exported":[{"type":"named","name":"TreeView"},{"type":"named","name":"Tree"}],"externals":[],"shims":[]},"code":{"source":"/* visualizer\\models\\filetree.js */ function _(require, module, exports, __esModule, __esExport) {\r\n    __esModule();\r\n    const widget_1 = require(\"@bokehjs/models/widgets/widget\");\r\n    class TreeView extends widget_1.WidgetView {\r\n        render() {\r\n            $(this.el)\r\n                .on('select_node.jstree', (_e, data) => {\r\n                // Only returns the name if it is a leaf (is in leaf_types)\r\n                // Only 1 Leaf can be selected max -> selected[0]\r\n                var selected_node = data.instance.get_node(data.selected[0]);\r\n                var leaf_types = [\"images\", \"header\", \"acquisitions\"];\r\n                if (leaf_types.includes(selected_node.type)) {\r\n                    this.model.selected = [selected_node.parent, selected_node.id, selected_node.type];\r\n                }\r\n            })\r\n                .on('loaded.jstree', () => {\r\n                $(this.el).jstree('open_all');\r\n            })\r\n                .jstree(this.get_data());\r\n        }\r\n        get_data() {\r\n            return {\r\n                \"types\": {\r\n                    \"images\": {\r\n                        \"valid_children\": \"none\",\r\n                        \"icon\": \"glyphicon glyphicon-picture\",\r\n                    },\r\n                    \"acquisitions\": {\r\n                        \"valid_children\": \"none\",\r\n                        \"icon\": \"glyphicon glyphicon-list\"\r\n                    },\r\n                    \"header\": {\r\n                        \"valid_children\": \"none\",\r\n                        \"icon\": \"glyphicon glyphicon-file\"\r\n                    },\r\n                    \"container\": {\r\n                        \"valid_children\": [\"folder\", \"image\", \"acquisition\", \"header\"],\r\n                        \"icon\": \"glyphicon glyphicon-folder-open\"\r\n                    },\r\n                    \"file\": {\r\n                        \"valid_children\": [\"folder\", \"image\", \"acquisition\", \"header\"],\r\n                        \"icon\": \"glyphicon glyphicon-hdd\"\r\n                    },\r\n                    \"default\": {\r\n                        \"valid_children\": [\"folder\", \"image\", \"acquisition\", \"header\"],\r\n                        \"icon\": \"glyphicon glyphicon-question-sign\"\r\n                    }\r\n                },\r\n                'core': {\r\n                    'multiple': false,\r\n                    'data': this.model.tree,\r\n                    'themes': {\r\n                        'name': this.model.theme == \"dark\" ? \"default-dark\" : \"default\",\r\n                        \"dots\": true,\r\n                        \"icons\": true\r\n                    }\r\n                },\r\n                \"plugins\": [\"types\"],\r\n            };\r\n        }\r\n    }\r\n    exports.TreeView = TreeView;\r\n    TreeView.__name__ = \"TreeView\";\r\n    class Tree extends widget_1.Widget {\r\n        constructor(attrs) {\r\n            super(attrs);\r\n        }\r\n        static init_Tree() {\r\n            this.prototype.default_view = TreeView;\r\n            this.define(({ Tuple, String, Any }) => ({\r\n                selected: [Tuple(String, String, String)],\r\n                theme: [String],\r\n                tree: [Any],\r\n            }));\r\n        }\r\n    }\r\n    exports.Tree = Tree;\r\n    Tree.__name__ = \"Tree\";\r\n    Tree.__module__ = \"pyscivis.visualizer.models.filetree\";\r\n    Tree.init_Tree();\r\n}\r\n","min_source":"function _(e,i,n,t,l){t();const d=e(\"@bokehjs/models/widgets/widget\");class o extends d.WidgetView{render(){$(this.el).on(\"select_node.jstree\",((e,i)=>{var n=i.instance.get_node(i.selected[0]);[\"images\",\"header\",\"acquisitions\"].includes(n.type)&&(this.model.selected=[n.parent,n.id,n.type])})).on(\"loaded.jstree\",(()=>{$(this.el).jstree(\"open_all\")})).jstree(this.get_data())}get_data(){return{types:{images:{valid_children:\"none\",icon:\"glyphicon glyphicon-picture\"},acquisitions:{valid_children:\"none\",icon:\"glyphicon glyphicon-list\"},header:{valid_children:\"none\",icon:\"glyphicon glyphicon-file\"},container:{valid_children:[\"folder\",\"image\",\"acquisition\",\"header\"],icon:\"glyphicon glyphicon-folder-open\"},file:{valid_children:[\"folder\",\"image\",\"acquisition\",\"header\"],icon:\"glyphicon glyphicon-hdd\"},default:{valid_children:[\"folder\",\"image\",\"acquisition\",\"header\"],icon:\"glyphicon glyphicon-question-sign\"}},core:{multiple:!1,data:this.model.tree,themes:{name:\"dark\"==this.model.theme?\"default-dark\":\"default\",dots:!0,icons:!0}},plugins:[\"types\"]}}}n.TreeView=o,o.__name__=\"TreeView\";class s extends d.Widget{constructor(e){super(e)}static init_Tree(){this.prototype.default_view=o,this.define((({Tuple:e,String:i,Any:n})=>({selected:[e(i,i,i)],theme:[i],tree:[n]})))}}n.Tree=s,s.__name__=\"Tree\",s.__module__=\"pyscivis.visualizer.models.filetree\",s.init_Tree()}\n//# sourceMappingURL=filetree.min.js.map","min_map":"{\"version\":3,\"sources\":[\"0\"],\"names\":[\"_\",\"require\",\"module\",\"exports\",\"__esModule\",\"__esExport\",\"widget_1\",\"TreeView\",\"WidgetView\",\"[object Object]\",\"$\",\"this\",\"el\",\"on\",\"_e\",\"data\",\"selected_node\",\"instance\",\"get_node\",\"selected\",\"includes\",\"type\",\"model\",\"parent\",\"id\",\"jstree\",\"get_data\",\"types\",\"images\",\"valid_children\",\"icon\",\"acquisitions\",\"header\",\"container\",\"file\",\"default\",\"core\",\"multiple\",\"tree\",\"themes\",\"name\",\"theme\",\"dots\",\"icons\",\"plugins\",\"__name__\",\"Tree\",\"Widget\",\"attrs\",\"super\",\"prototype\",\"default_view\",\"define\",\"Tuple\",\"String\",\"Any\",\"__module__\",\"init_Tree\"],\"mappings\":\"AAAoC,SAASA,EAAEC,EAASC,EAAQC,EAASC,EAAYC,GACjFD,IACA,MAAME,EAAWL,EAAQ,kCACzB,MAAMM,UAAiBD,EAASE,WAC5BC,SACIC,EAAEC,KAAKC,IACFC,GAAG,sBAAsB,CAACC,EAAIC,KAG/B,IAAIC,EAAgBD,EAAKE,SAASC,SAASH,EAAKI,SAAS,IACxC,CAAC,SAAU,SAAU,gBACvBC,SAASJ,EAAcK,QAClCV,KAAKW,MAAMH,SAAW,CAACH,EAAcO,OAAQP,EAAcQ,GAAIR,EAAcK,UAGhFR,GAAG,iBAAiB,KACrBH,EAAEC,KAAKC,IAAIa,OAAO,eAEjBA,OAAOd,KAAKe,YAErBjB,WACI,MAAO,CACHkB,MAAS,CACLC,OAAU,CACNC,eAAkB,OAClBC,KAAQ,+BAEZC,aAAgB,CACZF,eAAkB,OAClBC,KAAQ,4BAEZE,OAAU,CACNH,eAAkB,OAClBC,KAAQ,4BAEZG,UAAa,CACTJ,eAAkB,CAAC,SAAU,QAAS,cAAe,UACrDC,KAAQ,mCAEZI,KAAQ,CACJL,eAAkB,CAAC,SAAU,QAAS,cAAe,UACrDC,KAAQ,2BAEZK,QAAW,CACPN,eAAkB,CAAC,SAAU,QAAS,cAAe,UACrDC,KAAQ,sCAGhBM,KAAQ,CACJC,UAAY,EACZtB,KAAQJ,KAAKW,MAAMgB,KACnBC,OAAU,CACNC,KAA4B,QAApB7B,KAAKW,MAAMmB,MAAkB,eAAiB,UACtDC,MAAQ,EACRC,OAAS,IAGjBC,QAAW,CAAC,WAIxBzC,EAAQI,SAAWA,EACnBA,EAASsC,SAAW,WACpB,MAAMC,UAAaxC,EAASyC,OACxBtC,YAAYuC,GACRC,MAAMD,GAEVvC,mBACIE,KAAKuC,UAAUC,aAAe5C,EAC9BI,KAAKyC,QAAO,EAAGC,MAAAA,EAAOC,OAAAA,EAAQC,IAAAA,MAAU,CACpCpC,SAAU,CAACkC,EAAMC,EAAQA,EAAQA,IACjCb,MAAO,CAACa,GACRhB,KAAM,CAACiB,QAInBpD,EAAQ2C,KAAOA,EACfA,EAAKD,SAAW,OAChBC,EAAKU,WAAa,sCAClBV,EAAKW\",\"file\":\"filetree.min.js\"}"}}]}