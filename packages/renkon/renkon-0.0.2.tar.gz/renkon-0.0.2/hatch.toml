[version]
path = "src/renkon/__about__.py"

# Environment Configurations
# ==========================

# Default Environment
# -------------------

[envs.default.overrides]
env.GITHUB_ACTIONS.env-vars = "COVERAGE_REPORT="

[envs.default]
dependencies = [
    "coverage[toml]>=6.5",
    "pytest",
    "pytest-cov",
    "pytest-mock",
    "pytest-randomly",
    "pytest-rerunfailures",
    "pytest-xdist"
]

[envs.default.scripts]
# --cov must not come before an argument in order to use the sources defined by config
_cov = "pytest --cov --cov-report={env:COVERAGE_REPORT:term-missing} --cov-config=pyproject.toml"
dev = "pytest -p no:randomly --no-cov {args:tests}"
cov = "_cov -p no:randomly {args:tests}"
full = "_cov -n auto --reruns 5 --reruns-delay 3 -r aR {args:tests}"

# Test Environment Matrix
# -----------------------

[[envs.test.matrix]]
python = ["3.11"]

# Coverage Environemnt
# --------------------

[envs.coverage]
detached = true
dependencies = [
    "coverage[toml]>=6.5",
    "lxml",
]

[envs.coverage.scripts]
combine = "coverage combine {args}"
report-xml = "coverage xml"
report-uncovered-html = "coverage html --skip-covered --skip-empty"
generate-summary = "python scripts/generate_coverage_summary.py"
write-summary-report = "python scripts/write_coverage_summary_report.py"

# Linting Environment
# -------------------

[envs.lint]
detached = true
dependencies = [
    "black>=23.1.0",
    "mypy>=1.0.0",
    "ruff>=0.0.243",
    "click==8.1.3", # for types
    "dacite", # for types
    "polars",  # for types
]

[envs.lint.scripts]
typing = "mypy --install-types --non-interactive {args:src/renkon tests}"
style = [
    "ruff {args:.}",
    "black --check --diff {args:.}",
]
fmt = [
    "black {args:.}",
    "ruff --fix {args:.}",
    "style",
]
all = [
    "style",
    "typing",
]