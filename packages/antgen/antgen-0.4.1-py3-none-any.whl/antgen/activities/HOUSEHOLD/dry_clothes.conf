[GENERAL]
name = washing a load of laundry

[devices]
1 = DRYER

[sequence]
# state ID, min_duration, max_duration, involves_user, must_complete_before_transition, device, prob_for_a, state_a, state_b
0=setup,               5,           15,          true,                            true,      0,        1.0,       1,       1
1=wash,                0,            0,         false,                            true,      1,        1.0,       2,       2


# As follows, find some notes on the used nomenclature and some general guidelines for activity definitions:
# 1. The [GENERAL] section of this file features four entries which must be present in all cases:
#    - 'name': A descriptive name of the activity, which will also constitute the corresponding file name for the power
#              data when written to a CSV file.
#    - 'model_varies': Many AMBAL models come with a set of activities, recorded from the same appliance. Often, they
#                      exhibit minor deviations from one another, e.g., different durations, slight changes in power
#                      consumption, etc. In order to give the data a more realistic look, setting this flag to 'true'
#                      will randomly select one of the available models whenever its activity is synthesized. If set
#                      to 'false', all operations will be exact copies of one another (unless their durations differ).
# 2. Make sure to only specify the [devices] this activity actually requires. The tool will try to find matches for
#    all entries listed there, so any unused leftover entries can cancel the synthesis.
# 3. Each operational state is specified in above table. All states require the specification of the following fields:
#    - A short name (primarily for debugging purposes)
#    - The minimum and maximum duration (use '0' to fall back to the underlying appliance model's default value).
#      If a value > 0 is provided, the underlying appliance's activity will be temporally scaled linearly, i.e., the
#      durations of all its elements will be stretched/compressed to meet the requested overall duration.
#    - A flag whether the user must be at home for a particular state to take place. This ensures that an activity is
#      only scheduled when the user is actually at home when needed.
#    - A flag whether the state must run to completion before the state machine will progress to the next step. If this
#      value is set to 'false', a delay of a few seconds is introduced before moving on to the next state.
#    - The ID of the device to operate in this state (as per the key specified in the [devices] section).
#    - The next state(s) into which the appliance operation can move, as well as the probability of the transition
#      there. The state machine will advance into state A with the probability specified, and into the state B with
#      the converse probability. Using the same value for A and B, or a probability of 1.0 effectively makes this a
#      linear flow with no variation possible.
#    - Referring to a state greater than the number of states in the state machine will terminate the state machine.
# 4. There is no need to add a "start" state with a duration of 0 seconds, yet it can be added for the sake of better
#    readability. Likewise, a state relying on an undefined appliance (e.g., '0') can act as a delay in-between states.
