# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _UltrasoundPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkAttenuationImageFilterPython
else:
    import _itkAttenuationImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkAttenuationImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkAttenuationImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkImageToImageFilterBPython
import itk.itkImageToImageFilterCommonPython
import itk.pyBasePython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
class listIndex2(collections.abc.MutableSequence):
    r"""Proxy of C++ std::list< itk::Index< 2 > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex2_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex2___nonzero__)
    __bool__ = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex2___bool__)
    __len__ = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex2___len__)
    __getslice__ = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex2___getslice__)
    __setslice__ = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex2___setslice__)
    __delslice__ = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex2___delslice__)
    __delitem__ = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex2___delitem__)
    __getitem__ = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex2___getitem__)
    __setitem__ = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex2___setitem__)
    pop = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex2_pop)
    append = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex2_append)
    empty = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex2_empty)
    size = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex2_size)
    swap = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex2_swap)
    begin = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex2_begin)
    end = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex2_end)
    rbegin = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex2_rbegin)
    rend = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex2_rend)
    clear = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex2_clear)
    get_allocator = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex2_get_allocator)
    pop_back = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex2_pop_back)
    erase = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex2_erase)

    def __init__(self, *args):
        r"""
        __init__(self) -> listIndex2
        __init__(self, other) -> listIndex2

        Parameters
        ----------
        other: std::list< itk::Index< 2 > > const &

        __init__(self, size) -> listIndex2

        Parameters
        ----------
        size: std::list< itk::Index< 2 > >::size_type

        __init__(self, size, value) -> listIndex2

        Parameters
        ----------
        size: std::list< itk::Index< 2 > >::size_type
        value: std::list< itk::Index< 2 > >::value_type const &

        """
        _itkAttenuationImageFilterPython.listIndex2_swiginit(self, _itkAttenuationImageFilterPython.new_listIndex2(*args))
    push_back = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex2_push_back)
    front = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex2_front)
    back = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex2_back)
    assign = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex2_assign)
    resize = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex2_resize)
    insert = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex2_insert)
    pop_front = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex2_pop_front)
    push_front = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex2_push_front)
    reverse = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex2_reverse)
    __swig_destroy__ = _itkAttenuationImageFilterPython.delete_listIndex2

# Register listIndex2 in _itkAttenuationImageFilterPython:
_itkAttenuationImageFilterPython.listIndex2_swigregister(listIndex2)

class listIndex3(collections.abc.MutableSequence):
    r"""Proxy of C++ std::list< itk::Index< 3 > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex3_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex3___nonzero__)
    __bool__ = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex3___bool__)
    __len__ = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex3___len__)
    __getslice__ = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex3___getslice__)
    __setslice__ = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex3___setslice__)
    __delslice__ = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex3___delslice__)
    __delitem__ = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex3___delitem__)
    __getitem__ = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex3___getitem__)
    __setitem__ = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex3___setitem__)
    pop = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex3_pop)
    append = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex3_append)
    empty = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex3_empty)
    size = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex3_size)
    swap = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex3_swap)
    begin = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex3_begin)
    end = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex3_end)
    rbegin = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex3_rbegin)
    rend = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex3_rend)
    clear = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex3_clear)
    get_allocator = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex3_get_allocator)
    pop_back = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex3_pop_back)
    erase = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex3_erase)

    def __init__(self, *args):
        r"""
        __init__(self) -> listIndex3
        __init__(self, other) -> listIndex3

        Parameters
        ----------
        other: std::list< itk::Index< 3 > > const &

        __init__(self, size) -> listIndex3

        Parameters
        ----------
        size: std::list< itk::Index< 3 > >::size_type

        __init__(self, size, value) -> listIndex3

        Parameters
        ----------
        size: std::list< itk::Index< 3 > >::size_type
        value: std::list< itk::Index< 3 > >::value_type const &

        """
        _itkAttenuationImageFilterPython.listIndex3_swiginit(self, _itkAttenuationImageFilterPython.new_listIndex3(*args))
    push_back = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex3_push_back)
    front = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex3_front)
    back = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex3_back)
    assign = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex3_assign)
    resize = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex3_resize)
    insert = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex3_insert)
    pop_front = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex3_pop_front)
    push_front = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex3_push_front)
    reverse = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex3_reverse)
    __swig_destroy__ = _itkAttenuationImageFilterPython.delete_listIndex3

# Register listIndex3 in _itkAttenuationImageFilterPython:
_itkAttenuationImageFilterPython.listIndex3_swigregister(listIndex3)

class listIndex4(collections.abc.MutableSequence):
    r"""Proxy of C++ std::list< itk::Index< 4 > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex4_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex4___nonzero__)
    __bool__ = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex4___bool__)
    __len__ = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex4___len__)
    __getslice__ = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex4___getslice__)
    __setslice__ = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex4___setslice__)
    __delslice__ = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex4___delslice__)
    __delitem__ = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex4___delitem__)
    __getitem__ = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex4___getitem__)
    __setitem__ = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex4___setitem__)
    pop = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex4_pop)
    append = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex4_append)
    empty = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex4_empty)
    size = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex4_size)
    swap = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex4_swap)
    begin = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex4_begin)
    end = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex4_end)
    rbegin = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex4_rbegin)
    rend = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex4_rend)
    clear = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex4_clear)
    get_allocator = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex4_get_allocator)
    pop_back = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex4_pop_back)
    erase = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex4_erase)

    def __init__(self, *args):
        r"""
        __init__(self) -> listIndex4
        __init__(self, other) -> listIndex4

        Parameters
        ----------
        other: std::list< itk::Index< 4 > > const &

        __init__(self, size) -> listIndex4

        Parameters
        ----------
        size: std::list< itk::Index< 4 > >::size_type

        __init__(self, size, value) -> listIndex4

        Parameters
        ----------
        size: std::list< itk::Index< 4 > >::size_type
        value: std::list< itk::Index< 4 > >::value_type const &

        """
        _itkAttenuationImageFilterPython.listIndex4_swiginit(self, _itkAttenuationImageFilterPython.new_listIndex4(*args))
    push_back = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex4_push_back)
    front = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex4_front)
    back = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex4_back)
    assign = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex4_assign)
    resize = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex4_resize)
    insert = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex4_insert)
    pop_front = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex4_pop_front)
    push_front = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex4_push_front)
    reverse = _swig_new_instance_method(_itkAttenuationImageFilterPython.listIndex4_reverse)
    __swig_destroy__ = _itkAttenuationImageFilterPython.delete_listIndex4

# Register listIndex4 in _itkAttenuationImageFilterPython:
_itkAttenuationImageFilterPython.listIndex4_swigregister(listIndex4)


def itkAttenuationImageFilterVID2ID2_New():
    return itkAttenuationImageFilterVID2ID2.New()

class itkAttenuationImageFilterVID2ID2(itk.itkImageToImageFilterBPython.itkImageToImageFilterVID2ID2):
    r"""Proxy of C++ itkAttenuationImageFilterVID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID2ID2_Clone)
    SetInputMaskImage = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID2ID2_SetInputMaskImage)
    GetInputMaskImage = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID2ID2_GetInputMaskImage)
    GetOutputMaskImage = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID2ID2_GetOutputMaskImage)
    GetOutput = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID2ID2_GetOutput)
    SetComputationMode = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID2ID2_SetComputationMode)
    GetComputationMode = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID2ID2_GetComputationMode)
    SetLabelValue = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID2ID2_SetLabelValue)
    GetLabelValue = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID2ID2_GetLabelValue)
    SetFixedEstimationDepth = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID2ID2_SetFixedEstimationDepth)
    GetFixedEstimationDepth = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID2ID2_GetFixedEstimationDepth)
    SetFixedEstimationDepthMM = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID2ID2_SetFixedEstimationDepthMM)
    GetFixedEstimationDepthMM = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID2ID2_GetFixedEstimationDepthMM)
    SetDirection = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID2ID2_SetDirection)
    GetDirection = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID2ID2_GetDirection)
    SetSamplingFrequencyMHz = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID2ID2_SetSamplingFrequencyMHz)
    GetSamplingFrequencyMHz = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID2ID2_GetSamplingFrequencyMHz)
    SetFrequencyBandStartMHz = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID2ID2_SetFrequencyBandStartMHz)
    GetFrequencyBandStartMHz = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID2ID2_GetFrequencyBandStartMHz)
    SetFrequencyBandEndMHz = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID2ID2_SetFrequencyBandEndMHz)
    GetFrequencyBandEndMHz = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID2ID2_GetFrequencyBandEndMHz)
    SetConsiderNegativeAttenuations = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID2ID2_SetConsiderNegativeAttenuations)
    GetConsiderNegativeAttenuations = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID2ID2_GetConsiderNegativeAttenuations)
    SetPadUpperBounds = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID2ID2_SetPadUpperBounds)
    GetPadUpperBounds = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID2ID2_GetPadUpperBounds)
    SetPadLowerBounds = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID2ID2_SetPadLowerBounds)
    GetPadLowerBounds = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID2ID2_GetPadLowerBounds)
    SetPadLowerBoundsMM = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID2ID2_SetPadLowerBoundsMM)
    GetPadLowerBoundsMM = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID2ID2_GetPadLowerBoundsMM)
    SetPadUpperBoundsMM = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID2ID2_SetPadUpperBoundsMM)
    GetPadUpperBoundsMM = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID2ID2_GetPadUpperBoundsMM)
    SetScanDirection = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID2ID2_SetScanDirection)
    GetScanDirection = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID2ID2_GetScanDirection)
    PrintSelf = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID2ID2_PrintSelf)
    __swig_destroy__ = _itkAttenuationImageFilterPython.delete_itkAttenuationImageFilterVID2ID2
    cast = _swig_new_static_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkAttenuationImageFilterVID2ID2

        Create a new object of the class itkAttenuationImageFilterVID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAttenuationImageFilterVID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkAttenuationImageFilterVID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkAttenuationImageFilterVID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkAttenuationImageFilterVID2ID2 in _itkAttenuationImageFilterPython:
_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID2ID2_swigregister(itkAttenuationImageFilterVID2ID2)
itkAttenuationImageFilterVID2ID2___New_orig__ = _itkAttenuationImageFilterPython.itkAttenuationImageFilterVID2ID2___New_orig__
itkAttenuationImageFilterVID2ID2_cast = _itkAttenuationImageFilterPython.itkAttenuationImageFilterVID2ID2_cast


def itkAttenuationImageFilterVID3ID3_New():
    return itkAttenuationImageFilterVID3ID3.New()

class itkAttenuationImageFilterVID3ID3(itk.itkImageToImageFilterBPython.itkImageToImageFilterVID3ID3):
    r"""Proxy of C++ itkAttenuationImageFilterVID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID3ID3_Clone)
    SetInputMaskImage = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID3ID3_SetInputMaskImage)
    GetInputMaskImage = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID3ID3_GetInputMaskImage)
    GetOutputMaskImage = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID3ID3_GetOutputMaskImage)
    GetOutput = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID3ID3_GetOutput)
    SetComputationMode = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID3ID3_SetComputationMode)
    GetComputationMode = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID3ID3_GetComputationMode)
    SetLabelValue = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID3ID3_SetLabelValue)
    GetLabelValue = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID3ID3_GetLabelValue)
    SetFixedEstimationDepth = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID3ID3_SetFixedEstimationDepth)
    GetFixedEstimationDepth = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID3ID3_GetFixedEstimationDepth)
    SetFixedEstimationDepthMM = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID3ID3_SetFixedEstimationDepthMM)
    GetFixedEstimationDepthMM = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID3ID3_GetFixedEstimationDepthMM)
    SetDirection = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID3ID3_SetDirection)
    GetDirection = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID3ID3_GetDirection)
    SetSamplingFrequencyMHz = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID3ID3_SetSamplingFrequencyMHz)
    GetSamplingFrequencyMHz = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID3ID3_GetSamplingFrequencyMHz)
    SetFrequencyBandStartMHz = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID3ID3_SetFrequencyBandStartMHz)
    GetFrequencyBandStartMHz = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID3ID3_GetFrequencyBandStartMHz)
    SetFrequencyBandEndMHz = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID3ID3_SetFrequencyBandEndMHz)
    GetFrequencyBandEndMHz = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID3ID3_GetFrequencyBandEndMHz)
    SetConsiderNegativeAttenuations = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID3ID3_SetConsiderNegativeAttenuations)
    GetConsiderNegativeAttenuations = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID3ID3_GetConsiderNegativeAttenuations)
    SetPadUpperBounds = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID3ID3_SetPadUpperBounds)
    GetPadUpperBounds = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID3ID3_GetPadUpperBounds)
    SetPadLowerBounds = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID3ID3_SetPadLowerBounds)
    GetPadLowerBounds = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID3ID3_GetPadLowerBounds)
    SetPadLowerBoundsMM = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID3ID3_SetPadLowerBoundsMM)
    GetPadLowerBoundsMM = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID3ID3_GetPadLowerBoundsMM)
    SetPadUpperBoundsMM = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID3ID3_SetPadUpperBoundsMM)
    GetPadUpperBoundsMM = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID3ID3_GetPadUpperBoundsMM)
    SetScanDirection = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID3ID3_SetScanDirection)
    GetScanDirection = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID3ID3_GetScanDirection)
    PrintSelf = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID3ID3_PrintSelf)
    __swig_destroy__ = _itkAttenuationImageFilterPython.delete_itkAttenuationImageFilterVID3ID3
    cast = _swig_new_static_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkAttenuationImageFilterVID3ID3

        Create a new object of the class itkAttenuationImageFilterVID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAttenuationImageFilterVID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkAttenuationImageFilterVID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkAttenuationImageFilterVID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkAttenuationImageFilterVID3ID3 in _itkAttenuationImageFilterPython:
_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID3ID3_swigregister(itkAttenuationImageFilterVID3ID3)
itkAttenuationImageFilterVID3ID3___New_orig__ = _itkAttenuationImageFilterPython.itkAttenuationImageFilterVID3ID3___New_orig__
itkAttenuationImageFilterVID3ID3_cast = _itkAttenuationImageFilterPython.itkAttenuationImageFilterVID3ID3_cast


def itkAttenuationImageFilterVID4ID4_New():
    return itkAttenuationImageFilterVID4ID4.New()

class itkAttenuationImageFilterVID4ID4(itk.itkImageToImageFilterBPython.itkImageToImageFilterVID4ID4):
    r"""Proxy of C++ itkAttenuationImageFilterVID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID4ID4___New_orig__)
    Clone = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID4ID4_Clone)
    SetInputMaskImage = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID4ID4_SetInputMaskImage)
    GetInputMaskImage = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID4ID4_GetInputMaskImage)
    GetOutputMaskImage = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID4ID4_GetOutputMaskImage)
    GetOutput = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID4ID4_GetOutput)
    SetComputationMode = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID4ID4_SetComputationMode)
    GetComputationMode = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID4ID4_GetComputationMode)
    SetLabelValue = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID4ID4_SetLabelValue)
    GetLabelValue = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID4ID4_GetLabelValue)
    SetFixedEstimationDepth = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID4ID4_SetFixedEstimationDepth)
    GetFixedEstimationDepth = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID4ID4_GetFixedEstimationDepth)
    SetFixedEstimationDepthMM = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID4ID4_SetFixedEstimationDepthMM)
    GetFixedEstimationDepthMM = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID4ID4_GetFixedEstimationDepthMM)
    SetDirection = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID4ID4_SetDirection)
    GetDirection = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID4ID4_GetDirection)
    SetSamplingFrequencyMHz = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID4ID4_SetSamplingFrequencyMHz)
    GetSamplingFrequencyMHz = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID4ID4_GetSamplingFrequencyMHz)
    SetFrequencyBandStartMHz = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID4ID4_SetFrequencyBandStartMHz)
    GetFrequencyBandStartMHz = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID4ID4_GetFrequencyBandStartMHz)
    SetFrequencyBandEndMHz = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID4ID4_SetFrequencyBandEndMHz)
    GetFrequencyBandEndMHz = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID4ID4_GetFrequencyBandEndMHz)
    SetConsiderNegativeAttenuations = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID4ID4_SetConsiderNegativeAttenuations)
    GetConsiderNegativeAttenuations = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID4ID4_GetConsiderNegativeAttenuations)
    SetPadUpperBounds = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID4ID4_SetPadUpperBounds)
    GetPadUpperBounds = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID4ID4_GetPadUpperBounds)
    SetPadLowerBounds = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID4ID4_SetPadLowerBounds)
    GetPadLowerBounds = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID4ID4_GetPadLowerBounds)
    SetPadLowerBoundsMM = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID4ID4_SetPadLowerBoundsMM)
    GetPadLowerBoundsMM = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID4ID4_GetPadLowerBoundsMM)
    SetPadUpperBoundsMM = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID4ID4_SetPadUpperBoundsMM)
    GetPadUpperBoundsMM = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID4ID4_GetPadUpperBoundsMM)
    SetScanDirection = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID4ID4_SetScanDirection)
    GetScanDirection = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID4ID4_GetScanDirection)
    PrintSelf = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID4ID4_PrintSelf)
    __swig_destroy__ = _itkAttenuationImageFilterPython.delete_itkAttenuationImageFilterVID4ID4
    cast = _swig_new_static_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID4ID4_cast)

    def New(*args, **kargs):
        """New() -> itkAttenuationImageFilterVID4ID4

        Create a new object of the class itkAttenuationImageFilterVID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAttenuationImageFilterVID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkAttenuationImageFilterVID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkAttenuationImageFilterVID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkAttenuationImageFilterVID4ID4 in _itkAttenuationImageFilterPython:
_itkAttenuationImageFilterPython.itkAttenuationImageFilterVID4ID4_swigregister(itkAttenuationImageFilterVID4ID4)
itkAttenuationImageFilterVID4ID4___New_orig__ = _itkAttenuationImageFilterPython.itkAttenuationImageFilterVID4ID4___New_orig__
itkAttenuationImageFilterVID4ID4_cast = _itkAttenuationImageFilterPython.itkAttenuationImageFilterVID4ID4_cast


def itkAttenuationImageFilterVIF2IF2_New():
    return itkAttenuationImageFilterVIF2IF2.New()

class itkAttenuationImageFilterVIF2IF2(itk.itkImageToImageFilterBPython.itkImageToImageFilterVIF2IF2):
    r"""Proxy of C++ itkAttenuationImageFilterVIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF2IF2_Clone)
    SetInputMaskImage = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF2IF2_SetInputMaskImage)
    GetInputMaskImage = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF2IF2_GetInputMaskImage)
    GetOutputMaskImage = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF2IF2_GetOutputMaskImage)
    GetOutput = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF2IF2_GetOutput)
    SetComputationMode = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF2IF2_SetComputationMode)
    GetComputationMode = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF2IF2_GetComputationMode)
    SetLabelValue = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF2IF2_SetLabelValue)
    GetLabelValue = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF2IF2_GetLabelValue)
    SetFixedEstimationDepth = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF2IF2_SetFixedEstimationDepth)
    GetFixedEstimationDepth = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF2IF2_GetFixedEstimationDepth)
    SetFixedEstimationDepthMM = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF2IF2_SetFixedEstimationDepthMM)
    GetFixedEstimationDepthMM = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF2IF2_GetFixedEstimationDepthMM)
    SetDirection = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF2IF2_SetDirection)
    GetDirection = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF2IF2_GetDirection)
    SetSamplingFrequencyMHz = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF2IF2_SetSamplingFrequencyMHz)
    GetSamplingFrequencyMHz = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF2IF2_GetSamplingFrequencyMHz)
    SetFrequencyBandStartMHz = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF2IF2_SetFrequencyBandStartMHz)
    GetFrequencyBandStartMHz = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF2IF2_GetFrequencyBandStartMHz)
    SetFrequencyBandEndMHz = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF2IF2_SetFrequencyBandEndMHz)
    GetFrequencyBandEndMHz = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF2IF2_GetFrequencyBandEndMHz)
    SetConsiderNegativeAttenuations = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF2IF2_SetConsiderNegativeAttenuations)
    GetConsiderNegativeAttenuations = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF2IF2_GetConsiderNegativeAttenuations)
    SetPadUpperBounds = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF2IF2_SetPadUpperBounds)
    GetPadUpperBounds = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF2IF2_GetPadUpperBounds)
    SetPadLowerBounds = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF2IF2_SetPadLowerBounds)
    GetPadLowerBounds = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF2IF2_GetPadLowerBounds)
    SetPadLowerBoundsMM = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF2IF2_SetPadLowerBoundsMM)
    GetPadLowerBoundsMM = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF2IF2_GetPadLowerBoundsMM)
    SetPadUpperBoundsMM = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF2IF2_SetPadUpperBoundsMM)
    GetPadUpperBoundsMM = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF2IF2_GetPadUpperBoundsMM)
    SetScanDirection = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF2IF2_SetScanDirection)
    GetScanDirection = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF2IF2_GetScanDirection)
    PrintSelf = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF2IF2_PrintSelf)
    __swig_destroy__ = _itkAttenuationImageFilterPython.delete_itkAttenuationImageFilterVIF2IF2
    cast = _swig_new_static_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkAttenuationImageFilterVIF2IF2

        Create a new object of the class itkAttenuationImageFilterVIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAttenuationImageFilterVIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkAttenuationImageFilterVIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkAttenuationImageFilterVIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkAttenuationImageFilterVIF2IF2 in _itkAttenuationImageFilterPython:
_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF2IF2_swigregister(itkAttenuationImageFilterVIF2IF2)
itkAttenuationImageFilterVIF2IF2___New_orig__ = _itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF2IF2___New_orig__
itkAttenuationImageFilterVIF2IF2_cast = _itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF2IF2_cast


def itkAttenuationImageFilterVIF3IF3_New():
    return itkAttenuationImageFilterVIF3IF3.New()

class itkAttenuationImageFilterVIF3IF3(itk.itkImageToImageFilterBPython.itkImageToImageFilterVIF3IF3):
    r"""Proxy of C++ itkAttenuationImageFilterVIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF3IF3_Clone)
    SetInputMaskImage = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF3IF3_SetInputMaskImage)
    GetInputMaskImage = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF3IF3_GetInputMaskImage)
    GetOutputMaskImage = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF3IF3_GetOutputMaskImage)
    GetOutput = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF3IF3_GetOutput)
    SetComputationMode = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF3IF3_SetComputationMode)
    GetComputationMode = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF3IF3_GetComputationMode)
    SetLabelValue = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF3IF3_SetLabelValue)
    GetLabelValue = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF3IF3_GetLabelValue)
    SetFixedEstimationDepth = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF3IF3_SetFixedEstimationDepth)
    GetFixedEstimationDepth = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF3IF3_GetFixedEstimationDepth)
    SetFixedEstimationDepthMM = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF3IF3_SetFixedEstimationDepthMM)
    GetFixedEstimationDepthMM = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF3IF3_GetFixedEstimationDepthMM)
    SetDirection = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF3IF3_SetDirection)
    GetDirection = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF3IF3_GetDirection)
    SetSamplingFrequencyMHz = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF3IF3_SetSamplingFrequencyMHz)
    GetSamplingFrequencyMHz = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF3IF3_GetSamplingFrequencyMHz)
    SetFrequencyBandStartMHz = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF3IF3_SetFrequencyBandStartMHz)
    GetFrequencyBandStartMHz = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF3IF3_GetFrequencyBandStartMHz)
    SetFrequencyBandEndMHz = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF3IF3_SetFrequencyBandEndMHz)
    GetFrequencyBandEndMHz = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF3IF3_GetFrequencyBandEndMHz)
    SetConsiderNegativeAttenuations = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF3IF3_SetConsiderNegativeAttenuations)
    GetConsiderNegativeAttenuations = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF3IF3_GetConsiderNegativeAttenuations)
    SetPadUpperBounds = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF3IF3_SetPadUpperBounds)
    GetPadUpperBounds = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF3IF3_GetPadUpperBounds)
    SetPadLowerBounds = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF3IF3_SetPadLowerBounds)
    GetPadLowerBounds = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF3IF3_GetPadLowerBounds)
    SetPadLowerBoundsMM = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF3IF3_SetPadLowerBoundsMM)
    GetPadLowerBoundsMM = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF3IF3_GetPadLowerBoundsMM)
    SetPadUpperBoundsMM = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF3IF3_SetPadUpperBoundsMM)
    GetPadUpperBoundsMM = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF3IF3_GetPadUpperBoundsMM)
    SetScanDirection = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF3IF3_SetScanDirection)
    GetScanDirection = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF3IF3_GetScanDirection)
    PrintSelf = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF3IF3_PrintSelf)
    __swig_destroy__ = _itkAttenuationImageFilterPython.delete_itkAttenuationImageFilterVIF3IF3
    cast = _swig_new_static_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkAttenuationImageFilterVIF3IF3

        Create a new object of the class itkAttenuationImageFilterVIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAttenuationImageFilterVIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkAttenuationImageFilterVIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkAttenuationImageFilterVIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkAttenuationImageFilterVIF3IF3 in _itkAttenuationImageFilterPython:
_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF3IF3_swigregister(itkAttenuationImageFilterVIF3IF3)
itkAttenuationImageFilterVIF3IF3___New_orig__ = _itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF3IF3___New_orig__
itkAttenuationImageFilterVIF3IF3_cast = _itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF3IF3_cast


def itkAttenuationImageFilterVIF4IF4_New():
    return itkAttenuationImageFilterVIF4IF4.New()

class itkAttenuationImageFilterVIF4IF4(itk.itkImageToImageFilterBPython.itkImageToImageFilterVIF4IF4):
    r"""Proxy of C++ itkAttenuationImageFilterVIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF4IF4___New_orig__)
    Clone = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF4IF4_Clone)
    SetInputMaskImage = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF4IF4_SetInputMaskImage)
    GetInputMaskImage = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF4IF4_GetInputMaskImage)
    GetOutputMaskImage = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF4IF4_GetOutputMaskImage)
    GetOutput = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF4IF4_GetOutput)
    SetComputationMode = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF4IF4_SetComputationMode)
    GetComputationMode = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF4IF4_GetComputationMode)
    SetLabelValue = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF4IF4_SetLabelValue)
    GetLabelValue = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF4IF4_GetLabelValue)
    SetFixedEstimationDepth = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF4IF4_SetFixedEstimationDepth)
    GetFixedEstimationDepth = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF4IF4_GetFixedEstimationDepth)
    SetFixedEstimationDepthMM = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF4IF4_SetFixedEstimationDepthMM)
    GetFixedEstimationDepthMM = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF4IF4_GetFixedEstimationDepthMM)
    SetDirection = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF4IF4_SetDirection)
    GetDirection = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF4IF4_GetDirection)
    SetSamplingFrequencyMHz = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF4IF4_SetSamplingFrequencyMHz)
    GetSamplingFrequencyMHz = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF4IF4_GetSamplingFrequencyMHz)
    SetFrequencyBandStartMHz = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF4IF4_SetFrequencyBandStartMHz)
    GetFrequencyBandStartMHz = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF4IF4_GetFrequencyBandStartMHz)
    SetFrequencyBandEndMHz = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF4IF4_SetFrequencyBandEndMHz)
    GetFrequencyBandEndMHz = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF4IF4_GetFrequencyBandEndMHz)
    SetConsiderNegativeAttenuations = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF4IF4_SetConsiderNegativeAttenuations)
    GetConsiderNegativeAttenuations = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF4IF4_GetConsiderNegativeAttenuations)
    SetPadUpperBounds = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF4IF4_SetPadUpperBounds)
    GetPadUpperBounds = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF4IF4_GetPadUpperBounds)
    SetPadLowerBounds = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF4IF4_SetPadLowerBounds)
    GetPadLowerBounds = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF4IF4_GetPadLowerBounds)
    SetPadLowerBoundsMM = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF4IF4_SetPadLowerBoundsMM)
    GetPadLowerBoundsMM = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF4IF4_GetPadLowerBoundsMM)
    SetPadUpperBoundsMM = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF4IF4_SetPadUpperBoundsMM)
    GetPadUpperBoundsMM = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF4IF4_GetPadUpperBoundsMM)
    SetScanDirection = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF4IF4_SetScanDirection)
    GetScanDirection = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF4IF4_GetScanDirection)
    PrintSelf = _swig_new_instance_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF4IF4_PrintSelf)
    __swig_destroy__ = _itkAttenuationImageFilterPython.delete_itkAttenuationImageFilterVIF4IF4
    cast = _swig_new_static_method(_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF4IF4_cast)

    def New(*args, **kargs):
        """New() -> itkAttenuationImageFilterVIF4IF4

        Create a new object of the class itkAttenuationImageFilterVIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAttenuationImageFilterVIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkAttenuationImageFilterVIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkAttenuationImageFilterVIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkAttenuationImageFilterVIF4IF4 in _itkAttenuationImageFilterPython:
_itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF4IF4_swigregister(itkAttenuationImageFilterVIF4IF4)
itkAttenuationImageFilterVIF4IF4___New_orig__ = _itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF4IF4___New_orig__
itkAttenuationImageFilterVIF4IF4_cast = _itkAttenuationImageFilterPython.itkAttenuationImageFilterVIF4IF4_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def attenuation_image_filter(*args: itkt.ImageLike,  input_mask_image: itkt.Image=..., computation_mode: int=..., label_value: int=..., fixed_estimation_depth: int=..., fixed_estimation_depth_mm: float=..., direction: int=..., sampling_frequency_m_hz: float=..., frequency_band_start_m_hz: float=..., frequency_band_end_m_hz: float=..., consider_negative_attenuations: bool=..., pad_upper_bounds: int=..., pad_lower_bounds: int=..., pad_lower_bounds_mm: float=..., pad_upper_bounds_mm: float=..., scan_direction: int=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for AttenuationImageFilter"""
    import itk

    kwarg_typehints = { 'input_mask_image':input_mask_image,'computation_mode':computation_mode,'label_value':label_value,'fixed_estimation_depth':fixed_estimation_depth,'fixed_estimation_depth_mm':fixed_estimation_depth_mm,'direction':direction,'sampling_frequency_m_hz':sampling_frequency_m_hz,'frequency_band_start_m_hz':frequency_band_start_m_hz,'frequency_band_end_m_hz':frequency_band_end_m_hz,'consider_negative_attenuations':consider_negative_attenuations,'pad_upper_bounds':pad_upper_bounds,'pad_lower_bounds':pad_lower_bounds,'pad_lower_bounds_mm':pad_lower_bounds_mm,'pad_upper_bounds_mm':pad_upper_bounds_mm,'scan_direction':scan_direction }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)

    instance = itk.AttenuationImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def attenuation_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.Ultrasound.AttenuationImageFilter
    attenuation_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    attenuation_image_filter.__doc__ = filter_object.__doc__




