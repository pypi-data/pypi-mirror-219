# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _UltrasoundPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkSpectra1DSupportWindowImageFilterPython
else:
    import _itkSpectra1DSupportWindowImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkSpectra1DSupportWindowImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkSpectra1DSupportWindowImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkImageToImageFilterCommonPython
import itk.pyBasePython
import itk.itkImagePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkRGBAPixelPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImageRegionPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageUltrasoundPython
import itk.itkImageSourceCommonPython
class itkSpectra1DSupportWindowImageFilterISS2_Superclass_Superclass(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterISS2_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_Superclass_Superclass_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_Superclass_Superclass_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_Superclass_Superclass_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_Superclass_Superclass_MakeOutput)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterISS2_Superclass_Superclass
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_Superclass_Superclass_cast)

# Register itkSpectra1DSupportWindowImageFilterISS2_Superclass_Superclass in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_Superclass_Superclass_swigregister(itkSpectra1DSupportWindowImageFilterISS2_Superclass_Superclass)
itkSpectra1DSupportWindowImageFilterISS2_Superclass_Superclass_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_Superclass_Superclass_cast

class itkSpectra1DSupportWindowImageFilterISS3_Superclass_Superclass(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterISS3_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_Superclass_Superclass_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_Superclass_Superclass_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_Superclass_Superclass_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_Superclass_Superclass_MakeOutput)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterISS3_Superclass_Superclass
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_Superclass_Superclass_cast)

# Register itkSpectra1DSupportWindowImageFilterISS3_Superclass_Superclass in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_Superclass_Superclass_swigregister(itkSpectra1DSupportWindowImageFilterISS3_Superclass_Superclass)
itkSpectra1DSupportWindowImageFilterISS3_Superclass_Superclass_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_Superclass_Superclass_cast

class itkSpectra1DSupportWindowImageFilterISS4_Superclass_Superclass(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterISS4_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_Superclass_Superclass_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_Superclass_Superclass_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_Superclass_Superclass_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_Superclass_Superclass_MakeOutput)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterISS4_Superclass_Superclass
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_Superclass_Superclass_cast)

# Register itkSpectra1DSupportWindowImageFilterISS4_Superclass_Superclass in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_Superclass_Superclass_swigregister(itkSpectra1DSupportWindowImageFilterISS4_Superclass_Superclass)
itkSpectra1DSupportWindowImageFilterISS4_Superclass_Superclass_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_Superclass_Superclass_cast

class itkSpectra1DSupportWindowImageFilterIUC2_Superclass(itkSpectra1DSupportWindowImageFilterISS2_Superclass_Superclass):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterIUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterIUC2_Superclass
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_Superclass_cast)

# Register itkSpectra1DSupportWindowImageFilterIUC2_Superclass in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_Superclass_swigregister(itkSpectra1DSupportWindowImageFilterIUC2_Superclass)
itkSpectra1DSupportWindowImageFilterIUC2_Superclass_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_Superclass_cast

class itkSpectra1DSupportWindowImageFilterIUC2_Superclass_Superclass(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterIUC2_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_Superclass_Superclass_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_Superclass_Superclass_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_Superclass_Superclass_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_Superclass_Superclass_MakeOutput)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterIUC2_Superclass_Superclass
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_Superclass_Superclass_cast)

# Register itkSpectra1DSupportWindowImageFilterIUC2_Superclass_Superclass in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_Superclass_Superclass_swigregister(itkSpectra1DSupportWindowImageFilterIUC2_Superclass_Superclass)
itkSpectra1DSupportWindowImageFilterIUC2_Superclass_Superclass_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_Superclass_Superclass_cast

class itkSpectra1DSupportWindowImageFilterIUC3_Superclass(itkSpectra1DSupportWindowImageFilterISS3_Superclass_Superclass):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterIUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterIUC3_Superclass
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_Superclass_cast)

# Register itkSpectra1DSupportWindowImageFilterIUC3_Superclass in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_Superclass_swigregister(itkSpectra1DSupportWindowImageFilterIUC3_Superclass)
itkSpectra1DSupportWindowImageFilterIUC3_Superclass_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_Superclass_cast

class itkSpectra1DSupportWindowImageFilterIUC3_Superclass_Superclass(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterIUC3_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_Superclass_Superclass_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_Superclass_Superclass_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_Superclass_Superclass_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_Superclass_Superclass_MakeOutput)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterIUC3_Superclass_Superclass
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_Superclass_Superclass_cast)

# Register itkSpectra1DSupportWindowImageFilterIUC3_Superclass_Superclass in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_Superclass_Superclass_swigregister(itkSpectra1DSupportWindowImageFilterIUC3_Superclass_Superclass)
itkSpectra1DSupportWindowImageFilterIUC3_Superclass_Superclass_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_Superclass_Superclass_cast

class itkSpectra1DSupportWindowImageFilterIUC4_Superclass(itkSpectra1DSupportWindowImageFilterISS4_Superclass_Superclass):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterIUC4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterIUC4_Superclass
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_Superclass_cast)

# Register itkSpectra1DSupportWindowImageFilterIUC4_Superclass in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_Superclass_swigregister(itkSpectra1DSupportWindowImageFilterIUC4_Superclass)
itkSpectra1DSupportWindowImageFilterIUC4_Superclass_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_Superclass_cast

class itkSpectra1DSupportWindowImageFilterIUC4_Superclass_Superclass(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterIUC4_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_Superclass_Superclass_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_Superclass_Superclass_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_Superclass_Superclass_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_Superclass_Superclass_MakeOutput)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterIUC4_Superclass_Superclass
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_Superclass_Superclass_cast)

# Register itkSpectra1DSupportWindowImageFilterIUC4_Superclass_Superclass in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_Superclass_Superclass_swigregister(itkSpectra1DSupportWindowImageFilterIUC4_Superclass_Superclass)
itkSpectra1DSupportWindowImageFilterIUC4_Superclass_Superclass_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_Superclass_Superclass_cast

class itkSpectra1DSupportWindowImageFilterIUS2_Superclass(itkSpectra1DSupportWindowImageFilterISS2_Superclass_Superclass):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterIUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterIUS2_Superclass
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_Superclass_cast)

# Register itkSpectra1DSupportWindowImageFilterIUS2_Superclass in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_Superclass_swigregister(itkSpectra1DSupportWindowImageFilterIUS2_Superclass)
itkSpectra1DSupportWindowImageFilterIUS2_Superclass_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_Superclass_cast

class itkSpectra1DSupportWindowImageFilterIUS2_Superclass_Superclass(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterIUS2_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_Superclass_Superclass_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_Superclass_Superclass_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_Superclass_Superclass_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_Superclass_Superclass_MakeOutput)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterIUS2_Superclass_Superclass
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_Superclass_Superclass_cast)

# Register itkSpectra1DSupportWindowImageFilterIUS2_Superclass_Superclass in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_Superclass_Superclass_swigregister(itkSpectra1DSupportWindowImageFilterIUS2_Superclass_Superclass)
itkSpectra1DSupportWindowImageFilterIUS2_Superclass_Superclass_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_Superclass_Superclass_cast

class itkSpectra1DSupportWindowImageFilterIUS3_Superclass(itkSpectra1DSupportWindowImageFilterISS3_Superclass_Superclass):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterIUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterIUS3_Superclass
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_Superclass_cast)

# Register itkSpectra1DSupportWindowImageFilterIUS3_Superclass in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_Superclass_swigregister(itkSpectra1DSupportWindowImageFilterIUS3_Superclass)
itkSpectra1DSupportWindowImageFilterIUS3_Superclass_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_Superclass_cast

class itkSpectra1DSupportWindowImageFilterIUS3_Superclass_Superclass(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterIUS3_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_Superclass_Superclass_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_Superclass_Superclass_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_Superclass_Superclass_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_Superclass_Superclass_MakeOutput)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterIUS3_Superclass_Superclass
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_Superclass_Superclass_cast)

# Register itkSpectra1DSupportWindowImageFilterIUS3_Superclass_Superclass in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_Superclass_Superclass_swigregister(itkSpectra1DSupportWindowImageFilterIUS3_Superclass_Superclass)
itkSpectra1DSupportWindowImageFilterIUS3_Superclass_Superclass_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_Superclass_Superclass_cast

class itkSpectra1DSupportWindowImageFilterIUS4_Superclass(itkSpectra1DSupportWindowImageFilterISS4_Superclass_Superclass):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterIUS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterIUS4_Superclass
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_Superclass_cast)

# Register itkSpectra1DSupportWindowImageFilterIUS4_Superclass in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_Superclass_swigregister(itkSpectra1DSupportWindowImageFilterIUS4_Superclass)
itkSpectra1DSupportWindowImageFilterIUS4_Superclass_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_Superclass_cast

class itkSpectra1DSupportWindowImageFilterIUS4_Superclass_Superclass(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterIUS4_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_Superclass_Superclass_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_Superclass_Superclass_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_Superclass_Superclass_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_Superclass_Superclass_MakeOutput)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterIUS4_Superclass_Superclass
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_Superclass_Superclass_cast)

# Register itkSpectra1DSupportWindowImageFilterIUS4_Superclass_Superclass in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_Superclass_Superclass_swigregister(itkSpectra1DSupportWindowImageFilterIUS4_Superclass_Superclass)
itkSpectra1DSupportWindowImageFilterIUS4_Superclass_Superclass_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_Superclass_Superclass_cast

class itkSpectra1DSupportWindowImageFilterISS2_Superclass(itkSpectra1DSupportWindowImageFilterISS2_Superclass_Superclass):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterISS2_Superclass
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_Superclass_cast)

# Register itkSpectra1DSupportWindowImageFilterISS2_Superclass in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_Superclass_swigregister(itkSpectra1DSupportWindowImageFilterISS2_Superclass)
itkSpectra1DSupportWindowImageFilterISS2_Superclass_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_Superclass_cast

class itkSpectra1DSupportWindowImageFilterISS3_Superclass(itkSpectra1DSupportWindowImageFilterISS3_Superclass_Superclass):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterISS3_Superclass
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_Superclass_cast)

# Register itkSpectra1DSupportWindowImageFilterISS3_Superclass in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_Superclass_swigregister(itkSpectra1DSupportWindowImageFilterISS3_Superclass)
itkSpectra1DSupportWindowImageFilterISS3_Superclass_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_Superclass_cast

class itkSpectra1DSupportWindowImageFilterISS4_Superclass(itkSpectra1DSupportWindowImageFilterISS4_Superclass_Superclass):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterISS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterISS4_Superclass
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_Superclass_cast)

# Register itkSpectra1DSupportWindowImageFilterISS4_Superclass in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_Superclass_swigregister(itkSpectra1DSupportWindowImageFilterISS4_Superclass)
itkSpectra1DSupportWindowImageFilterISS4_Superclass_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_Superclass_cast


def itkSpectra1DSupportWindowImageFilterIUC2_New():
    return itkSpectra1DSupportWindowImageFilterIUC2.New()

class itkSpectra1DSupportWindowImageFilterIUC2(itkSpectra1DSupportWindowImageFilterIUC2_Superclass):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterIUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_Clone)
    GetFFT1DSize = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_GetFFT1DSize)
    SetFFT1DSize = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_SetFFT1DSize)
    GetStep = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_GetStep)
    SetStep = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_SetStep)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterIUC2
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_cast)

    def New(*args, **kargs):
        """New() -> itkSpectra1DSupportWindowImageFilterIUC2

        Create a new object of the class itkSpectra1DSupportWindowImageFilterIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpectra1DSupportWindowImageFilterIUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpectra1DSupportWindowImageFilterIUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpectra1DSupportWindowImageFilterIUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpectra1DSupportWindowImageFilterIUC2 in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_swigregister(itkSpectra1DSupportWindowImageFilterIUC2)
itkSpectra1DSupportWindowImageFilterIUC2___New_orig__ = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2___New_orig__
itkSpectra1DSupportWindowImageFilterIUC2_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_cast


def itkSpectra1DSupportWindowImageFilterIUC3_New():
    return itkSpectra1DSupportWindowImageFilterIUC3.New()

class itkSpectra1DSupportWindowImageFilterIUC3(itkSpectra1DSupportWindowImageFilterIUC3_Superclass):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_Clone)
    GetFFT1DSize = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_GetFFT1DSize)
    SetFFT1DSize = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_SetFFT1DSize)
    GetStep = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_GetStep)
    SetStep = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_SetStep)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterIUC3
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_cast)

    def New(*args, **kargs):
        """New() -> itkSpectra1DSupportWindowImageFilterIUC3

        Create a new object of the class itkSpectra1DSupportWindowImageFilterIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpectra1DSupportWindowImageFilterIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpectra1DSupportWindowImageFilterIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpectra1DSupportWindowImageFilterIUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpectra1DSupportWindowImageFilterIUC3 in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_swigregister(itkSpectra1DSupportWindowImageFilterIUC3)
itkSpectra1DSupportWindowImageFilterIUC3___New_orig__ = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3___New_orig__
itkSpectra1DSupportWindowImageFilterIUC3_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_cast


def itkSpectra1DSupportWindowImageFilterIUC4_New():
    return itkSpectra1DSupportWindowImageFilterIUC4.New()

class itkSpectra1DSupportWindowImageFilterIUC4(itkSpectra1DSupportWindowImageFilterIUC4_Superclass):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterIUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_Clone)
    GetFFT1DSize = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_GetFFT1DSize)
    SetFFT1DSize = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_SetFFT1DSize)
    GetStep = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_GetStep)
    SetStep = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_SetStep)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterIUC4
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_cast)

    def New(*args, **kargs):
        """New() -> itkSpectra1DSupportWindowImageFilterIUC4

        Create a new object of the class itkSpectra1DSupportWindowImageFilterIUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpectra1DSupportWindowImageFilterIUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpectra1DSupportWindowImageFilterIUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpectra1DSupportWindowImageFilterIUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpectra1DSupportWindowImageFilterIUC4 in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_swigregister(itkSpectra1DSupportWindowImageFilterIUC4)
itkSpectra1DSupportWindowImageFilterIUC4___New_orig__ = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4___New_orig__
itkSpectra1DSupportWindowImageFilterIUC4_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_cast


def itkSpectra1DSupportWindowImageFilterIUS2_New():
    return itkSpectra1DSupportWindowImageFilterIUS2.New()

class itkSpectra1DSupportWindowImageFilterIUS2(itkSpectra1DSupportWindowImageFilterIUS2_Superclass):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterIUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_Clone)
    GetFFT1DSize = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_GetFFT1DSize)
    SetFFT1DSize = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_SetFFT1DSize)
    GetStep = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_GetStep)
    SetStep = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_SetStep)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterIUS2
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_cast)

    def New(*args, **kargs):
        """New() -> itkSpectra1DSupportWindowImageFilterIUS2

        Create a new object of the class itkSpectra1DSupportWindowImageFilterIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpectra1DSupportWindowImageFilterIUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpectra1DSupportWindowImageFilterIUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpectra1DSupportWindowImageFilterIUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpectra1DSupportWindowImageFilterIUS2 in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_swigregister(itkSpectra1DSupportWindowImageFilterIUS2)
itkSpectra1DSupportWindowImageFilterIUS2___New_orig__ = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2___New_orig__
itkSpectra1DSupportWindowImageFilterIUS2_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_cast


def itkSpectra1DSupportWindowImageFilterIUS3_New():
    return itkSpectra1DSupportWindowImageFilterIUS3.New()

class itkSpectra1DSupportWindowImageFilterIUS3(itkSpectra1DSupportWindowImageFilterIUS3_Superclass):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterIUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_Clone)
    GetFFT1DSize = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_GetFFT1DSize)
    SetFFT1DSize = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_SetFFT1DSize)
    GetStep = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_GetStep)
    SetStep = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_SetStep)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterIUS3
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_cast)

    def New(*args, **kargs):
        """New() -> itkSpectra1DSupportWindowImageFilterIUS3

        Create a new object of the class itkSpectra1DSupportWindowImageFilterIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpectra1DSupportWindowImageFilterIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpectra1DSupportWindowImageFilterIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpectra1DSupportWindowImageFilterIUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpectra1DSupportWindowImageFilterIUS3 in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_swigregister(itkSpectra1DSupportWindowImageFilterIUS3)
itkSpectra1DSupportWindowImageFilterIUS3___New_orig__ = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3___New_orig__
itkSpectra1DSupportWindowImageFilterIUS3_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_cast


def itkSpectra1DSupportWindowImageFilterIUS4_New():
    return itkSpectra1DSupportWindowImageFilterIUS4.New()

class itkSpectra1DSupportWindowImageFilterIUS4(itkSpectra1DSupportWindowImageFilterIUS4_Superclass):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterIUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_Clone)
    GetFFT1DSize = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_GetFFT1DSize)
    SetFFT1DSize = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_SetFFT1DSize)
    GetStep = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_GetStep)
    SetStep = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_SetStep)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterIUS4
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_cast)

    def New(*args, **kargs):
        """New() -> itkSpectra1DSupportWindowImageFilterIUS4

        Create a new object of the class itkSpectra1DSupportWindowImageFilterIUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpectra1DSupportWindowImageFilterIUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpectra1DSupportWindowImageFilterIUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpectra1DSupportWindowImageFilterIUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpectra1DSupportWindowImageFilterIUS4 in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_swigregister(itkSpectra1DSupportWindowImageFilterIUS4)
itkSpectra1DSupportWindowImageFilterIUS4___New_orig__ = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4___New_orig__
itkSpectra1DSupportWindowImageFilterIUS4_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_cast


def itkSpectra1DSupportWindowImageFilterISS2_New():
    return itkSpectra1DSupportWindowImageFilterISS2.New()

class itkSpectra1DSupportWindowImageFilterISS2(itkSpectra1DSupportWindowImageFilterISS2_Superclass):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_Clone)
    GetFFT1DSize = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_GetFFT1DSize)
    SetFFT1DSize = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_SetFFT1DSize)
    GetStep = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_GetStep)
    SetStep = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_SetStep)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterISS2
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_cast)

    def New(*args, **kargs):
        """New() -> itkSpectra1DSupportWindowImageFilterISS2

        Create a new object of the class itkSpectra1DSupportWindowImageFilterISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpectra1DSupportWindowImageFilterISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpectra1DSupportWindowImageFilterISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpectra1DSupportWindowImageFilterISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpectra1DSupportWindowImageFilterISS2 in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_swigregister(itkSpectra1DSupportWindowImageFilterISS2)
itkSpectra1DSupportWindowImageFilterISS2___New_orig__ = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2___New_orig__
itkSpectra1DSupportWindowImageFilterISS2_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_cast


def itkSpectra1DSupportWindowImageFilterISS3_New():
    return itkSpectra1DSupportWindowImageFilterISS3.New()

class itkSpectra1DSupportWindowImageFilterISS3(itkSpectra1DSupportWindowImageFilterISS3_Superclass):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_Clone)
    GetFFT1DSize = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_GetFFT1DSize)
    SetFFT1DSize = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_SetFFT1DSize)
    GetStep = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_GetStep)
    SetStep = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_SetStep)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterISS3
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_cast)

    def New(*args, **kargs):
        """New() -> itkSpectra1DSupportWindowImageFilterISS3

        Create a new object of the class itkSpectra1DSupportWindowImageFilterISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpectra1DSupportWindowImageFilterISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpectra1DSupportWindowImageFilterISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpectra1DSupportWindowImageFilterISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpectra1DSupportWindowImageFilterISS3 in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_swigregister(itkSpectra1DSupportWindowImageFilterISS3)
itkSpectra1DSupportWindowImageFilterISS3___New_orig__ = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3___New_orig__
itkSpectra1DSupportWindowImageFilterISS3_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_cast


def itkSpectra1DSupportWindowImageFilterISS4_New():
    return itkSpectra1DSupportWindowImageFilterISS4.New()

class itkSpectra1DSupportWindowImageFilterISS4(itkSpectra1DSupportWindowImageFilterISS4_Superclass):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4___New_orig__)
    Clone = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_Clone)
    GetFFT1DSize = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_GetFFT1DSize)
    SetFFT1DSize = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_SetFFT1DSize)
    GetStep = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_GetStep)
    SetStep = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_SetStep)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterISS4
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_cast)

    def New(*args, **kargs):
        """New() -> itkSpectra1DSupportWindowImageFilterISS4

        Create a new object of the class itkSpectra1DSupportWindowImageFilterISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpectra1DSupportWindowImageFilterISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpectra1DSupportWindowImageFilterISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpectra1DSupportWindowImageFilterISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpectra1DSupportWindowImageFilterISS4 in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_swigregister(itkSpectra1DSupportWindowImageFilterISS4)
itkSpectra1DSupportWindowImageFilterISS4___New_orig__ = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4___New_orig__
itkSpectra1DSupportWindowImageFilterISS4_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def spectra1_d_support_window_image_filter(*args: itkt.ImageLike,  fft1_d_size: int=..., step: int=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for Spectra1DSupportWindowImageFilter"""
    import itk

    kwarg_typehints = { 'fft1_d_size':fft1_d_size,'step':step }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)

    instance = itk.Spectra1DSupportWindowImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def spectra1_d_support_window_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.Ultrasound.Spectra1DSupportWindowImageFilter
    spectra1_d_support_window_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    spectra1_d_support_window_image_filter.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def image_source(*args, **kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ImageSource"""
    import itk

    kwarg_typehints = {  }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)

    instance = itk.ImageSource.New(*args, **kwargs)
    return instance.__internal_call__()

def image_source_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.Ultrasound.ImageSource
    image_source.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    image_source.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def image_to_image_filter(*args: itkt.ImageLike, **kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ImageToImageFilter"""
    import itk

    kwarg_typehints = {  }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)

    instance = itk.ImageToImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def image_to_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.Ultrasound.ImageToImageFilter
    image_to_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    image_to_image_filter.__doc__ = filter_object.__doc__




