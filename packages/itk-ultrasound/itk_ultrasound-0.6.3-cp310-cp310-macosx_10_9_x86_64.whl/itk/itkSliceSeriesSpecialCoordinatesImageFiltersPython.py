# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _UltrasoundPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkSliceSeriesSpecialCoordinatesImageFiltersPython
else:
    import _itkSliceSeriesSpecialCoordinatesImageFiltersPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkSliceSeriesSpecialCoordinatesImagePython
import itk.itkEuler3DTransformPython
import itk.itkArray2DPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.itkPointPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkRigid3DTransformPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkVariableLengthVectorPython
import itk.itkDiffusionTensor3DPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkTransformBasePython
import itk.itkArrayPython
import itk.itkOptimizerParametersPython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImageRegionPython
import itk.itkExtrapolateImageFunctionPython
import itk.itkContinuousIndexPython
import itk.itkImageFunctionBasePython
import itk.itkFunctionBasePython
import itk.itkInterpolateImageFunctionPython
import itk.itkImageSourceCommonPython
import itk.itkImageSourcePython
import itk.itkVectorImagePython
import itk.ITKIOImageBaseBasePython
import itk.itkSimpleDataObjectDecoratorPython
import itk.itkImageToImageFilterCommonPython
class itkCastImageFilterSSSCIF3E3DIF3_Superclass_Superclass(itk.itkImageSourcePython.itkImageSourceIF3):
    r"""Proxy of C++ itkCastImageFilterSSSCIF3E3DIF3_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DIF3_Superclass_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DIF3_Superclass_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DIF3_Superclass_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DIF3_Superclass_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DIF3_Superclass_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DIF3_Superclass_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DIF3_Superclass_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DIF3_Superclass_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DIF3_Superclass_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DIF3_Superclass_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkCastImageFilterSSSCIF3E3DIF3_Superclass_Superclass
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DIF3_Superclass_Superclass_cast)

# Register itkCastImageFilterSSSCIF3E3DIF3_Superclass_Superclass in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DIF3_Superclass_Superclass_swigregister(itkCastImageFilterSSSCIF3E3DIF3_Superclass_Superclass)
itkCastImageFilterSSSCIF3E3DIF3_Superclass_Superclass_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DIF3_Superclass_Superclass_cast

class itkCastImageFilterSSSCIUC3E3DIUC3_Superclass_Superclass(itk.itkImageSourcePython.itkImageSourceIUC3):
    r"""Proxy of C++ itkCastImageFilterSSSCIUC3E3DIUC3_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DIUC3_Superclass_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DIUC3_Superclass_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DIUC3_Superclass_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DIUC3_Superclass_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DIUC3_Superclass_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DIUC3_Superclass_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DIUC3_Superclass_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DIUC3_Superclass_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DIUC3_Superclass_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DIUC3_Superclass_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkCastImageFilterSSSCIUC3E3DIUC3_Superclass_Superclass
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DIUC3_Superclass_Superclass_cast)

# Register itkCastImageFilterSSSCIUC3E3DIUC3_Superclass_Superclass in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DIUC3_Superclass_Superclass_swigregister(itkCastImageFilterSSSCIUC3E3DIUC3_Superclass_Superclass)
itkCastImageFilterSSSCIUC3E3DIUC3_Superclass_Superclass_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DIUC3_Superclass_Superclass_cast


def itkImageFileWriterSSSCIF3E3D_New():
    return itkImageFileWriterSSSCIF3E3D.New()

class itkImageFileWriterSSSCIF3E3D(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkImageFileWriterSSSCIF3E3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIF3E3D___New_orig__)
    Clone = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIF3E3D_Clone)
    SetInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIF3E3D_SetInput)
    GetInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIF3E3D_GetInput)
    SetFileName = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIF3E3D_SetFileName)
    GetFileName = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIF3E3D_GetFileName)
    SetImageIO = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIF3E3D_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIF3E3D_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIF3E3D_GetImageIO)
    Write = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIF3E3D_Write)
    SetIORegion = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIF3E3D_SetIORegion)
    GetIORegion = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIF3E3D_GetIORegion)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIF3E3D_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIF3E3D_GetNumberOfStreamDivisions)
    SetUseCompression = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIF3E3D_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIF3E3D_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIF3E3D_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIF3E3D_UseCompressionOff)
    SetCompressionLevel = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIF3E3D_SetCompressionLevel)
    GetCompressionLevel = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIF3E3D_GetCompressionLevel)
    SetUseInputMetaDataDictionary = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIF3E3D_SetUseInputMetaDataDictionary)
    GetUseInputMetaDataDictionary = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIF3E3D_GetUseInputMetaDataDictionary)
    UseInputMetaDataDictionaryOn = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIF3E3D_UseInputMetaDataDictionaryOn)
    UseInputMetaDataDictionaryOff = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIF3E3D_UseInputMetaDataDictionaryOff)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkImageFileWriterSSSCIF3E3D
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIF3E3D_cast)

    def New(*args, **kargs):
        """New() -> itkImageFileWriterSSSCIF3E3D

        Create a new object of the class itkImageFileWriterSSSCIF3E3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileWriterSSSCIF3E3D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileWriterSSSCIF3E3D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileWriterSSSCIF3E3D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileWriterSSSCIF3E3D in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIF3E3D_swigregister(itkImageFileWriterSSSCIF3E3D)
itkImageFileWriterSSSCIF3E3D___New_orig__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIF3E3D___New_orig__
itkImageFileWriterSSSCIF3E3D_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIF3E3D_cast


def itkImageFileWriterSSSCIUC3E3D_New():
    return itkImageFileWriterSSSCIUC3E3D.New()

class itkImageFileWriterSSSCIUC3E3D(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkImageFileWriterSSSCIUC3E3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIUC3E3D___New_orig__)
    Clone = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIUC3E3D_Clone)
    SetInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIUC3E3D_SetInput)
    GetInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIUC3E3D_GetInput)
    SetFileName = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIUC3E3D_SetFileName)
    GetFileName = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIUC3E3D_GetFileName)
    SetImageIO = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIUC3E3D_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIUC3E3D_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIUC3E3D_GetImageIO)
    Write = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIUC3E3D_Write)
    SetIORegion = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIUC3E3D_SetIORegion)
    GetIORegion = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIUC3E3D_GetIORegion)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIUC3E3D_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIUC3E3D_GetNumberOfStreamDivisions)
    SetUseCompression = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIUC3E3D_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIUC3E3D_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIUC3E3D_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIUC3E3D_UseCompressionOff)
    SetCompressionLevel = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIUC3E3D_SetCompressionLevel)
    GetCompressionLevel = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIUC3E3D_GetCompressionLevel)
    SetUseInputMetaDataDictionary = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIUC3E3D_SetUseInputMetaDataDictionary)
    GetUseInputMetaDataDictionary = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIUC3E3D_GetUseInputMetaDataDictionary)
    UseInputMetaDataDictionaryOn = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIUC3E3D_UseInputMetaDataDictionaryOn)
    UseInputMetaDataDictionaryOff = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIUC3E3D_UseInputMetaDataDictionaryOff)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkImageFileWriterSSSCIUC3E3D
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIUC3E3D_cast)

    def New(*args, **kargs):
        """New() -> itkImageFileWriterSSSCIUC3E3D

        Create a new object of the class itkImageFileWriterSSSCIUC3E3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileWriterSSSCIUC3E3D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileWriterSSSCIUC3E3D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileWriterSSSCIUC3E3D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileWriterSSSCIUC3E3D in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIUC3E3D_swigregister(itkImageFileWriterSSSCIUC3E3D)
itkImageFileWriterSSSCIUC3E3D___New_orig__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIUC3E3D___New_orig__
itkImageFileWriterSSSCIUC3E3D_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileWriterSSSCIUC3E3D_cast

class itkImageFunctionSSSCIF3E3DD(itk.itkFunctionBasePython.itkFunctionBasePD3D):
    r"""Proxy of C++ itkImageFunctionSSSCIF3E3DD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInputImage = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFunctionSSSCIF3E3DD_SetInputImage)
    GetInputImage = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFunctionSSSCIF3E3DD_GetInputImage)
    EvaluateAtIndex = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFunctionSSSCIF3E3DD_EvaluateAtIndex)
    EvaluateAtContinuousIndex = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFunctionSSSCIF3E3DD_EvaluateAtContinuousIndex)
    IsInsideBuffer = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFunctionSSSCIF3E3DD_IsInsideBuffer)
    ConvertPointToNearestIndex = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFunctionSSSCIF3E3DD_ConvertPointToNearestIndex)
    ConvertPointToContinuousIndex = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFunctionSSSCIF3E3DD_ConvertPointToContinuousIndex)
    ConvertContinuousIndexToNearestIndex = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFunctionSSSCIF3E3DD_ConvertContinuousIndexToNearestIndex)
    GetStartIndex = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFunctionSSSCIF3E3DD_GetStartIndex)
    GetEndIndex = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFunctionSSSCIF3E3DD_GetEndIndex)
    GetStartContinuousIndex = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFunctionSSSCIF3E3DD_GetStartContinuousIndex)
    GetEndContinuousIndex = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFunctionSSSCIF3E3DD_GetEndContinuousIndex)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkImageFunctionSSSCIF3E3DD
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFunctionSSSCIF3E3DD_cast)

# Register itkImageFunctionSSSCIF3E3DD in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFunctionSSSCIF3E3DD_swigregister(itkImageFunctionSSSCIF3E3DD)
itkImageFunctionSSSCIF3E3DD_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFunctionSSSCIF3E3DD_cast

class itkImageFunctionSSSCIUC3E3DD(itk.itkFunctionBasePython.itkFunctionBasePD3D):
    r"""Proxy of C++ itkImageFunctionSSSCIUC3E3DD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInputImage = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFunctionSSSCIUC3E3DD_SetInputImage)
    GetInputImage = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFunctionSSSCIUC3E3DD_GetInputImage)
    EvaluateAtIndex = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFunctionSSSCIUC3E3DD_EvaluateAtIndex)
    EvaluateAtContinuousIndex = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFunctionSSSCIUC3E3DD_EvaluateAtContinuousIndex)
    IsInsideBuffer = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFunctionSSSCIUC3E3DD_IsInsideBuffer)
    ConvertPointToNearestIndex = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFunctionSSSCIUC3E3DD_ConvertPointToNearestIndex)
    ConvertPointToContinuousIndex = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFunctionSSSCIUC3E3DD_ConvertPointToContinuousIndex)
    ConvertContinuousIndexToNearestIndex = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFunctionSSSCIUC3E3DD_ConvertContinuousIndexToNearestIndex)
    GetStartIndex = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFunctionSSSCIUC3E3DD_GetStartIndex)
    GetEndIndex = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFunctionSSSCIUC3E3DD_GetEndIndex)
    GetStartContinuousIndex = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFunctionSSSCIUC3E3DD_GetStartContinuousIndex)
    GetEndContinuousIndex = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFunctionSSSCIUC3E3DD_GetEndContinuousIndex)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkImageFunctionSSSCIUC3E3DD
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFunctionSSSCIUC3E3DD_cast)

# Register itkImageFunctionSSSCIUC3E3DD in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFunctionSSSCIUC3E3DD_swigregister(itkImageFunctionSSSCIUC3E3DD)
itkImageFunctionSSSCIUC3E3DD_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFunctionSSSCIUC3E3DD_cast

class itkImageSourceSSSCIF3E3D(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkImageSourceSSSCIF3E3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageSourceSSSCIF3E3D_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageSourceSSSCIF3E3D_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageSourceSSSCIF3E3D_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageSourceSSSCIF3E3D_MakeOutput)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkImageSourceSSSCIF3E3D
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageSourceSSSCIF3E3D_cast)

# Register itkImageSourceSSSCIF3E3D in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageSourceSSSCIF3E3D_swigregister(itkImageSourceSSSCIF3E3D)
itkImageSourceSSSCIF3E3D_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageSourceSSSCIF3E3D_cast

class itkImageSourceSSSCIUC3E3D(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkImageSourceSSSCIUC3E3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageSourceSSSCIUC3E3D_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageSourceSSSCIUC3E3D_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageSourceSSSCIUC3E3D_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageSourceSSSCIUC3E3D_MakeOutput)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkImageSourceSSSCIUC3E3D
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageSourceSSSCIUC3E3D_cast)

# Register itkImageSourceSSSCIUC3E3D in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageSourceSSSCIUC3E3D_swigregister(itkImageSourceSSSCIUC3E3D)
itkImageSourceSSSCIUC3E3D_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageSourceSSSCIUC3E3D_cast

class itkImageToImageFilterIF3SSSCIF3E3D(itkImageSourceSSSCIF3E3D):
    r"""Proxy of C++ itkImageToImageFilterIF3SSSCIF3E3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterIF3SSSCIF3E3D_SetInput)
    GetInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterIF3SSSCIF3E3D_GetInput)
    PushBackInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterIF3SSSCIF3E3D_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterIF3SSSCIF3E3D_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterIF3SSSCIF3E3D_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterIF3SSSCIF3E3D_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterIF3SSSCIF3E3D_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterIF3SSSCIF3E3D_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterIF3SSSCIF3E3D_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterIF3SSSCIF3E3D_GetDirectionTolerance)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkImageToImageFilterIF3SSSCIF3E3D
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterIF3SSSCIF3E3D_cast)

# Register itkImageToImageFilterIF3SSSCIF3E3D in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterIF3SSSCIF3E3D_swigregister(itkImageToImageFilterIF3SSSCIF3E3D)
itkImageToImageFilterIF3SSSCIF3E3D_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterIF3SSSCIF3E3D_cast

class itkImageToImageFilterIUC3SSSCIUC3E3D(itkImageSourceSSSCIUC3E3D):
    r"""Proxy of C++ itkImageToImageFilterIUC3SSSCIUC3E3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterIUC3SSSCIUC3E3D_SetInput)
    GetInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterIUC3SSSCIUC3E3D_GetInput)
    PushBackInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterIUC3SSSCIUC3E3D_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterIUC3SSSCIUC3E3D_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterIUC3SSSCIUC3E3D_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterIUC3SSSCIUC3E3D_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterIUC3SSSCIUC3E3D_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterIUC3SSSCIUC3E3D_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterIUC3SSSCIUC3E3D_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterIUC3SSSCIUC3E3D_GetDirectionTolerance)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkImageToImageFilterIUC3SSSCIUC3E3D
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterIUC3SSSCIUC3E3D_cast)

# Register itkImageToImageFilterIUC3SSSCIUC3E3D in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterIUC3SSSCIUC3E3D_swigregister(itkImageToImageFilterIUC3SSSCIUC3E3D)
itkImageToImageFilterIUC3SSSCIUC3E3D_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterIUC3SSSCIUC3E3D_cast

class itkImageToImageFilterSSSCIF3E3DIF3(itk.itkImageSourcePython.itkImageSourceIF3):
    r"""Proxy of C++ itkImageToImageFilterSSSCIF3E3DIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterSSSCIF3E3DIF3_SetInput)
    GetInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterSSSCIF3E3DIF3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterSSSCIF3E3DIF3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterSSSCIF3E3DIF3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterSSSCIF3E3DIF3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterSSSCIF3E3DIF3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterSSSCIF3E3DIF3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterSSSCIF3E3DIF3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterSSSCIF3E3DIF3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterSSSCIF3E3DIF3_GetDirectionTolerance)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkImageToImageFilterSSSCIF3E3DIF3
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterSSSCIF3E3DIF3_cast)

# Register itkImageToImageFilterSSSCIF3E3DIF3 in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterSSSCIF3E3DIF3_swigregister(itkImageToImageFilterSSSCIF3E3DIF3)
itkImageToImageFilterSSSCIF3E3DIF3_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterSSSCIF3E3DIF3_cast

class itkImageToImageFilterSSSCIF3E3DIUC3(itk.itkImageSourcePython.itkImageSourceIUC3):
    r"""Proxy of C++ itkImageToImageFilterSSSCIF3E3DIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterSSSCIF3E3DIUC3_SetInput)
    GetInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterSSSCIF3E3DIUC3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterSSSCIF3E3DIUC3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterSSSCIF3E3DIUC3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterSSSCIF3E3DIUC3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterSSSCIF3E3DIUC3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterSSSCIF3E3DIUC3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterSSSCIF3E3DIUC3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterSSSCIF3E3DIUC3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterSSSCIF3E3DIUC3_GetDirectionTolerance)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkImageToImageFilterSSSCIF3E3DIUC3
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterSSSCIF3E3DIUC3_cast)

# Register itkImageToImageFilterSSSCIF3E3DIUC3 in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterSSSCIF3E3DIUC3_swigregister(itkImageToImageFilterSSSCIF3E3DIUC3)
itkImageToImageFilterSSSCIF3E3DIUC3_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterSSSCIF3E3DIUC3_cast

class itkImageToImageFilterSSSCIUC3E3DIUC3(itk.itkImageSourcePython.itkImageSourceIUC3):
    r"""Proxy of C++ itkImageToImageFilterSSSCIUC3E3DIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterSSSCIUC3E3DIUC3_SetInput)
    GetInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterSSSCIUC3E3DIUC3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterSSSCIUC3E3DIUC3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterSSSCIUC3E3DIUC3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterSSSCIUC3E3DIUC3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterSSSCIUC3E3DIUC3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterSSSCIUC3E3DIUC3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterSSSCIUC3E3DIUC3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterSSSCIUC3E3DIUC3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterSSSCIUC3E3DIUC3_GetDirectionTolerance)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkImageToImageFilterSSSCIUC3E3DIUC3
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterSSSCIUC3E3DIUC3_cast)

# Register itkImageToImageFilterSSSCIUC3E3DIUC3 in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterSSSCIUC3E3DIUC3_swigregister(itkImageToImageFilterSSSCIUC3E3DIUC3)
itkImageToImageFilterSSSCIUC3E3DIUC3_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageToImageFilterSSSCIUC3E3DIUC3_cast

class itkInterpolateImageFunctionSSSCIF3E3DD(itkImageFunctionSSSCIF3E3DD):
    r"""Proxy of C++ itkInterpolateImageFunctionSSSCIF3E3DD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetRadius = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkInterpolateImageFunctionSSSCIF3E3DD_GetRadius)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkInterpolateImageFunctionSSSCIF3E3DD
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkInterpolateImageFunctionSSSCIF3E3DD_cast)

# Register itkInterpolateImageFunctionSSSCIF3E3DD in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkInterpolateImageFunctionSSSCIF3E3DD_swigregister(itkInterpolateImageFunctionSSSCIF3E3DD)
itkInterpolateImageFunctionSSSCIF3E3DD_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkInterpolateImageFunctionSSSCIF3E3DD_cast

class itkInterpolateImageFunctionSSSCIUC3E3DD(itkImageFunctionSSSCIUC3E3DD):
    r"""Proxy of C++ itkInterpolateImageFunctionSSSCIUC3E3DD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetRadius = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkInterpolateImageFunctionSSSCIUC3E3DD_GetRadius)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkInterpolateImageFunctionSSSCIUC3E3DD
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkInterpolateImageFunctionSSSCIUC3E3DD_cast)

# Register itkInterpolateImageFunctionSSSCIUC3E3DD in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkInterpolateImageFunctionSSSCIUC3E3DD_swigregister(itkInterpolateImageFunctionSSSCIUC3E3DD)
itkInterpolateImageFunctionSSSCIUC3E3DD_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkInterpolateImageFunctionSSSCIUC3E3DD_cast


def itkLinearInterpolateImageFunctionSSSCIF3E3DD_New():
    return itkLinearInterpolateImageFunctionSSSCIF3E3DD.New()

class itkLinearInterpolateImageFunctionSSSCIF3E3DD(itkInterpolateImageFunctionSSSCIF3E3DD):
    r"""Proxy of C++ itkLinearInterpolateImageFunctionSSSCIF3E3DD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkLinearInterpolateImageFunctionSSSCIF3E3DD___New_orig__)
    Clone = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkLinearInterpolateImageFunctionSSSCIF3E3DD_Clone)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkLinearInterpolateImageFunctionSSSCIF3E3DD
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkLinearInterpolateImageFunctionSSSCIF3E3DD_cast)

    def New(*args, **kargs):
        """New() -> itkLinearInterpolateImageFunctionSSSCIF3E3DD

        Create a new object of the class itkLinearInterpolateImageFunctionSSSCIF3E3DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLinearInterpolateImageFunctionSSSCIF3E3DD.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLinearInterpolateImageFunctionSSSCIF3E3DD.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLinearInterpolateImageFunctionSSSCIF3E3DD.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLinearInterpolateImageFunctionSSSCIF3E3DD in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkLinearInterpolateImageFunctionSSSCIF3E3DD_swigregister(itkLinearInterpolateImageFunctionSSSCIF3E3DD)
itkLinearInterpolateImageFunctionSSSCIF3E3DD___New_orig__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkLinearInterpolateImageFunctionSSSCIF3E3DD___New_orig__
itkLinearInterpolateImageFunctionSSSCIF3E3DD_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkLinearInterpolateImageFunctionSSSCIF3E3DD_cast


def itkLinearInterpolateImageFunctionSSSCIUC3E3DD_New():
    return itkLinearInterpolateImageFunctionSSSCIUC3E3DD.New()

class itkLinearInterpolateImageFunctionSSSCIUC3E3DD(itkInterpolateImageFunctionSSSCIUC3E3DD):
    r"""Proxy of C++ itkLinearInterpolateImageFunctionSSSCIUC3E3DD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkLinearInterpolateImageFunctionSSSCIUC3E3DD___New_orig__)
    Clone = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkLinearInterpolateImageFunctionSSSCIUC3E3DD_Clone)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkLinearInterpolateImageFunctionSSSCIUC3E3DD
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkLinearInterpolateImageFunctionSSSCIUC3E3DD_cast)

    def New(*args, **kargs):
        """New() -> itkLinearInterpolateImageFunctionSSSCIUC3E3DD

        Create a new object of the class itkLinearInterpolateImageFunctionSSSCIUC3E3DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLinearInterpolateImageFunctionSSSCIUC3E3DD.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLinearInterpolateImageFunctionSSSCIUC3E3DD.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLinearInterpolateImageFunctionSSSCIUC3E3DD.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLinearInterpolateImageFunctionSSSCIUC3E3DD in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkLinearInterpolateImageFunctionSSSCIUC3E3DD_swigregister(itkLinearInterpolateImageFunctionSSSCIUC3E3DD)
itkLinearInterpolateImageFunctionSSSCIUC3E3DD___New_orig__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkLinearInterpolateImageFunctionSSSCIUC3E3DD___New_orig__
itkLinearInterpolateImageFunctionSSSCIUC3E3DD_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkLinearInterpolateImageFunctionSSSCIUC3E3DD_cast


def itkNearestNeighborInterpolateImageFunctionSSSCIF3E3DD_New():
    return itkNearestNeighborInterpolateImageFunctionSSSCIF3E3DD.New()

class itkNearestNeighborInterpolateImageFunctionSSSCIF3E3DD(itkInterpolateImageFunctionSSSCIF3E3DD):
    r"""Proxy of C++ itkNearestNeighborInterpolateImageFunctionSSSCIF3E3DD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkNearestNeighborInterpolateImageFunctionSSSCIF3E3DD___New_orig__)
    Clone = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkNearestNeighborInterpolateImageFunctionSSSCIF3E3DD_Clone)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkNearestNeighborInterpolateImageFunctionSSSCIF3E3DD
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkNearestNeighborInterpolateImageFunctionSSSCIF3E3DD_cast)

    def New(*args, **kargs):
        """New() -> itkNearestNeighborInterpolateImageFunctionSSSCIF3E3DD

        Create a new object of the class itkNearestNeighborInterpolateImageFunctionSSSCIF3E3DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNearestNeighborInterpolateImageFunctionSSSCIF3E3DD.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNearestNeighborInterpolateImageFunctionSSSCIF3E3DD.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNearestNeighborInterpolateImageFunctionSSSCIF3E3DD.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNearestNeighborInterpolateImageFunctionSSSCIF3E3DD in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkNearestNeighborInterpolateImageFunctionSSSCIF3E3DD_swigregister(itkNearestNeighborInterpolateImageFunctionSSSCIF3E3DD)
itkNearestNeighborInterpolateImageFunctionSSSCIF3E3DD___New_orig__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkNearestNeighborInterpolateImageFunctionSSSCIF3E3DD___New_orig__
itkNearestNeighborInterpolateImageFunctionSSSCIF3E3DD_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkNearestNeighborInterpolateImageFunctionSSSCIF3E3DD_cast


def itkNearestNeighborInterpolateImageFunctionSSSCIUC3E3DD_New():
    return itkNearestNeighborInterpolateImageFunctionSSSCIUC3E3DD.New()

class itkNearestNeighborInterpolateImageFunctionSSSCIUC3E3DD(itkInterpolateImageFunctionSSSCIUC3E3DD):
    r"""Proxy of C++ itkNearestNeighborInterpolateImageFunctionSSSCIUC3E3DD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkNearestNeighborInterpolateImageFunctionSSSCIUC3E3DD___New_orig__)
    Clone = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkNearestNeighborInterpolateImageFunctionSSSCIUC3E3DD_Clone)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkNearestNeighborInterpolateImageFunctionSSSCIUC3E3DD
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkNearestNeighborInterpolateImageFunctionSSSCIUC3E3DD_cast)

    def New(*args, **kargs):
        """New() -> itkNearestNeighborInterpolateImageFunctionSSSCIUC3E3DD

        Create a new object of the class itkNearestNeighborInterpolateImageFunctionSSSCIUC3E3DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNearestNeighborInterpolateImageFunctionSSSCIUC3E3DD.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNearestNeighborInterpolateImageFunctionSSSCIUC3E3DD.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNearestNeighborInterpolateImageFunctionSSSCIUC3E3DD.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNearestNeighborInterpolateImageFunctionSSSCIUC3E3DD in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkNearestNeighborInterpolateImageFunctionSSSCIUC3E3DD_swigregister(itkNearestNeighborInterpolateImageFunctionSSSCIUC3E3DD)
itkNearestNeighborInterpolateImageFunctionSSSCIUC3E3DD___New_orig__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkNearestNeighborInterpolateImageFunctionSSSCIUC3E3DD___New_orig__
itkNearestNeighborInterpolateImageFunctionSSSCIUC3E3DD_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkNearestNeighborInterpolateImageFunctionSSSCIUC3E3DD_cast


def itkResampleImageFilterIF3SSSCIF3E3D_New():
    return itkResampleImageFilterIF3SSSCIF3E3D.New()

class itkResampleImageFilterIF3SSSCIF3E3D(itkImageToImageFilterIF3SSSCIF3E3D):
    r"""Proxy of C++ itkResampleImageFilterIF3SSSCIF3E3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIF3SSSCIF3E3D___New_orig__)
    Clone = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIF3SSSCIF3E3D_Clone)
    VerifyPreconditions = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIF3SSSCIF3E3D_VerifyPreconditions)
    SetTransformInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIF3SSSCIF3E3D_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIF3SSSCIF3E3D_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIF3SSSCIF3E3D_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIF3SSSCIF3E3D_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIF3SSSCIF3E3D_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIF3SSSCIF3E3D_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIF3SSSCIF3E3D_GetInterpolator)
    SetExtrapolator = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIF3SSSCIF3E3D_SetExtrapolator)
    GetModifiableExtrapolator = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIF3SSSCIF3E3D_GetModifiableExtrapolator)
    GetExtrapolator = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIF3SSSCIF3E3D_GetExtrapolator)
    SetSize = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIF3SSSCIF3E3D_SetSize)
    GetSize = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIF3SSSCIF3E3D_GetSize)
    SetDefaultPixelValue = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIF3SSSCIF3E3D_SetDefaultPixelValue)
    GetDefaultPixelValue = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIF3SSSCIF3E3D_GetDefaultPixelValue)
    SetOutputSpacing = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIF3SSSCIF3E3D_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIF3SSSCIF3E3D_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIF3SSSCIF3E3D_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIF3SSSCIF3E3D_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIF3SSSCIF3E3D_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIF3SSSCIF3E3D_GetOutputDirection)
    SetOutputParametersFromImage = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIF3SSSCIF3E3D_SetOutputParametersFromImage)
    SetOutputStartIndex = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIF3SSSCIF3E3D_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIF3SSSCIF3E3D_GetOutputStartIndex)
    SetReferenceImage = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIF3SSSCIF3E3D_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIF3SSSCIF3E3D_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIF3SSSCIF3E3D_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIF3SSSCIF3E3D_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIF3SSSCIF3E3D_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIF3SSSCIF3E3D_GetUseReferenceImage)
    OutputHasNumericTraitsCheck = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIF3SSSCIF3E3D_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkResampleImageFilterIF3SSSCIF3E3D
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIF3SSSCIF3E3D_cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterIF3SSSCIF3E3D

        Create a new object of the class itkResampleImageFilterIF3SSSCIF3E3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterIF3SSSCIF3E3D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterIF3SSSCIF3E3D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkResampleImageFilterIF3SSSCIF3E3D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkResampleImageFilterIF3SSSCIF3E3D in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIF3SSSCIF3E3D_swigregister(itkResampleImageFilterIF3SSSCIF3E3D)
itkResampleImageFilterIF3SSSCIF3E3D___New_orig__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIF3SSSCIF3E3D___New_orig__
itkResampleImageFilterIF3SSSCIF3E3D_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIF3SSSCIF3E3D_cast


def itkResampleImageFilterIUC3SSSCIUC3E3D_New():
    return itkResampleImageFilterIUC3SSSCIUC3E3D.New()

class itkResampleImageFilterIUC3SSSCIUC3E3D(itkImageToImageFilterIUC3SSSCIUC3E3D):
    r"""Proxy of C++ itkResampleImageFilterIUC3SSSCIUC3E3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIUC3SSSCIUC3E3D___New_orig__)
    Clone = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIUC3SSSCIUC3E3D_Clone)
    VerifyPreconditions = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIUC3SSSCIUC3E3D_VerifyPreconditions)
    SetTransformInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIUC3SSSCIUC3E3D_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIUC3SSSCIUC3E3D_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIUC3SSSCIUC3E3D_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIUC3SSSCIUC3E3D_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIUC3SSSCIUC3E3D_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIUC3SSSCIUC3E3D_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIUC3SSSCIUC3E3D_GetInterpolator)
    SetExtrapolator = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIUC3SSSCIUC3E3D_SetExtrapolator)
    GetModifiableExtrapolator = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIUC3SSSCIUC3E3D_GetModifiableExtrapolator)
    GetExtrapolator = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIUC3SSSCIUC3E3D_GetExtrapolator)
    SetSize = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIUC3SSSCIUC3E3D_SetSize)
    GetSize = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIUC3SSSCIUC3E3D_GetSize)
    SetDefaultPixelValue = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIUC3SSSCIUC3E3D_SetDefaultPixelValue)
    GetDefaultPixelValue = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIUC3SSSCIUC3E3D_GetDefaultPixelValue)
    SetOutputSpacing = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIUC3SSSCIUC3E3D_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIUC3SSSCIUC3E3D_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIUC3SSSCIUC3E3D_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIUC3SSSCIUC3E3D_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIUC3SSSCIUC3E3D_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIUC3SSSCIUC3E3D_GetOutputDirection)
    SetOutputParametersFromImage = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIUC3SSSCIUC3E3D_SetOutputParametersFromImage)
    SetOutputStartIndex = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIUC3SSSCIUC3E3D_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIUC3SSSCIUC3E3D_GetOutputStartIndex)
    SetReferenceImage = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIUC3SSSCIUC3E3D_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIUC3SSSCIUC3E3D_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIUC3SSSCIUC3E3D_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIUC3SSSCIUC3E3D_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIUC3SSSCIUC3E3D_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIUC3SSSCIUC3E3D_GetUseReferenceImage)
    OutputHasNumericTraitsCheck = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIUC3SSSCIUC3E3D_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkResampleImageFilterIUC3SSSCIUC3E3D
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIUC3SSSCIUC3E3D_cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterIUC3SSSCIUC3E3D

        Create a new object of the class itkResampleImageFilterIUC3SSSCIUC3E3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterIUC3SSSCIUC3E3D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterIUC3SSSCIUC3E3D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkResampleImageFilterIUC3SSSCIUC3E3D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkResampleImageFilterIUC3SSSCIUC3E3D in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIUC3SSSCIUC3E3D_swigregister(itkResampleImageFilterIUC3SSSCIUC3E3D)
itkResampleImageFilterIUC3SSSCIUC3E3D___New_orig__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIUC3SSSCIUC3E3D___New_orig__
itkResampleImageFilterIUC3SSSCIUC3E3D_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterIUC3SSSCIUC3E3D_cast


def itkResampleImageFilterSSSCIF3E3DIF3_New():
    return itkResampleImageFilterSSSCIF3E3DIF3.New()

class itkResampleImageFilterSSSCIF3E3DIF3(itkImageToImageFilterSSSCIF3E3DIF3):
    r"""Proxy of C++ itkResampleImageFilterSSSCIF3E3DIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIF3___New_orig__)
    Clone = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIF3_Clone)
    VerifyPreconditions = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIF3_VerifyPreconditions)
    SetTransformInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIF3_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIF3_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIF3_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIF3_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIF3_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIF3_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIF3_GetInterpolator)
    SetExtrapolator = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIF3_SetExtrapolator)
    GetModifiableExtrapolator = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIF3_GetModifiableExtrapolator)
    GetExtrapolator = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIF3_GetExtrapolator)
    SetSize = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIF3_SetSize)
    GetSize = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIF3_GetSize)
    SetDefaultPixelValue = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIF3_SetDefaultPixelValue)
    GetDefaultPixelValue = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIF3_GetDefaultPixelValue)
    SetOutputSpacing = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIF3_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIF3_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIF3_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIF3_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIF3_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIF3_GetOutputDirection)
    SetOutputParametersFromImage = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIF3_SetOutputParametersFromImage)
    SetOutputStartIndex = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIF3_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIF3_GetOutputStartIndex)
    SetReferenceImage = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIF3_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIF3_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIF3_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIF3_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIF3_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIF3_GetUseReferenceImage)
    OutputHasNumericTraitsCheck = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIF3_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkResampleImageFilterSSSCIF3E3DIF3
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIF3_cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterSSSCIF3E3DIF3

        Create a new object of the class itkResampleImageFilterSSSCIF3E3DIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterSSSCIF3E3DIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterSSSCIF3E3DIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkResampleImageFilterSSSCIF3E3DIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkResampleImageFilterSSSCIF3E3DIF3 in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIF3_swigregister(itkResampleImageFilterSSSCIF3E3DIF3)
itkResampleImageFilterSSSCIF3E3DIF3___New_orig__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIF3___New_orig__
itkResampleImageFilterSSSCIF3E3DIF3_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIF3_cast


def itkResampleImageFilterSSSCIF3E3DIUC3_New():
    return itkResampleImageFilterSSSCIF3E3DIUC3.New()

class itkResampleImageFilterSSSCIF3E3DIUC3(itkImageToImageFilterSSSCIF3E3DIUC3):
    r"""Proxy of C++ itkResampleImageFilterSSSCIF3E3DIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIUC3_Clone)
    VerifyPreconditions = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIUC3_VerifyPreconditions)
    SetTransformInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIUC3_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIUC3_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIUC3_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIUC3_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIUC3_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIUC3_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIUC3_GetInterpolator)
    SetExtrapolator = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIUC3_SetExtrapolator)
    GetModifiableExtrapolator = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIUC3_GetModifiableExtrapolator)
    GetExtrapolator = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIUC3_GetExtrapolator)
    SetSize = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIUC3_SetSize)
    GetSize = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIUC3_GetSize)
    SetDefaultPixelValue = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIUC3_SetDefaultPixelValue)
    GetDefaultPixelValue = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIUC3_GetDefaultPixelValue)
    SetOutputSpacing = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIUC3_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIUC3_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIUC3_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIUC3_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIUC3_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIUC3_GetOutputDirection)
    SetOutputParametersFromImage = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIUC3_SetOutputParametersFromImage)
    SetOutputStartIndex = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIUC3_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIUC3_GetOutputStartIndex)
    SetReferenceImage = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIUC3_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIUC3_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIUC3_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIUC3_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIUC3_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIUC3_GetUseReferenceImage)
    OutputHasNumericTraitsCheck = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIUC3_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkResampleImageFilterSSSCIF3E3DIUC3
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIUC3_cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterSSSCIF3E3DIUC3

        Create a new object of the class itkResampleImageFilterSSSCIF3E3DIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterSSSCIF3E3DIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterSSSCIF3E3DIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkResampleImageFilterSSSCIF3E3DIUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkResampleImageFilterSSSCIF3E3DIUC3 in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIUC3_swigregister(itkResampleImageFilterSSSCIF3E3DIUC3)
itkResampleImageFilterSSSCIF3E3DIUC3___New_orig__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIUC3___New_orig__
itkResampleImageFilterSSSCIF3E3DIUC3_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIF3E3DIUC3_cast


def itkResampleImageFilterSSSCIUC3E3DIUC3_New():
    return itkResampleImageFilterSSSCIUC3E3DIUC3.New()

class itkResampleImageFilterSSSCIUC3E3DIUC3(itkImageToImageFilterSSSCIUC3E3DIUC3):
    r"""Proxy of C++ itkResampleImageFilterSSSCIUC3E3DIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIUC3E3DIUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIUC3E3DIUC3_Clone)
    VerifyPreconditions = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIUC3E3DIUC3_VerifyPreconditions)
    SetTransformInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIUC3E3DIUC3_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIUC3E3DIUC3_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIUC3E3DIUC3_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIUC3E3DIUC3_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIUC3E3DIUC3_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIUC3E3DIUC3_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIUC3E3DIUC3_GetInterpolator)
    SetExtrapolator = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIUC3E3DIUC3_SetExtrapolator)
    GetModifiableExtrapolator = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIUC3E3DIUC3_GetModifiableExtrapolator)
    GetExtrapolator = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIUC3E3DIUC3_GetExtrapolator)
    SetSize = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIUC3E3DIUC3_SetSize)
    GetSize = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIUC3E3DIUC3_GetSize)
    SetDefaultPixelValue = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIUC3E3DIUC3_SetDefaultPixelValue)
    GetDefaultPixelValue = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIUC3E3DIUC3_GetDefaultPixelValue)
    SetOutputSpacing = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIUC3E3DIUC3_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIUC3E3DIUC3_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIUC3E3DIUC3_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIUC3E3DIUC3_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIUC3E3DIUC3_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIUC3E3DIUC3_GetOutputDirection)
    SetOutputParametersFromImage = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIUC3E3DIUC3_SetOutputParametersFromImage)
    SetOutputStartIndex = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIUC3E3DIUC3_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIUC3E3DIUC3_GetOutputStartIndex)
    SetReferenceImage = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIUC3E3DIUC3_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIUC3E3DIUC3_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIUC3E3DIUC3_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIUC3E3DIUC3_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIUC3E3DIUC3_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIUC3E3DIUC3_GetUseReferenceImage)
    OutputHasNumericTraitsCheck = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIUC3E3DIUC3_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkResampleImageFilterSSSCIUC3E3DIUC3
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIUC3E3DIUC3_cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterSSSCIUC3E3DIUC3

        Create a new object of the class itkResampleImageFilterSSSCIUC3E3DIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterSSSCIUC3E3DIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterSSSCIUC3E3DIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkResampleImageFilterSSSCIUC3E3DIUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkResampleImageFilterSSSCIUC3E3DIUC3 in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIUC3E3DIUC3_swigregister(itkResampleImageFilterSSSCIUC3E3DIUC3)
itkResampleImageFilterSSSCIUC3E3DIUC3___New_orig__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIUC3E3DIUC3___New_orig__
itkResampleImageFilterSSSCIUC3E3DIUC3_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkResampleImageFilterSSSCIUC3E3DIUC3_cast


def itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Cosine_New():
    return itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Cosine.New()

class itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Cosine(itkInterpolateImageFunctionSSSCIF3E3DD):
    r"""Proxy of C++ itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Cosine class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Cosine___New_orig__)
    Clone = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Cosine_Clone)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Cosine
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Cosine_cast)

    def New(*args, **kargs):
        """New() -> itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Cosine

        Create a new object of the class itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Cosine and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Cosine.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Cosine.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Cosine.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Cosine in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Cosine_swigregister(itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Cosine)
itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Cosine___New_orig__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Cosine___New_orig__
itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Cosine_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Cosine_cast


def itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Hamming_New():
    return itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Hamming.New()

class itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Hamming(itkInterpolateImageFunctionSSSCIF3E3DD):
    r"""Proxy of C++ itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Hamming class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Hamming___New_orig__)
    Clone = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Hamming_Clone)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Hamming
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Hamming_cast)

    def New(*args, **kargs):
        """New() -> itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Hamming

        Create a new object of the class itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Hamming and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Hamming.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Hamming.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Hamming.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Hamming in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Hamming_swigregister(itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Hamming)
itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Hamming___New_orig__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Hamming___New_orig__
itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Hamming_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Hamming_cast


def itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Lanczos_New():
    return itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Lanczos.New()

class itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Lanczos(itkInterpolateImageFunctionSSSCIF3E3DD):
    r"""Proxy of C++ itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Lanczos class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Lanczos___New_orig__)
    Clone = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Lanczos_Clone)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Lanczos
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Lanczos_cast)

    def New(*args, **kargs):
        """New() -> itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Lanczos

        Create a new object of the class itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Lanczos and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Lanczos.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Lanczos.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Lanczos.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Lanczos in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Lanczos_swigregister(itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Lanczos)
itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Lanczos___New_orig__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Lanczos___New_orig__
itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Lanczos_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Lanczos_cast


def itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Welch_New():
    return itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Welch.New()

class itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Welch(itkInterpolateImageFunctionSSSCIF3E3DD):
    r"""Proxy of C++ itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Welch class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Welch___New_orig__)
    Clone = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Welch_Clone)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Welch
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Welch_cast)

    def New(*args, **kargs):
        """New() -> itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Welch

        Create a new object of the class itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Welch and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Welch.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Welch.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Welch.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Welch in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Welch_swigregister(itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Welch)
itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Welch___New_orig__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Welch___New_orig__
itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Welch_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D2Welch_cast


def itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Cosine_New():
    return itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Cosine.New()

class itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Cosine(itkInterpolateImageFunctionSSSCIF3E3DD):
    r"""Proxy of C++ itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Cosine class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Cosine___New_orig__)
    Clone = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Cosine_Clone)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Cosine
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Cosine_cast)

    def New(*args, **kargs):
        """New() -> itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Cosine

        Create a new object of the class itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Cosine and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Cosine.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Cosine.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Cosine.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Cosine in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Cosine_swigregister(itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Cosine)
itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Cosine___New_orig__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Cosine___New_orig__
itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Cosine_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Cosine_cast


def itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Hamming_New():
    return itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Hamming.New()

class itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Hamming(itkInterpolateImageFunctionSSSCIF3E3DD):
    r"""Proxy of C++ itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Hamming class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Hamming___New_orig__)
    Clone = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Hamming_Clone)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Hamming
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Hamming_cast)

    def New(*args, **kargs):
        """New() -> itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Hamming

        Create a new object of the class itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Hamming and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Hamming.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Hamming.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Hamming.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Hamming in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Hamming_swigregister(itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Hamming)
itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Hamming___New_orig__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Hamming___New_orig__
itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Hamming_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Hamming_cast


def itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Lanczos_New():
    return itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Lanczos.New()

class itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Lanczos(itkInterpolateImageFunctionSSSCIF3E3DD):
    r"""Proxy of C++ itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Lanczos class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Lanczos___New_orig__)
    Clone = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Lanczos_Clone)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Lanczos
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Lanczos_cast)

    def New(*args, **kargs):
        """New() -> itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Lanczos

        Create a new object of the class itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Lanczos and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Lanczos.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Lanczos.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Lanczos.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Lanczos in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Lanczos_swigregister(itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Lanczos)
itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Lanczos___New_orig__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Lanczos___New_orig__
itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Lanczos_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Lanczos_cast


def itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Welch_New():
    return itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Welch.New()

class itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Welch(itkInterpolateImageFunctionSSSCIF3E3DD):
    r"""Proxy of C++ itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Welch class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Welch___New_orig__)
    Clone = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Welch_Clone)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Welch
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Welch_cast)

    def New(*args, **kargs):
        """New() -> itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Welch

        Create a new object of the class itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Welch and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Welch.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Welch.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Welch.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Welch in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Welch_swigregister(itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Welch)
itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Welch___New_orig__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Welch___New_orig__
itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Welch_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIF3E3D3Welch_cast


def itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Cosine_New():
    return itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Cosine.New()

class itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Cosine(itkInterpolateImageFunctionSSSCIUC3E3DD):
    r"""Proxy of C++ itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Cosine class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Cosine___New_orig__)
    Clone = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Cosine_Clone)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Cosine
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Cosine_cast)

    def New(*args, **kargs):
        """New() -> itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Cosine

        Create a new object of the class itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Cosine and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Cosine.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Cosine.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Cosine.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Cosine in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Cosine_swigregister(itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Cosine)
itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Cosine___New_orig__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Cosine___New_orig__
itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Cosine_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Cosine_cast


def itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Hamming_New():
    return itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Hamming.New()

class itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Hamming(itkInterpolateImageFunctionSSSCIUC3E3DD):
    r"""Proxy of C++ itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Hamming class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Hamming___New_orig__)
    Clone = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Hamming_Clone)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Hamming
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Hamming_cast)

    def New(*args, **kargs):
        """New() -> itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Hamming

        Create a new object of the class itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Hamming and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Hamming.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Hamming.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Hamming.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Hamming in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Hamming_swigregister(itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Hamming)
itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Hamming___New_orig__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Hamming___New_orig__
itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Hamming_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Hamming_cast


def itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Lanczos_New():
    return itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Lanczos.New()

class itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Lanczos(itkInterpolateImageFunctionSSSCIUC3E3DD):
    r"""Proxy of C++ itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Lanczos class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Lanczos___New_orig__)
    Clone = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Lanczos_Clone)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Lanczos
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Lanczos_cast)

    def New(*args, **kargs):
        """New() -> itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Lanczos

        Create a new object of the class itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Lanczos and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Lanczos.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Lanczos.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Lanczos.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Lanczos in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Lanczos_swigregister(itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Lanczos)
itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Lanczos___New_orig__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Lanczos___New_orig__
itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Lanczos_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Lanczos_cast


def itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Welch_New():
    return itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Welch.New()

class itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Welch(itkInterpolateImageFunctionSSSCIUC3E3DD):
    r"""Proxy of C++ itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Welch class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Welch___New_orig__)
    Clone = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Welch_Clone)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Welch
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Welch_cast)

    def New(*args, **kargs):
        """New() -> itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Welch

        Create a new object of the class itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Welch and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Welch.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Welch.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Welch.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Welch in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Welch_swigregister(itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Welch)
itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Welch___New_orig__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Welch___New_orig__
itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Welch_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D2Welch_cast


def itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Cosine_New():
    return itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Cosine.New()

class itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Cosine(itkInterpolateImageFunctionSSSCIUC3E3DD):
    r"""Proxy of C++ itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Cosine class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Cosine___New_orig__)
    Clone = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Cosine_Clone)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Cosine
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Cosine_cast)

    def New(*args, **kargs):
        """New() -> itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Cosine

        Create a new object of the class itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Cosine and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Cosine.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Cosine.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Cosine.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Cosine in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Cosine_swigregister(itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Cosine)
itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Cosine___New_orig__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Cosine___New_orig__
itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Cosine_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Cosine_cast


def itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Hamming_New():
    return itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Hamming.New()

class itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Hamming(itkInterpolateImageFunctionSSSCIUC3E3DD):
    r"""Proxy of C++ itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Hamming class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Hamming___New_orig__)
    Clone = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Hamming_Clone)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Hamming
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Hamming_cast)

    def New(*args, **kargs):
        """New() -> itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Hamming

        Create a new object of the class itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Hamming and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Hamming.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Hamming.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Hamming.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Hamming in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Hamming_swigregister(itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Hamming)
itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Hamming___New_orig__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Hamming___New_orig__
itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Hamming_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Hamming_cast


def itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Lanczos_New():
    return itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Lanczos.New()

class itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Lanczos(itkInterpolateImageFunctionSSSCIUC3E3DD):
    r"""Proxy of C++ itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Lanczos class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Lanczos___New_orig__)
    Clone = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Lanczos_Clone)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Lanczos
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Lanczos_cast)

    def New(*args, **kargs):
        """New() -> itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Lanczos

        Create a new object of the class itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Lanczos and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Lanczos.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Lanczos.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Lanczos.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Lanczos in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Lanczos_swigregister(itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Lanczos)
itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Lanczos___New_orig__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Lanczos___New_orig__
itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Lanczos_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Lanczos_cast


def itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Welch_New():
    return itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Welch.New()

class itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Welch(itkInterpolateImageFunctionSSSCIUC3E3DD):
    r"""Proxy of C++ itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Welch class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Welch___New_orig__)
    Clone = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Welch_Clone)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Welch
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Welch_cast)

    def New(*args, **kargs):
        """New() -> itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Welch

        Create a new object of the class itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Welch and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Welch.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Welch.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Welch.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Welch in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Welch_swigregister(itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Welch)
itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Welch___New_orig__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Welch___New_orig__
itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Welch_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkWindowedSincInterpolateImageFunctionSSSCIUC3E3D3Welch_cast

class itkCastImageFilterIF3SSSCIF3E3D_Superclass(itkImageToImageFilterIF3SSSCIF3E3D):
    r"""Proxy of C++ itkCastImageFilterIF3SSSCIF3E3D_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIF3SSSCIF3E3D_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIF3SSSCIF3E3D_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIF3SSSCIF3E3D_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIF3SSSCIF3E3D_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIF3SSSCIF3E3D_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkCastImageFilterIF3SSSCIF3E3D_Superclass
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIF3SSSCIF3E3D_Superclass_cast)

# Register itkCastImageFilterIF3SSSCIF3E3D_Superclass in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIF3SSSCIF3E3D_Superclass_swigregister(itkCastImageFilterIF3SSSCIF3E3D_Superclass)
itkCastImageFilterIF3SSSCIF3E3D_Superclass_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIF3SSSCIF3E3D_Superclass_cast

class itkCastImageFilterIF3SSSCIF3E3D_Superclass_Superclass(itkImageSourceSSSCIF3E3D):
    r"""Proxy of C++ itkCastImageFilterIF3SSSCIF3E3D_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIF3SSSCIF3E3D_Superclass_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIF3SSSCIF3E3D_Superclass_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIF3SSSCIF3E3D_Superclass_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIF3SSSCIF3E3D_Superclass_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIF3SSSCIF3E3D_Superclass_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIF3SSSCIF3E3D_Superclass_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIF3SSSCIF3E3D_Superclass_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIF3SSSCIF3E3D_Superclass_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIF3SSSCIF3E3D_Superclass_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIF3SSSCIF3E3D_Superclass_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkCastImageFilterIF3SSSCIF3E3D_Superclass_Superclass
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIF3SSSCIF3E3D_Superclass_Superclass_cast)

# Register itkCastImageFilterIF3SSSCIF3E3D_Superclass_Superclass in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIF3SSSCIF3E3D_Superclass_Superclass_swigregister(itkCastImageFilterIF3SSSCIF3E3D_Superclass_Superclass)
itkCastImageFilterIF3SSSCIF3E3D_Superclass_Superclass_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIF3SSSCIF3E3D_Superclass_Superclass_cast

class itkCastImageFilterIUC3SSSCIUC3E3D_Superclass(itkImageToImageFilterIUC3SSSCIUC3E3D):
    r"""Proxy of C++ itkCastImageFilterIUC3SSSCIUC3E3D_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIUC3SSSCIUC3E3D_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIUC3SSSCIUC3E3D_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIUC3SSSCIUC3E3D_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIUC3SSSCIUC3E3D_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIUC3SSSCIUC3E3D_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkCastImageFilterIUC3SSSCIUC3E3D_Superclass
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIUC3SSSCIUC3E3D_Superclass_cast)

# Register itkCastImageFilterIUC3SSSCIUC3E3D_Superclass in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIUC3SSSCIUC3E3D_Superclass_swigregister(itkCastImageFilterIUC3SSSCIUC3E3D_Superclass)
itkCastImageFilterIUC3SSSCIUC3E3D_Superclass_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIUC3SSSCIUC3E3D_Superclass_cast

class itkCastImageFilterIUC3SSSCIUC3E3D_Superclass_Superclass(itkImageSourceSSSCIUC3E3D):
    r"""Proxy of C++ itkCastImageFilterIUC3SSSCIUC3E3D_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIUC3SSSCIUC3E3D_Superclass_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIUC3SSSCIUC3E3D_Superclass_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIUC3SSSCIUC3E3D_Superclass_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIUC3SSSCIUC3E3D_Superclass_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIUC3SSSCIUC3E3D_Superclass_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIUC3SSSCIUC3E3D_Superclass_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIUC3SSSCIUC3E3D_Superclass_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIUC3SSSCIUC3E3D_Superclass_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIUC3SSSCIUC3E3D_Superclass_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIUC3SSSCIUC3E3D_Superclass_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkCastImageFilterIUC3SSSCIUC3E3D_Superclass_Superclass
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIUC3SSSCIUC3E3D_Superclass_Superclass_cast)

# Register itkCastImageFilterIUC3SSSCIUC3E3D_Superclass_Superclass in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIUC3SSSCIUC3E3D_Superclass_Superclass_swigregister(itkCastImageFilterIUC3SSSCIUC3E3D_Superclass_Superclass)
itkCastImageFilterIUC3SSSCIUC3E3D_Superclass_Superclass_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIUC3SSSCIUC3E3D_Superclass_Superclass_cast

class itkCastImageFilterSSSCIF3E3DIF3_Superclass(itkImageToImageFilterSSSCIF3E3DIF3):
    r"""Proxy of C++ itkCastImageFilterSSSCIF3E3DIF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DIF3_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DIF3_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DIF3_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DIF3_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DIF3_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkCastImageFilterSSSCIF3E3DIF3_Superclass
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DIF3_Superclass_cast)

# Register itkCastImageFilterSSSCIF3E3DIF3_Superclass in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DIF3_Superclass_swigregister(itkCastImageFilterSSSCIF3E3DIF3_Superclass)
itkCastImageFilterSSSCIF3E3DIF3_Superclass_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DIF3_Superclass_cast

class itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_Superclass(itkImageSourceSSSCIUC3E3D):
    r"""Proxy of C++ itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_Superclass
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_Superclass_cast)

# Register itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_Superclass in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_Superclass_swigregister(itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_Superclass)
itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_Superclass_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_Superclass_cast

class itkCastImageFilterSSSCIUC3E3DIUC3_Superclass(itkImageToImageFilterSSSCIUC3E3DIUC3):
    r"""Proxy of C++ itkCastImageFilterSSSCIUC3E3DIUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DIUC3_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DIUC3_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DIUC3_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DIUC3_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DIUC3_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkCastImageFilterSSSCIUC3E3DIUC3_Superclass
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DIUC3_Superclass_cast)

# Register itkCastImageFilterSSSCIUC3E3DIUC3_Superclass in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DIUC3_Superclass_swigregister(itkCastImageFilterSSSCIUC3E3DIUC3_Superclass)
itkCastImageFilterSSSCIUC3E3DIUC3_Superclass_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DIUC3_Superclass_cast

class itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D_Superclass_Superclass(itkImageSourceSSSCIF3E3D):
    r"""Proxy of C++ itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D_Superclass_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D_Superclass_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D_Superclass_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D_Superclass_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D_Superclass_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D_Superclass_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D_Superclass_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D_Superclass_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D_Superclass_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D_Superclass_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D_Superclass_Superclass
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D_Superclass_Superclass_cast)

# Register itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D_Superclass_Superclass in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D_Superclass_Superclass_swigregister(itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D_Superclass_Superclass)
itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D_Superclass_Superclass_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D_Superclass_Superclass_cast


def itkGaussianInterpolateImageFunctionSSSCIF3E3DD_New():
    return itkGaussianInterpolateImageFunctionSSSCIF3E3DD.New()

class itkGaussianInterpolateImageFunctionSSSCIF3E3DD(itkInterpolateImageFunctionSSSCIF3E3DD):
    r"""Proxy of C++ itkGaussianInterpolateImageFunctionSSSCIF3E3DD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkGaussianInterpolateImageFunctionSSSCIF3E3DD___New_orig__)
    Clone = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkGaussianInterpolateImageFunctionSSSCIF3E3DD_Clone)
    SetSigma = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkGaussianInterpolateImageFunctionSSSCIF3E3DD_SetSigma)
    GetSigma = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkGaussianInterpolateImageFunctionSSSCIF3E3DD_GetSigma)
    SetAlpha = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkGaussianInterpolateImageFunctionSSSCIF3E3DD_SetAlpha)
    GetAlpha = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkGaussianInterpolateImageFunctionSSSCIF3E3DD_GetAlpha)
    SetParameters = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkGaussianInterpolateImageFunctionSSSCIF3E3DD_SetParameters)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkGaussianInterpolateImageFunctionSSSCIF3E3DD
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkGaussianInterpolateImageFunctionSSSCIF3E3DD_cast)

    def New(*args, **kargs):
        """New() -> itkGaussianInterpolateImageFunctionSSSCIF3E3DD

        Create a new object of the class itkGaussianInterpolateImageFunctionSSSCIF3E3DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGaussianInterpolateImageFunctionSSSCIF3E3DD.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGaussianInterpolateImageFunctionSSSCIF3E3DD.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGaussianInterpolateImageFunctionSSSCIF3E3DD.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGaussianInterpolateImageFunctionSSSCIF3E3DD in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkGaussianInterpolateImageFunctionSSSCIF3E3DD_swigregister(itkGaussianInterpolateImageFunctionSSSCIF3E3DD)
itkGaussianInterpolateImageFunctionSSSCIF3E3DD___New_orig__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkGaussianInterpolateImageFunctionSSSCIF3E3DD___New_orig__
itkGaussianInterpolateImageFunctionSSSCIF3E3DD_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkGaussianInterpolateImageFunctionSSSCIF3E3DD_cast


def itkGaussianInterpolateImageFunctionSSSCIUC3E3DD_New():
    return itkGaussianInterpolateImageFunctionSSSCIUC3E3DD.New()

class itkGaussianInterpolateImageFunctionSSSCIUC3E3DD(itkInterpolateImageFunctionSSSCIUC3E3DD):
    r"""Proxy of C++ itkGaussianInterpolateImageFunctionSSSCIUC3E3DD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkGaussianInterpolateImageFunctionSSSCIUC3E3DD___New_orig__)
    Clone = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkGaussianInterpolateImageFunctionSSSCIUC3E3DD_Clone)
    SetSigma = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkGaussianInterpolateImageFunctionSSSCIUC3E3DD_SetSigma)
    GetSigma = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkGaussianInterpolateImageFunctionSSSCIUC3E3DD_GetSigma)
    SetAlpha = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkGaussianInterpolateImageFunctionSSSCIUC3E3DD_SetAlpha)
    GetAlpha = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkGaussianInterpolateImageFunctionSSSCIUC3E3DD_GetAlpha)
    SetParameters = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkGaussianInterpolateImageFunctionSSSCIUC3E3DD_SetParameters)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkGaussianInterpolateImageFunctionSSSCIUC3E3DD
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkGaussianInterpolateImageFunctionSSSCIUC3E3DD_cast)

    def New(*args, **kargs):
        """New() -> itkGaussianInterpolateImageFunctionSSSCIUC3E3DD

        Create a new object of the class itkGaussianInterpolateImageFunctionSSSCIUC3E3DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGaussianInterpolateImageFunctionSSSCIUC3E3DD.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGaussianInterpolateImageFunctionSSSCIUC3E3DD.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGaussianInterpolateImageFunctionSSSCIUC3E3DD.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGaussianInterpolateImageFunctionSSSCIUC3E3DD in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkGaussianInterpolateImageFunctionSSSCIUC3E3DD_swigregister(itkGaussianInterpolateImageFunctionSSSCIUC3E3DD)
itkGaussianInterpolateImageFunctionSSSCIUC3E3DD___New_orig__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkGaussianInterpolateImageFunctionSSSCIUC3E3DD___New_orig__
itkGaussianInterpolateImageFunctionSSSCIUC3E3DD_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkGaussianInterpolateImageFunctionSSSCIUC3E3DD_cast


def itkImageFileReaderSSSCIF3E3D_New():
    return itkImageFileReaderSSSCIF3E3D.New()

class itkImageFileReaderSSSCIF3E3D(itkImageSourceSSSCIF3E3D):
    r"""Proxy of C++ itkImageFileReaderSSSCIF3E3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileReaderSSSCIF3E3D___New_orig__)
    Clone = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileReaderSSSCIF3E3D_Clone)
    SetFileNameInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileReaderSSSCIF3E3D_SetFileNameInput)
    SetFileName = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileReaderSSSCIF3E3D_SetFileName)
    GetFileNameInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileReaderSSSCIF3E3D_GetFileNameInput)
    GetFileName = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileReaderSSSCIF3E3D_GetFileName)
    SetImageIO = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileReaderSSSCIF3E3D_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileReaderSSSCIF3E3D_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileReaderSSSCIF3E3D_GetImageIO)
    SetUseStreaming = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileReaderSSSCIF3E3D_SetUseStreaming)
    GetUseStreaming = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileReaderSSSCIF3E3D_GetUseStreaming)
    UseStreamingOn = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileReaderSSSCIF3E3D_UseStreamingOn)
    UseStreamingOff = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileReaderSSSCIF3E3D_UseStreamingOff)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkImageFileReaderSSSCIF3E3D
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileReaderSSSCIF3E3D_cast)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderSSSCIF3E3D

        Create a new object of the class itkImageFileReaderSSSCIF3E3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderSSSCIF3E3D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderSSSCIF3E3D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderSSSCIF3E3D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderSSSCIF3E3D in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileReaderSSSCIF3E3D_swigregister(itkImageFileReaderSSSCIF3E3D)
itkImageFileReaderSSSCIF3E3D___New_orig__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileReaderSSSCIF3E3D___New_orig__
itkImageFileReaderSSSCIF3E3D_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileReaderSSSCIF3E3D_cast


def itkImageFileReaderSSSCIUC3E3D_New():
    return itkImageFileReaderSSSCIUC3E3D.New()

class itkImageFileReaderSSSCIUC3E3D(itkImageSourceSSSCIUC3E3D):
    r"""Proxy of C++ itkImageFileReaderSSSCIUC3E3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileReaderSSSCIUC3E3D___New_orig__)
    Clone = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileReaderSSSCIUC3E3D_Clone)
    SetFileNameInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileReaderSSSCIUC3E3D_SetFileNameInput)
    SetFileName = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileReaderSSSCIUC3E3D_SetFileName)
    GetFileNameInput = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileReaderSSSCIUC3E3D_GetFileNameInput)
    GetFileName = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileReaderSSSCIUC3E3D_GetFileName)
    SetImageIO = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileReaderSSSCIUC3E3D_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileReaderSSSCIUC3E3D_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileReaderSSSCIUC3E3D_GetImageIO)
    SetUseStreaming = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileReaderSSSCIUC3E3D_SetUseStreaming)
    GetUseStreaming = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileReaderSSSCIUC3E3D_GetUseStreaming)
    UseStreamingOn = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileReaderSSSCIUC3E3D_UseStreamingOn)
    UseStreamingOff = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileReaderSSSCIUC3E3D_UseStreamingOff)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkImageFileReaderSSSCIUC3E3D
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileReaderSSSCIUC3E3D_cast)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderSSSCIUC3E3D

        Create a new object of the class itkImageFileReaderSSSCIUC3E3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderSSSCIUC3E3D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderSSSCIUC3E3D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderSSSCIUC3E3D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderSSSCIUC3E3D in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileReaderSSSCIUC3E3D_swigregister(itkImageFileReaderSSSCIUC3E3D)
itkImageFileReaderSSSCIUC3E3D___New_orig__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileReaderSSSCIUC3E3D___New_orig__
itkImageFileReaderSSSCIUC3E3D_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkImageFileReaderSSSCIUC3E3D_cast

class itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_Superclass(itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_Superclass
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_Superclass_cast)

# Register itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_Superclass in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_Superclass_swigregister(itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_Superclass)
itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_Superclass_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_Superclass_cast


def itkCastImageFilterIF3SSSCIF3E3D_New():
    return itkCastImageFilterIF3SSSCIF3E3D.New()

class itkCastImageFilterIF3SSSCIF3E3D(itkCastImageFilterIF3SSSCIF3E3D_Superclass):
    r"""Proxy of C++ itkCastImageFilterIF3SSSCIF3E3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIF3SSSCIF3E3D___New_orig__)
    Clone = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIF3SSSCIF3E3D_Clone)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkCastImageFilterIF3SSSCIF3E3D
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIF3SSSCIF3E3D_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIF3SSSCIF3E3D

        Create a new object of the class itkCastImageFilterIF3SSSCIF3E3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIF3SSSCIF3E3D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIF3SSSCIF3E3D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIF3SSSCIF3E3D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIF3SSSCIF3E3D in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIF3SSSCIF3E3D_swigregister(itkCastImageFilterIF3SSSCIF3E3D)
itkCastImageFilterIF3SSSCIF3E3D___New_orig__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIF3SSSCIF3E3D___New_orig__
itkCastImageFilterIF3SSSCIF3E3D_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIF3SSSCIF3E3D_cast


def itkCastImageFilterIUC3SSSCIUC3E3D_New():
    return itkCastImageFilterIUC3SSSCIUC3E3D.New()

class itkCastImageFilterIUC3SSSCIUC3E3D(itkCastImageFilterIUC3SSSCIUC3E3D_Superclass):
    r"""Proxy of C++ itkCastImageFilterIUC3SSSCIUC3E3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIUC3SSSCIUC3E3D___New_orig__)
    Clone = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIUC3SSSCIUC3E3D_Clone)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkCastImageFilterIUC3SSSCIUC3E3D
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIUC3SSSCIUC3E3D_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIUC3SSSCIUC3E3D

        Create a new object of the class itkCastImageFilterIUC3SSSCIUC3E3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIUC3SSSCIUC3E3D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIUC3SSSCIUC3E3D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIUC3SSSCIUC3E3D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIUC3SSSCIUC3E3D in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIUC3SSSCIUC3E3D_swigregister(itkCastImageFilterIUC3SSSCIUC3E3D)
itkCastImageFilterIUC3SSSCIUC3E3D___New_orig__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIUC3SSSCIUC3E3D___New_orig__
itkCastImageFilterIUC3SSSCIUC3E3D_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterIUC3SSSCIUC3E3D_cast


def itkCastImageFilterSSSCIF3E3DIF3_New():
    return itkCastImageFilterSSSCIF3E3DIF3.New()

class itkCastImageFilterSSSCIF3E3DIF3(itkCastImageFilterSSSCIF3E3DIF3_Superclass):
    r"""Proxy of C++ itkCastImageFilterSSSCIF3E3DIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DIF3___New_orig__)
    Clone = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DIF3_Clone)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkCastImageFilterSSSCIF3E3DIF3
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DIF3_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterSSSCIF3E3DIF3

        Create a new object of the class itkCastImageFilterSSSCIF3E3DIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterSSSCIF3E3DIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterSSSCIF3E3DIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterSSSCIF3E3DIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterSSSCIF3E3DIF3 in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DIF3_swigregister(itkCastImageFilterSSSCIF3E3DIF3)
itkCastImageFilterSSSCIF3E3DIF3___New_orig__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DIF3___New_orig__
itkCastImageFilterSSSCIF3E3DIF3_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DIF3_cast

class itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass(itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_Superclass):
    r"""Proxy of C++ itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_cast)

# Register itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_swigregister(itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass)
itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_cast


def itkCastImageFilterSSSCIUC3E3DIUC3_New():
    return itkCastImageFilterSSSCIUC3E3DIUC3.New()

class itkCastImageFilterSSSCIUC3E3DIUC3(itkCastImageFilterSSSCIUC3E3DIUC3_Superclass):
    r"""Proxy of C++ itkCastImageFilterSSSCIUC3E3DIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DIUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DIUC3_Clone)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkCastImageFilterSSSCIUC3E3DIUC3
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DIUC3_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterSSSCIUC3E3DIUC3

        Create a new object of the class itkCastImageFilterSSSCIUC3E3DIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterSSSCIUC3E3DIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterSSSCIUC3E3DIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterSSSCIUC3E3DIUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterSSSCIUC3E3DIUC3 in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DIUC3_swigregister(itkCastImageFilterSSSCIUC3E3DIUC3)
itkCastImageFilterSSSCIUC3E3DIUC3___New_orig__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DIUC3___New_orig__
itkCastImageFilterSSSCIUC3E3DIUC3_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DIUC3_cast

class itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D_Superclass(itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D_Superclass_Superclass):
    r"""Proxy of C++ itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D_Superclass
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D_Superclass_cast)

# Register itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D_Superclass in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D_Superclass_swigregister(itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D_Superclass)
itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D_Superclass_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D_Superclass_cast


def itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_New():
    return itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass.New()

class itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass(itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_SetFunctor)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_swigregister(itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass)
itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass___New_orig__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass___New_orig__
itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass_cast


def itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_New():
    return itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D.New()

class itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D(itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass):
    r"""Proxy of C++ itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D___New_orig__)
    Clone = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_Clone)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D

        Create a new object of the class itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_swigregister(itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D)
itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D___New_orig__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D___New_orig__
itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIF3E3DSSSCIUC3E3D_cast


def itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D_New():
    return itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D.New()

class itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D(itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D_Superclass):
    r"""Proxy of C++ itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D___New_orig__)
    Clone = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D_Clone)
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D

        Create a new object of the class itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D_swigregister(itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D)
itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D___New_orig__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D___New_orig__
itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkCastImageFilterSSSCIUC3E3DSSSCIF3E3D_cast


def itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_New():
    return itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D.New()

class itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D(itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D___New_orig__)
    Clone = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_GetScale)
    GetShift = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_PrintSelf)
    InputHasNumericTraitsCheck = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.delete_itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D
    cast = _swig_new_static_method(_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D

        Create a new object of the class itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D in _itkSliceSeriesSpecialCoordinatesImageFiltersPython:
_itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_swigregister(itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D)
itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D___New_orig__ = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D___New_orig__
itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_cast = _itkSliceSeriesSpecialCoordinatesImageFiltersPython.itkRescaleIntensityImageFilterSSSCIF3E3DSSSCIUC3E3D_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def rescale_intensity_image_filter(*args: itkt.ImageLike,  output_minimum: int=..., output_maximum: int=..., functor=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for RescaleIntensityImageFilter"""
    import itk

    kwarg_typehints = { 'output_minimum':output_minimum,'output_maximum':output_maximum,'functor':functor }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)

    instance = itk.RescaleIntensityImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def rescale_intensity_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.Ultrasound.RescaleIntensityImageFilter
    rescale_intensity_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    rescale_intensity_image_filter.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def image_file_reader(*args,  file_name_input=..., file_name: str=..., image_io=..., use_streaming: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ImageFileReader"""
    import itk

    kwarg_typehints = { 'file_name_input':file_name_input,'file_name':file_name,'image_io':image_io,'use_streaming':use_streaming }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)

    instance = itk.ImageFileReader.New(*args, **kwargs)
    return instance.__internal_call__()

def image_file_reader_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.Ultrasound.ImageFileReader
    image_file_reader.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    image_file_reader.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def image_to_image_filter(*args: itkt.ImageLike, **kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ImageToImageFilter"""
    import itk

    kwarg_typehints = {  }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)

    instance = itk.ImageToImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def image_to_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.Ultrasound.ImageToImageFilter
    image_to_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    image_to_image_filter.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def image_source(*args, **kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ImageSource"""
    import itk

    kwarg_typehints = {  }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)

    instance = itk.ImageSource.New(*args, **kwargs)
    return instance.__internal_call__()

def image_source_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.Ultrasound.ImageSource
    image_source.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    image_source.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def in_place_image_filter(*args: itkt.ImageLike, **kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for InPlaceImageFilter"""
    import itk

    kwarg_typehints = {  }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)

    instance = itk.InPlaceImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def in_place_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.Ultrasound.InPlaceImageFilter
    in_place_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    in_place_image_filter.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def unary_functor_image_filter(*args: itkt.ImageLike,  functor=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for UnaryFunctorImageFilter"""
    import itk

    kwarg_typehints = { 'functor':functor }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)

    instance = itk.UnaryFunctorImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def unary_functor_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.Ultrasound.UnaryFunctorImageFilter
    unary_functor_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    unary_functor_image_filter.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def image_file_writer(*args,  file_name: str=..., image_io=..., io_region=..., number_of_stream_divisions: int=..., use_compression: bool=..., compression_level: int=..., use_input_meta_data_dictionary: bool=...,**kwargs):
    """Functional interface for ImageFileWriter"""
    import itk

    kwarg_typehints = { 'file_name':file_name,'image_io':image_io,'io_region':io_region,'number_of_stream_divisions':number_of_stream_divisions,'use_compression':use_compression,'compression_level':compression_level,'use_input_meta_data_dictionary':use_input_meta_data_dictionary }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)

    instance = itk.ImageFileWriter.New(*args, **kwargs)
    return instance.__internal_call__()

def image_file_writer_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.Ultrasound.ImageFileWriter
    image_file_writer.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    image_file_writer.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def cast_image_filter(*args: itkt.ImageLike, **kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for CastImageFilter"""
    import itk

    kwarg_typehints = {  }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)

    instance = itk.CastImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def cast_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.Ultrasound.CastImageFilter
    cast_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    cast_image_filter.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def resample_image_filter(*args: itkt.ImageLike,  transform_input=..., transform: itkt.Transform=..., interpolator: itkt.InterpolateImageFunction=..., extrapolator: itkt.ExtrapolateImageFunction=..., size: Sequence[int]=..., default_pixel_value: float=..., output_spacing: Sequence[float]=..., output_origin: Sequence[float]=..., output_direction=..., output_parameters_from_image: itkt.ImageBase=..., output_start_index: Sequence[int]=..., reference_image: itkt.ImageBase=..., use_reference_image: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ResampleImageFilter"""
    import itk

    kwarg_typehints = { 'transform_input':transform_input,'transform':transform,'interpolator':interpolator,'extrapolator':extrapolator,'size':size,'default_pixel_value':default_pixel_value,'output_spacing':output_spacing,'output_origin':output_origin,'output_direction':output_direction,'output_parameters_from_image':output_parameters_from_image,'output_start_index':output_start_index,'reference_image':reference_image,'use_reference_image':use_reference_image }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)

    instance = itk.ResampleImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def resample_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.Ultrasound.ResampleImageFilter
    resample_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    resample_image_filter.__doc__ = filter_object.__doc__




