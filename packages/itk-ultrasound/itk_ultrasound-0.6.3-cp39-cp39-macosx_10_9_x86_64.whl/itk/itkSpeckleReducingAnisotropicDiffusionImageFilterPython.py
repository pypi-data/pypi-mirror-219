# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _UltrasoundPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkSpeckleReducingAnisotropicDiffusionImageFilterPython
else:
    import _itkSpeckleReducingAnisotropicDiffusionImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkSpeckleReducingAnisotropicDiffusionImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkSpeckleReducingAnisotropicDiffusionImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkAnisotropicDiffusionImageFilterPython
import itk.itkDenseFiniteDifferenceImageFilterPython
import itk.itkFiniteDifferenceImageFilterPython
import itk.itkFiniteDifferenceFunctionPython
import itk.itkSizePython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterAPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkOffsetPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkImageToImageFilterCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterBPython
class listIndex2(collections.abc.MutableSequence):
    r"""Proxy of C++ std::list< itk::Index< 2 > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex2_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex2___nonzero__)
    __bool__ = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex2___bool__)
    __len__ = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex2___len__)
    __getslice__ = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex2___getslice__)
    __setslice__ = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex2___setslice__)
    __delslice__ = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex2___delslice__)
    __delitem__ = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex2___delitem__)
    __getitem__ = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex2___getitem__)
    __setitem__ = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex2___setitem__)
    pop = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex2_pop)
    append = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex2_append)
    empty = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex2_empty)
    size = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex2_size)
    swap = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex2_swap)
    begin = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex2_begin)
    end = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex2_end)
    rbegin = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex2_rbegin)
    rend = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex2_rend)
    clear = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex2_clear)
    get_allocator = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex2_get_allocator)
    pop_back = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex2_pop_back)
    erase = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex2_erase)

    def __init__(self, *args):
        r"""
        __init__(self) -> listIndex2
        __init__(self, other) -> listIndex2

        Parameters
        ----------
        other: std::list< itk::Index< 2 > > const &

        __init__(self, size) -> listIndex2

        Parameters
        ----------
        size: std::list< itk::Index< 2 > >::size_type

        __init__(self, size, value) -> listIndex2

        Parameters
        ----------
        size: std::list< itk::Index< 2 > >::size_type
        value: std::list< itk::Index< 2 > >::value_type const &

        """
        _itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex2_swiginit(self, _itkSpeckleReducingAnisotropicDiffusionImageFilterPython.new_listIndex2(*args))
    push_back = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex2_push_back)
    front = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex2_front)
    back = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex2_back)
    assign = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex2_assign)
    resize = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex2_resize)
    insert = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex2_insert)
    pop_front = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex2_pop_front)
    push_front = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex2_push_front)
    reverse = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex2_reverse)
    __swig_destroy__ = _itkSpeckleReducingAnisotropicDiffusionImageFilterPython.delete_listIndex2

# Register listIndex2 in _itkSpeckleReducingAnisotropicDiffusionImageFilterPython:
_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex2_swigregister(listIndex2)

class listIndex3(collections.abc.MutableSequence):
    r"""Proxy of C++ std::list< itk::Index< 3 > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex3_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex3___nonzero__)
    __bool__ = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex3___bool__)
    __len__ = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex3___len__)
    __getslice__ = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex3___getslice__)
    __setslice__ = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex3___setslice__)
    __delslice__ = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex3___delslice__)
    __delitem__ = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex3___delitem__)
    __getitem__ = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex3___getitem__)
    __setitem__ = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex3___setitem__)
    pop = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex3_pop)
    append = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex3_append)
    empty = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex3_empty)
    size = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex3_size)
    swap = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex3_swap)
    begin = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex3_begin)
    end = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex3_end)
    rbegin = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex3_rbegin)
    rend = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex3_rend)
    clear = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex3_clear)
    get_allocator = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex3_get_allocator)
    pop_back = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex3_pop_back)
    erase = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex3_erase)

    def __init__(self, *args):
        r"""
        __init__(self) -> listIndex3
        __init__(self, other) -> listIndex3

        Parameters
        ----------
        other: std::list< itk::Index< 3 > > const &

        __init__(self, size) -> listIndex3

        Parameters
        ----------
        size: std::list< itk::Index< 3 > >::size_type

        __init__(self, size, value) -> listIndex3

        Parameters
        ----------
        size: std::list< itk::Index< 3 > >::size_type
        value: std::list< itk::Index< 3 > >::value_type const &

        """
        _itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex3_swiginit(self, _itkSpeckleReducingAnisotropicDiffusionImageFilterPython.new_listIndex3(*args))
    push_back = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex3_push_back)
    front = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex3_front)
    back = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex3_back)
    assign = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex3_assign)
    resize = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex3_resize)
    insert = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex3_insert)
    pop_front = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex3_pop_front)
    push_front = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex3_push_front)
    reverse = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex3_reverse)
    __swig_destroy__ = _itkSpeckleReducingAnisotropicDiffusionImageFilterPython.delete_listIndex3

# Register listIndex3 in _itkSpeckleReducingAnisotropicDiffusionImageFilterPython:
_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex3_swigregister(listIndex3)

class listIndex4(collections.abc.MutableSequence):
    r"""Proxy of C++ std::list< itk::Index< 4 > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex4_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex4___nonzero__)
    __bool__ = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex4___bool__)
    __len__ = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex4___len__)
    __getslice__ = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex4___getslice__)
    __setslice__ = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex4___setslice__)
    __delslice__ = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex4___delslice__)
    __delitem__ = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex4___delitem__)
    __getitem__ = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex4___getitem__)
    __setitem__ = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex4___setitem__)
    pop = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex4_pop)
    append = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex4_append)
    empty = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex4_empty)
    size = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex4_size)
    swap = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex4_swap)
    begin = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex4_begin)
    end = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex4_end)
    rbegin = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex4_rbegin)
    rend = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex4_rend)
    clear = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex4_clear)
    get_allocator = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex4_get_allocator)
    pop_back = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex4_pop_back)
    erase = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex4_erase)

    def __init__(self, *args):
        r"""
        __init__(self) -> listIndex4
        __init__(self, other) -> listIndex4

        Parameters
        ----------
        other: std::list< itk::Index< 4 > > const &

        __init__(self, size) -> listIndex4

        Parameters
        ----------
        size: std::list< itk::Index< 4 > >::size_type

        __init__(self, size, value) -> listIndex4

        Parameters
        ----------
        size: std::list< itk::Index< 4 > >::size_type
        value: std::list< itk::Index< 4 > >::value_type const &

        """
        _itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex4_swiginit(self, _itkSpeckleReducingAnisotropicDiffusionImageFilterPython.new_listIndex4(*args))
    push_back = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex4_push_back)
    front = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex4_front)
    back = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex4_back)
    assign = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex4_assign)
    resize = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex4_resize)
    insert = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex4_insert)
    pop_front = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex4_pop_front)
    push_front = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex4_push_front)
    reverse = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex4_reverse)
    __swig_destroy__ = _itkSpeckleReducingAnisotropicDiffusionImageFilterPython.delete_listIndex4

# Register listIndex4 in _itkSpeckleReducingAnisotropicDiffusionImageFilterPython:
_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.listIndex4_swigregister(listIndex4)


def itkSpeckleReducingAnisotropicDiffusionImageFilterID2ID2_New():
    return itkSpeckleReducingAnisotropicDiffusionImageFilterID2ID2.New()

class itkSpeckleReducingAnisotropicDiffusionImageFilterID2ID2(itk.itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID2ID2):
    r"""Proxy of C++ itkSpeckleReducingAnisotropicDiffusionImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterID2ID2_Clone)
    UpdateBufferHasNumericTraitsCheck = _itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterID2ID2_UpdateBufferHasNumericTraitsCheck
    
    SetRho = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterID2ID2_SetRho)
    GetRho = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterID2ID2_GetRho)
    SetQ0 = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterID2ID2_SetQ0)
    GetQ0 = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterID2ID2_GetQ0)
    __swig_destroy__ = _itkSpeckleReducingAnisotropicDiffusionImageFilterPython.delete_itkSpeckleReducingAnisotropicDiffusionImageFilterID2ID2
    cast = _swig_new_static_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkSpeckleReducingAnisotropicDiffusionImageFilterID2ID2

        Create a new object of the class itkSpeckleReducingAnisotropicDiffusionImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpeckleReducingAnisotropicDiffusionImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpeckleReducingAnisotropicDiffusionImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpeckleReducingAnisotropicDiffusionImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpeckleReducingAnisotropicDiffusionImageFilterID2ID2 in _itkSpeckleReducingAnisotropicDiffusionImageFilterPython:
_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterID2ID2_swigregister(itkSpeckleReducingAnisotropicDiffusionImageFilterID2ID2)
itkSpeckleReducingAnisotropicDiffusionImageFilterID2ID2___New_orig__ = _itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterID2ID2___New_orig__
itkSpeckleReducingAnisotropicDiffusionImageFilterID2ID2_cast = _itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterID2ID2_cast


def itkSpeckleReducingAnisotropicDiffusionImageFilterID3ID3_New():
    return itkSpeckleReducingAnisotropicDiffusionImageFilterID3ID3.New()

class itkSpeckleReducingAnisotropicDiffusionImageFilterID3ID3(itk.itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID3ID3):
    r"""Proxy of C++ itkSpeckleReducingAnisotropicDiffusionImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterID3ID3_Clone)
    UpdateBufferHasNumericTraitsCheck = _itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterID3ID3_UpdateBufferHasNumericTraitsCheck
    
    SetRho = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterID3ID3_SetRho)
    GetRho = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterID3ID3_GetRho)
    SetQ0 = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterID3ID3_SetQ0)
    GetQ0 = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterID3ID3_GetQ0)
    __swig_destroy__ = _itkSpeckleReducingAnisotropicDiffusionImageFilterPython.delete_itkSpeckleReducingAnisotropicDiffusionImageFilterID3ID3
    cast = _swig_new_static_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkSpeckleReducingAnisotropicDiffusionImageFilterID3ID3

        Create a new object of the class itkSpeckleReducingAnisotropicDiffusionImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpeckleReducingAnisotropicDiffusionImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpeckleReducingAnisotropicDiffusionImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpeckleReducingAnisotropicDiffusionImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpeckleReducingAnisotropicDiffusionImageFilterID3ID3 in _itkSpeckleReducingAnisotropicDiffusionImageFilterPython:
_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterID3ID3_swigregister(itkSpeckleReducingAnisotropicDiffusionImageFilterID3ID3)
itkSpeckleReducingAnisotropicDiffusionImageFilterID3ID3___New_orig__ = _itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterID3ID3___New_orig__
itkSpeckleReducingAnisotropicDiffusionImageFilterID3ID3_cast = _itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterID3ID3_cast


def itkSpeckleReducingAnisotropicDiffusionImageFilterID4ID4_New():
    return itkSpeckleReducingAnisotropicDiffusionImageFilterID4ID4.New()

class itkSpeckleReducingAnisotropicDiffusionImageFilterID4ID4(itk.itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID4ID4):
    r"""Proxy of C++ itkSpeckleReducingAnisotropicDiffusionImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterID4ID4___New_orig__)
    Clone = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterID4ID4_Clone)
    UpdateBufferHasNumericTraitsCheck = _itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterID4ID4_UpdateBufferHasNumericTraitsCheck
    
    SetRho = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterID4ID4_SetRho)
    GetRho = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterID4ID4_GetRho)
    SetQ0 = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterID4ID4_SetQ0)
    GetQ0 = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterID4ID4_GetQ0)
    __swig_destroy__ = _itkSpeckleReducingAnisotropicDiffusionImageFilterPython.delete_itkSpeckleReducingAnisotropicDiffusionImageFilterID4ID4
    cast = _swig_new_static_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterID4ID4_cast)

    def New(*args, **kargs):
        """New() -> itkSpeckleReducingAnisotropicDiffusionImageFilterID4ID4

        Create a new object of the class itkSpeckleReducingAnisotropicDiffusionImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpeckleReducingAnisotropicDiffusionImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpeckleReducingAnisotropicDiffusionImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpeckleReducingAnisotropicDiffusionImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpeckleReducingAnisotropicDiffusionImageFilterID4ID4 in _itkSpeckleReducingAnisotropicDiffusionImageFilterPython:
_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterID4ID4_swigregister(itkSpeckleReducingAnisotropicDiffusionImageFilterID4ID4)
itkSpeckleReducingAnisotropicDiffusionImageFilterID4ID4___New_orig__ = _itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterID4ID4___New_orig__
itkSpeckleReducingAnisotropicDiffusionImageFilterID4ID4_cast = _itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterID4ID4_cast


def itkSpeckleReducingAnisotropicDiffusionImageFilterIF2IF2_New():
    return itkSpeckleReducingAnisotropicDiffusionImageFilterIF2IF2.New()

class itkSpeckleReducingAnisotropicDiffusionImageFilterIF2IF2(itk.itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF2IF2):
    r"""Proxy of C++ itkSpeckleReducingAnisotropicDiffusionImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterIF2IF2_Clone)
    UpdateBufferHasNumericTraitsCheck = _itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterIF2IF2_UpdateBufferHasNumericTraitsCheck
    
    SetRho = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterIF2IF2_SetRho)
    GetRho = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterIF2IF2_GetRho)
    SetQ0 = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterIF2IF2_SetQ0)
    GetQ0 = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterIF2IF2_GetQ0)
    __swig_destroy__ = _itkSpeckleReducingAnisotropicDiffusionImageFilterPython.delete_itkSpeckleReducingAnisotropicDiffusionImageFilterIF2IF2
    cast = _swig_new_static_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkSpeckleReducingAnisotropicDiffusionImageFilterIF2IF2

        Create a new object of the class itkSpeckleReducingAnisotropicDiffusionImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpeckleReducingAnisotropicDiffusionImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpeckleReducingAnisotropicDiffusionImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpeckleReducingAnisotropicDiffusionImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpeckleReducingAnisotropicDiffusionImageFilterIF2IF2 in _itkSpeckleReducingAnisotropicDiffusionImageFilterPython:
_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterIF2IF2_swigregister(itkSpeckleReducingAnisotropicDiffusionImageFilterIF2IF2)
itkSpeckleReducingAnisotropicDiffusionImageFilterIF2IF2___New_orig__ = _itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterIF2IF2___New_orig__
itkSpeckleReducingAnisotropicDiffusionImageFilterIF2IF2_cast = _itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterIF2IF2_cast


def itkSpeckleReducingAnisotropicDiffusionImageFilterIF3IF3_New():
    return itkSpeckleReducingAnisotropicDiffusionImageFilterIF3IF3.New()

class itkSpeckleReducingAnisotropicDiffusionImageFilterIF3IF3(itk.itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF3IF3):
    r"""Proxy of C++ itkSpeckleReducingAnisotropicDiffusionImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterIF3IF3_Clone)
    UpdateBufferHasNumericTraitsCheck = _itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterIF3IF3_UpdateBufferHasNumericTraitsCheck
    
    SetRho = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterIF3IF3_SetRho)
    GetRho = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterIF3IF3_GetRho)
    SetQ0 = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterIF3IF3_SetQ0)
    GetQ0 = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterIF3IF3_GetQ0)
    __swig_destroy__ = _itkSpeckleReducingAnisotropicDiffusionImageFilterPython.delete_itkSpeckleReducingAnisotropicDiffusionImageFilterIF3IF3
    cast = _swig_new_static_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkSpeckleReducingAnisotropicDiffusionImageFilterIF3IF3

        Create a new object of the class itkSpeckleReducingAnisotropicDiffusionImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpeckleReducingAnisotropicDiffusionImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpeckleReducingAnisotropicDiffusionImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpeckleReducingAnisotropicDiffusionImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpeckleReducingAnisotropicDiffusionImageFilterIF3IF3 in _itkSpeckleReducingAnisotropicDiffusionImageFilterPython:
_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterIF3IF3_swigregister(itkSpeckleReducingAnisotropicDiffusionImageFilterIF3IF3)
itkSpeckleReducingAnisotropicDiffusionImageFilterIF3IF3___New_orig__ = _itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterIF3IF3___New_orig__
itkSpeckleReducingAnisotropicDiffusionImageFilterIF3IF3_cast = _itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterIF3IF3_cast


def itkSpeckleReducingAnisotropicDiffusionImageFilterIF4IF4_New():
    return itkSpeckleReducingAnisotropicDiffusionImageFilterIF4IF4.New()

class itkSpeckleReducingAnisotropicDiffusionImageFilterIF4IF4(itk.itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF4IF4):
    r"""Proxy of C++ itkSpeckleReducingAnisotropicDiffusionImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterIF4IF4___New_orig__)
    Clone = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterIF4IF4_Clone)
    UpdateBufferHasNumericTraitsCheck = _itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterIF4IF4_UpdateBufferHasNumericTraitsCheck
    
    SetRho = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterIF4IF4_SetRho)
    GetRho = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterIF4IF4_GetRho)
    SetQ0 = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterIF4IF4_SetQ0)
    GetQ0 = _swig_new_instance_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterIF4IF4_GetQ0)
    __swig_destroy__ = _itkSpeckleReducingAnisotropicDiffusionImageFilterPython.delete_itkSpeckleReducingAnisotropicDiffusionImageFilterIF4IF4
    cast = _swig_new_static_method(_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterIF4IF4_cast)

    def New(*args, **kargs):
        """New() -> itkSpeckleReducingAnisotropicDiffusionImageFilterIF4IF4

        Create a new object of the class itkSpeckleReducingAnisotropicDiffusionImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpeckleReducingAnisotropicDiffusionImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpeckleReducingAnisotropicDiffusionImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpeckleReducingAnisotropicDiffusionImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpeckleReducingAnisotropicDiffusionImageFilterIF4IF4 in _itkSpeckleReducingAnisotropicDiffusionImageFilterPython:
_itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterIF4IF4_swigregister(itkSpeckleReducingAnisotropicDiffusionImageFilterIF4IF4)
itkSpeckleReducingAnisotropicDiffusionImageFilterIF4IF4___New_orig__ = _itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterIF4IF4___New_orig__
itkSpeckleReducingAnisotropicDiffusionImageFilterIF4IF4_cast = _itkSpeckleReducingAnisotropicDiffusionImageFilterPython.itkSpeckleReducingAnisotropicDiffusionImageFilterIF4IF4_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def speckle_reducing_anisotropic_diffusion_image_filter(*args: itkt.ImageLike,  rho: float=..., q0: float=..., time_step: float=..., conductance_parameter: float=..., conductance_scaling_update_interval: int=..., conductance_scaling_parameter: float=..., fixed_average_gradient_magnitude: float=..., difference_function=..., number_of_iterations: int=..., use_image_spacing: bool=..., maximum_rms_error: float=..., rms_change: float=..., manual_reinitialization: bool=..., is_initialized: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for SpeckleReducingAnisotropicDiffusionImageFilter"""
    import itk

    kwarg_typehints = { 'rho':rho,'q0':q0,'time_step':time_step,'conductance_parameter':conductance_parameter,'conductance_scaling_update_interval':conductance_scaling_update_interval,'conductance_scaling_parameter':conductance_scaling_parameter,'fixed_average_gradient_magnitude':fixed_average_gradient_magnitude,'difference_function':difference_function,'number_of_iterations':number_of_iterations,'use_image_spacing':use_image_spacing,'maximum_rms_error':maximum_rms_error,'rms_change':rms_change,'manual_reinitialization':manual_reinitialization,'is_initialized':is_initialized }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)

    instance = itk.SpeckleReducingAnisotropicDiffusionImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def speckle_reducing_anisotropic_diffusion_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.Ultrasound.SpeckleReducingAnisotropicDiffusionImageFilter
    speckle_reducing_anisotropic_diffusion_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    speckle_reducing_anisotropic_diffusion_image_filter.__doc__ = filter_object.__doc__




