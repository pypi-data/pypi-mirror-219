# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _UltrasoundPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkCurvilinearFFTImageFilterInitFactoryPython
else:
    import _itkCurvilinearFFTImageFilterInitFactoryPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkCurvilinearFFTImageFilterInitFactoryPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkCurvilinearFFTImageFilterInitFactoryPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkCurvilinearArraySpecialCoordinatesImageFiltersPython
import itk.itkSimpleDataObjectDecoratorPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkArrayPython
import itk.itkCovariantVectorPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkImageToImageFilterCommonPython
import itk.itkSizePython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImagePython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkTransformBasePython
import itk.itkArray2DPython
import itk.itkOptimizerParametersPython
import itk.itkDiffusionTensor3DPython
import itk.ITKIOImageBaseBasePython
import itk.itkContinuousIndexPython
import itk.itkFunctionBasePython
import itk.itkCurvilinearArraySpecialCoordinatesImagePython

def itkComplexToComplex1DFFTImageFilterCASCICD2CASCICD2_New():
    return itkComplexToComplex1DFFTImageFilterCASCICD2CASCICD2.New()

class itkComplexToComplex1DFFTImageFilterCASCICD2CASCICD2(itk.itkCurvilinearArraySpecialCoordinatesImageFiltersPython.itkImageToImageFilterCASCICD2CASCICD2):
    r"""Proxy of C++ itkComplexToComplex1DFFTImageFilterCASCICD2CASCICD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICD2CASCICD2___New_orig__)
    Clone = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICD2CASCICD2_Clone)
    TransformDirectionType_DIRECT = _itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICD2CASCICD2_TransformDirectionType_DIRECT
    
    TransformDirectionType_INVERSE = _itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICD2CASCICD2_TransformDirectionType_INVERSE
    
    SetTransformDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICD2CASCICD2_SetTransformDirection)
    GetTransformDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICD2CASCICD2_GetTransformDirection)
    GetDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICD2CASCICD2_GetDirection)
    SetDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICD2CASCICD2_SetDirection)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICD2CASCICD2_GetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkCurvilinearFFTImageFilterInitFactoryPython.delete_itkComplexToComplex1DFFTImageFilterCASCICD2CASCICD2
    cast = _swig_new_static_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICD2CASCICD2_cast)

    def New(*args, **kargs):
        """New() -> itkComplexToComplex1DFFTImageFilterCASCICD2CASCICD2

        Create a new object of the class itkComplexToComplex1DFFTImageFilterCASCICD2CASCICD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkComplexToComplex1DFFTImageFilterCASCICD2CASCICD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkComplexToComplex1DFFTImageFilterCASCICD2CASCICD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkComplexToComplex1DFFTImageFilterCASCICD2CASCICD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkComplexToComplex1DFFTImageFilterCASCICD2CASCICD2 in _itkCurvilinearFFTImageFilterInitFactoryPython:
_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICD2CASCICD2_swigregister(itkComplexToComplex1DFFTImageFilterCASCICD2CASCICD2)
itkComplexToComplex1DFFTImageFilterCASCICD2CASCICD2___New_orig__ = _itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICD2CASCICD2___New_orig__
itkComplexToComplex1DFFTImageFilterCASCICD2CASCICD2_cast = _itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICD2CASCICD2_cast


def itkComplexToComplex1DFFTImageFilterCASCICD3CASCICD3_New():
    return itkComplexToComplex1DFFTImageFilterCASCICD3CASCICD3.New()

class itkComplexToComplex1DFFTImageFilterCASCICD3CASCICD3(itk.itkCurvilinearArraySpecialCoordinatesImageFiltersPython.itkImageToImageFilterCASCICD3CASCICD3):
    r"""Proxy of C++ itkComplexToComplex1DFFTImageFilterCASCICD3CASCICD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICD3CASCICD3___New_orig__)
    Clone = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICD3CASCICD3_Clone)
    TransformDirectionType_DIRECT = _itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICD3CASCICD3_TransformDirectionType_DIRECT
    
    TransformDirectionType_INVERSE = _itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICD3CASCICD3_TransformDirectionType_INVERSE
    
    SetTransformDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICD3CASCICD3_SetTransformDirection)
    GetTransformDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICD3CASCICD3_GetTransformDirection)
    GetDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICD3CASCICD3_GetDirection)
    SetDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICD3CASCICD3_SetDirection)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICD3CASCICD3_GetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkCurvilinearFFTImageFilterInitFactoryPython.delete_itkComplexToComplex1DFFTImageFilterCASCICD3CASCICD3
    cast = _swig_new_static_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICD3CASCICD3_cast)

    def New(*args, **kargs):
        """New() -> itkComplexToComplex1DFFTImageFilterCASCICD3CASCICD3

        Create a new object of the class itkComplexToComplex1DFFTImageFilterCASCICD3CASCICD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkComplexToComplex1DFFTImageFilterCASCICD3CASCICD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkComplexToComplex1DFFTImageFilterCASCICD3CASCICD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkComplexToComplex1DFFTImageFilterCASCICD3CASCICD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkComplexToComplex1DFFTImageFilterCASCICD3CASCICD3 in _itkCurvilinearFFTImageFilterInitFactoryPython:
_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICD3CASCICD3_swigregister(itkComplexToComplex1DFFTImageFilterCASCICD3CASCICD3)
itkComplexToComplex1DFFTImageFilterCASCICD3CASCICD3___New_orig__ = _itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICD3CASCICD3___New_orig__
itkComplexToComplex1DFFTImageFilterCASCICD3CASCICD3_cast = _itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICD3CASCICD3_cast


def itkComplexToComplex1DFFTImageFilterCASCICD4CASCICD4_New():
    return itkComplexToComplex1DFFTImageFilterCASCICD4CASCICD4.New()

class itkComplexToComplex1DFFTImageFilterCASCICD4CASCICD4(itk.itkCurvilinearArraySpecialCoordinatesImageFiltersPython.itkImageToImageFilterCASCICD4CASCICD4):
    r"""Proxy of C++ itkComplexToComplex1DFFTImageFilterCASCICD4CASCICD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICD4CASCICD4___New_orig__)
    Clone = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICD4CASCICD4_Clone)
    TransformDirectionType_DIRECT = _itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICD4CASCICD4_TransformDirectionType_DIRECT
    
    TransformDirectionType_INVERSE = _itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICD4CASCICD4_TransformDirectionType_INVERSE
    
    SetTransformDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICD4CASCICD4_SetTransformDirection)
    GetTransformDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICD4CASCICD4_GetTransformDirection)
    GetDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICD4CASCICD4_GetDirection)
    SetDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICD4CASCICD4_SetDirection)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICD4CASCICD4_GetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkCurvilinearFFTImageFilterInitFactoryPython.delete_itkComplexToComplex1DFFTImageFilterCASCICD4CASCICD4
    cast = _swig_new_static_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICD4CASCICD4_cast)

    def New(*args, **kargs):
        """New() -> itkComplexToComplex1DFFTImageFilterCASCICD4CASCICD4

        Create a new object of the class itkComplexToComplex1DFFTImageFilterCASCICD4CASCICD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkComplexToComplex1DFFTImageFilterCASCICD4CASCICD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkComplexToComplex1DFFTImageFilterCASCICD4CASCICD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkComplexToComplex1DFFTImageFilterCASCICD4CASCICD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkComplexToComplex1DFFTImageFilterCASCICD4CASCICD4 in _itkCurvilinearFFTImageFilterInitFactoryPython:
_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICD4CASCICD4_swigregister(itkComplexToComplex1DFFTImageFilterCASCICD4CASCICD4)
itkComplexToComplex1DFFTImageFilterCASCICD4CASCICD4___New_orig__ = _itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICD4CASCICD4___New_orig__
itkComplexToComplex1DFFTImageFilterCASCICD4CASCICD4_cast = _itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICD4CASCICD4_cast


def itkComplexToComplex1DFFTImageFilterCASCICF2CASCICF2_New():
    return itkComplexToComplex1DFFTImageFilterCASCICF2CASCICF2.New()

class itkComplexToComplex1DFFTImageFilterCASCICF2CASCICF2(itk.itkCurvilinearArraySpecialCoordinatesImageFiltersPython.itkImageToImageFilterCASCICF2CASCICF2):
    r"""Proxy of C++ itkComplexToComplex1DFFTImageFilterCASCICF2CASCICF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICF2CASCICF2___New_orig__)
    Clone = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICF2CASCICF2_Clone)
    TransformDirectionType_DIRECT = _itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICF2CASCICF2_TransformDirectionType_DIRECT
    
    TransformDirectionType_INVERSE = _itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICF2CASCICF2_TransformDirectionType_INVERSE
    
    SetTransformDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICF2CASCICF2_SetTransformDirection)
    GetTransformDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICF2CASCICF2_GetTransformDirection)
    GetDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICF2CASCICF2_GetDirection)
    SetDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICF2CASCICF2_SetDirection)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICF2CASCICF2_GetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkCurvilinearFFTImageFilterInitFactoryPython.delete_itkComplexToComplex1DFFTImageFilterCASCICF2CASCICF2
    cast = _swig_new_static_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICF2CASCICF2_cast)

    def New(*args, **kargs):
        """New() -> itkComplexToComplex1DFFTImageFilterCASCICF2CASCICF2

        Create a new object of the class itkComplexToComplex1DFFTImageFilterCASCICF2CASCICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkComplexToComplex1DFFTImageFilterCASCICF2CASCICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkComplexToComplex1DFFTImageFilterCASCICF2CASCICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkComplexToComplex1DFFTImageFilterCASCICF2CASCICF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkComplexToComplex1DFFTImageFilterCASCICF2CASCICF2 in _itkCurvilinearFFTImageFilterInitFactoryPython:
_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICF2CASCICF2_swigregister(itkComplexToComplex1DFFTImageFilterCASCICF2CASCICF2)
itkComplexToComplex1DFFTImageFilterCASCICF2CASCICF2___New_orig__ = _itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICF2CASCICF2___New_orig__
itkComplexToComplex1DFFTImageFilterCASCICF2CASCICF2_cast = _itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICF2CASCICF2_cast


def itkComplexToComplex1DFFTImageFilterCASCICF3CASCICF3_New():
    return itkComplexToComplex1DFFTImageFilterCASCICF3CASCICF3.New()

class itkComplexToComplex1DFFTImageFilterCASCICF3CASCICF3(itk.itkCurvilinearArraySpecialCoordinatesImageFiltersPython.itkImageToImageFilterCASCICF3CASCICF3):
    r"""Proxy of C++ itkComplexToComplex1DFFTImageFilterCASCICF3CASCICF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICF3CASCICF3___New_orig__)
    Clone = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICF3CASCICF3_Clone)
    TransformDirectionType_DIRECT = _itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICF3CASCICF3_TransformDirectionType_DIRECT
    
    TransformDirectionType_INVERSE = _itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICF3CASCICF3_TransformDirectionType_INVERSE
    
    SetTransformDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICF3CASCICF3_SetTransformDirection)
    GetTransformDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICF3CASCICF3_GetTransformDirection)
    GetDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICF3CASCICF3_GetDirection)
    SetDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICF3CASCICF3_SetDirection)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICF3CASCICF3_GetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkCurvilinearFFTImageFilterInitFactoryPython.delete_itkComplexToComplex1DFFTImageFilterCASCICF3CASCICF3
    cast = _swig_new_static_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICF3CASCICF3_cast)

    def New(*args, **kargs):
        """New() -> itkComplexToComplex1DFFTImageFilterCASCICF3CASCICF3

        Create a new object of the class itkComplexToComplex1DFFTImageFilterCASCICF3CASCICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkComplexToComplex1DFFTImageFilterCASCICF3CASCICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkComplexToComplex1DFFTImageFilterCASCICF3CASCICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkComplexToComplex1DFFTImageFilterCASCICF3CASCICF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkComplexToComplex1DFFTImageFilterCASCICF3CASCICF3 in _itkCurvilinearFFTImageFilterInitFactoryPython:
_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICF3CASCICF3_swigregister(itkComplexToComplex1DFFTImageFilterCASCICF3CASCICF3)
itkComplexToComplex1DFFTImageFilterCASCICF3CASCICF3___New_orig__ = _itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICF3CASCICF3___New_orig__
itkComplexToComplex1DFFTImageFilterCASCICF3CASCICF3_cast = _itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICF3CASCICF3_cast


def itkComplexToComplex1DFFTImageFilterCASCICF4CASCICF4_New():
    return itkComplexToComplex1DFFTImageFilterCASCICF4CASCICF4.New()

class itkComplexToComplex1DFFTImageFilterCASCICF4CASCICF4(itk.itkCurvilinearArraySpecialCoordinatesImageFiltersPython.itkImageToImageFilterCASCICF4CASCICF4):
    r"""Proxy of C++ itkComplexToComplex1DFFTImageFilterCASCICF4CASCICF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICF4CASCICF4___New_orig__)
    Clone = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICF4CASCICF4_Clone)
    TransformDirectionType_DIRECT = _itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICF4CASCICF4_TransformDirectionType_DIRECT
    
    TransformDirectionType_INVERSE = _itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICF4CASCICF4_TransformDirectionType_INVERSE
    
    SetTransformDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICF4CASCICF4_SetTransformDirection)
    GetTransformDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICF4CASCICF4_GetTransformDirection)
    GetDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICF4CASCICF4_GetDirection)
    SetDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICF4CASCICF4_SetDirection)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICF4CASCICF4_GetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkCurvilinearFFTImageFilterInitFactoryPython.delete_itkComplexToComplex1DFFTImageFilterCASCICF4CASCICF4
    cast = _swig_new_static_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICF4CASCICF4_cast)

    def New(*args, **kargs):
        """New() -> itkComplexToComplex1DFFTImageFilterCASCICF4CASCICF4

        Create a new object of the class itkComplexToComplex1DFFTImageFilterCASCICF4CASCICF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkComplexToComplex1DFFTImageFilterCASCICF4CASCICF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkComplexToComplex1DFFTImageFilterCASCICF4CASCICF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkComplexToComplex1DFFTImageFilterCASCICF4CASCICF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkComplexToComplex1DFFTImageFilterCASCICF4CASCICF4 in _itkCurvilinearFFTImageFilterInitFactoryPython:
_itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICF4CASCICF4_swigregister(itkComplexToComplex1DFFTImageFilterCASCICF4CASCICF4)
itkComplexToComplex1DFFTImageFilterCASCICF4CASCICF4___New_orig__ = _itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICF4CASCICF4___New_orig__
itkComplexToComplex1DFFTImageFilterCASCICF4CASCICF4_cast = _itkCurvilinearFFTImageFilterInitFactoryPython.itkComplexToComplex1DFFTImageFilterCASCICF4CASCICF4_cast


def itkCurvilinearFFTImageFilterInitFactory_New():
    return itkCurvilinearFFTImageFilterInitFactory.New()

class itkCurvilinearFFTImageFilterInitFactory(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCurvilinearFFTImageFilterInitFactory class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkCurvilinearFFTImageFilterInitFactory___New_orig__)
    RegisterOneFactory = _swig_new_static_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkCurvilinearFFTImageFilterInitFactory_RegisterOneFactory)
    RegisterFactories = _swig_new_static_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkCurvilinearFFTImageFilterInitFactory_RegisterFactories)
    __swig_destroy__ = _itkCurvilinearFFTImageFilterInitFactoryPython.delete_itkCurvilinearFFTImageFilterInitFactory
    cast = _swig_new_static_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkCurvilinearFFTImageFilterInitFactory_cast)

    def New(*args, **kargs):
        """New() -> itkCurvilinearFFTImageFilterInitFactory

        Create a new object of the class itkCurvilinearFFTImageFilterInitFactory and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCurvilinearFFTImageFilterInitFactory.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCurvilinearFFTImageFilterInitFactory.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCurvilinearFFTImageFilterInitFactory.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCurvilinearFFTImageFilterInitFactory in _itkCurvilinearFFTImageFilterInitFactoryPython:
_itkCurvilinearFFTImageFilterInitFactoryPython.itkCurvilinearFFTImageFilterInitFactory_swigregister(itkCurvilinearFFTImageFilterInitFactory)
itkCurvilinearFFTImageFilterInitFactory___New_orig__ = _itkCurvilinearFFTImageFilterInitFactoryPython.itkCurvilinearFFTImageFilterInitFactory___New_orig__
itkCurvilinearFFTImageFilterInitFactory_RegisterOneFactory = _itkCurvilinearFFTImageFilterInitFactoryPython.itkCurvilinearFFTImageFilterInitFactory_RegisterOneFactory
itkCurvilinearFFTImageFilterInitFactory_RegisterFactories = _itkCurvilinearFFTImageFilterInitFactoryPython.itkCurvilinearFFTImageFilterInitFactory_RegisterFactories
itkCurvilinearFFTImageFilterInitFactory_cast = _itkCurvilinearFFTImageFilterInitFactoryPython.itkCurvilinearFFTImageFilterInitFactory_cast


def itkForward1DFFTImageFilterCASCID2CASCICD2_New():
    return itkForward1DFFTImageFilterCASCID2CASCICD2.New()

class itkForward1DFFTImageFilterCASCID2CASCICD2(itk.itkCurvilinearArraySpecialCoordinatesImageFiltersPython.itkImageToImageFilterCASCID2CASCICD2):
    r"""Proxy of C++ itkForward1DFFTImageFilterCASCID2CASCICD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCID2CASCICD2___New_orig__)
    Clone = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCID2CASCICD2_Clone)
    GetDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCID2CASCICD2_GetDirection)
    SetDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCID2CASCICD2_SetDirection)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCID2CASCICD2_GetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkCurvilinearFFTImageFilterInitFactoryPython.delete_itkForward1DFFTImageFilterCASCID2CASCICD2
    cast = _swig_new_static_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCID2CASCICD2_cast)

    def New(*args, **kargs):
        """New() -> itkForward1DFFTImageFilterCASCID2CASCICD2

        Create a new object of the class itkForward1DFFTImageFilterCASCID2CASCICD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkForward1DFFTImageFilterCASCID2CASCICD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkForward1DFFTImageFilterCASCID2CASCICD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkForward1DFFTImageFilterCASCID2CASCICD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkForward1DFFTImageFilterCASCID2CASCICD2 in _itkCurvilinearFFTImageFilterInitFactoryPython:
_itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCID2CASCICD2_swigregister(itkForward1DFFTImageFilterCASCID2CASCICD2)
itkForward1DFFTImageFilterCASCID2CASCICD2___New_orig__ = _itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCID2CASCICD2___New_orig__
itkForward1DFFTImageFilterCASCID2CASCICD2_cast = _itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCID2CASCICD2_cast


def itkForward1DFFTImageFilterCASCID3CASCICD3_New():
    return itkForward1DFFTImageFilterCASCID3CASCICD3.New()

class itkForward1DFFTImageFilterCASCID3CASCICD3(itk.itkCurvilinearArraySpecialCoordinatesImageFiltersPython.itkImageToImageFilterCASCID3CASCICD3):
    r"""Proxy of C++ itkForward1DFFTImageFilterCASCID3CASCICD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCID3CASCICD3___New_orig__)
    Clone = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCID3CASCICD3_Clone)
    GetDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCID3CASCICD3_GetDirection)
    SetDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCID3CASCICD3_SetDirection)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCID3CASCICD3_GetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkCurvilinearFFTImageFilterInitFactoryPython.delete_itkForward1DFFTImageFilterCASCID3CASCICD3
    cast = _swig_new_static_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCID3CASCICD3_cast)

    def New(*args, **kargs):
        """New() -> itkForward1DFFTImageFilterCASCID3CASCICD3

        Create a new object of the class itkForward1DFFTImageFilterCASCID3CASCICD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkForward1DFFTImageFilterCASCID3CASCICD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkForward1DFFTImageFilterCASCID3CASCICD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkForward1DFFTImageFilterCASCID3CASCICD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkForward1DFFTImageFilterCASCID3CASCICD3 in _itkCurvilinearFFTImageFilterInitFactoryPython:
_itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCID3CASCICD3_swigregister(itkForward1DFFTImageFilterCASCID3CASCICD3)
itkForward1DFFTImageFilterCASCID3CASCICD3___New_orig__ = _itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCID3CASCICD3___New_orig__
itkForward1DFFTImageFilterCASCID3CASCICD3_cast = _itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCID3CASCICD3_cast


def itkForward1DFFTImageFilterCASCID4CASCICD4_New():
    return itkForward1DFFTImageFilterCASCID4CASCICD4.New()

class itkForward1DFFTImageFilterCASCID4CASCICD4(itk.itkCurvilinearArraySpecialCoordinatesImageFiltersPython.itkImageToImageFilterCASCID4CASCICD4):
    r"""Proxy of C++ itkForward1DFFTImageFilterCASCID4CASCICD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCID4CASCICD4___New_orig__)
    Clone = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCID4CASCICD4_Clone)
    GetDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCID4CASCICD4_GetDirection)
    SetDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCID4CASCICD4_SetDirection)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCID4CASCICD4_GetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkCurvilinearFFTImageFilterInitFactoryPython.delete_itkForward1DFFTImageFilterCASCID4CASCICD4
    cast = _swig_new_static_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCID4CASCICD4_cast)

    def New(*args, **kargs):
        """New() -> itkForward1DFFTImageFilterCASCID4CASCICD4

        Create a new object of the class itkForward1DFFTImageFilterCASCID4CASCICD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkForward1DFFTImageFilterCASCID4CASCICD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkForward1DFFTImageFilterCASCID4CASCICD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkForward1DFFTImageFilterCASCID4CASCICD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkForward1DFFTImageFilterCASCID4CASCICD4 in _itkCurvilinearFFTImageFilterInitFactoryPython:
_itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCID4CASCICD4_swigregister(itkForward1DFFTImageFilterCASCID4CASCICD4)
itkForward1DFFTImageFilterCASCID4CASCICD4___New_orig__ = _itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCID4CASCICD4___New_orig__
itkForward1DFFTImageFilterCASCID4CASCICD4_cast = _itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCID4CASCICD4_cast


def itkForward1DFFTImageFilterCASCIF2CASCICF2_New():
    return itkForward1DFFTImageFilterCASCIF2CASCICF2.New()

class itkForward1DFFTImageFilterCASCIF2CASCICF2(itk.itkCurvilinearArraySpecialCoordinatesImageFiltersPython.itkImageToImageFilterCASCIF2CASCICF2):
    r"""Proxy of C++ itkForward1DFFTImageFilterCASCIF2CASCICF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCIF2CASCICF2___New_orig__)
    Clone = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCIF2CASCICF2_Clone)
    GetDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCIF2CASCICF2_GetDirection)
    SetDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCIF2CASCICF2_SetDirection)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCIF2CASCICF2_GetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkCurvilinearFFTImageFilterInitFactoryPython.delete_itkForward1DFFTImageFilterCASCIF2CASCICF2
    cast = _swig_new_static_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCIF2CASCICF2_cast)

    def New(*args, **kargs):
        """New() -> itkForward1DFFTImageFilterCASCIF2CASCICF2

        Create a new object of the class itkForward1DFFTImageFilterCASCIF2CASCICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkForward1DFFTImageFilterCASCIF2CASCICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkForward1DFFTImageFilterCASCIF2CASCICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkForward1DFFTImageFilterCASCIF2CASCICF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkForward1DFFTImageFilterCASCIF2CASCICF2 in _itkCurvilinearFFTImageFilterInitFactoryPython:
_itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCIF2CASCICF2_swigregister(itkForward1DFFTImageFilterCASCIF2CASCICF2)
itkForward1DFFTImageFilterCASCIF2CASCICF2___New_orig__ = _itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCIF2CASCICF2___New_orig__
itkForward1DFFTImageFilterCASCIF2CASCICF2_cast = _itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCIF2CASCICF2_cast


def itkForward1DFFTImageFilterCASCIF3CASCICF3_New():
    return itkForward1DFFTImageFilterCASCIF3CASCICF3.New()

class itkForward1DFFTImageFilterCASCIF3CASCICF3(itk.itkCurvilinearArraySpecialCoordinatesImageFiltersPython.itkImageToImageFilterCASCIF3CASCICF3):
    r"""Proxy of C++ itkForward1DFFTImageFilterCASCIF3CASCICF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCIF3CASCICF3___New_orig__)
    Clone = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCIF3CASCICF3_Clone)
    GetDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCIF3CASCICF3_GetDirection)
    SetDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCIF3CASCICF3_SetDirection)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCIF3CASCICF3_GetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkCurvilinearFFTImageFilterInitFactoryPython.delete_itkForward1DFFTImageFilterCASCIF3CASCICF3
    cast = _swig_new_static_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCIF3CASCICF3_cast)

    def New(*args, **kargs):
        """New() -> itkForward1DFFTImageFilterCASCIF3CASCICF3

        Create a new object of the class itkForward1DFFTImageFilterCASCIF3CASCICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkForward1DFFTImageFilterCASCIF3CASCICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkForward1DFFTImageFilterCASCIF3CASCICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkForward1DFFTImageFilterCASCIF3CASCICF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkForward1DFFTImageFilterCASCIF3CASCICF3 in _itkCurvilinearFFTImageFilterInitFactoryPython:
_itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCIF3CASCICF3_swigregister(itkForward1DFFTImageFilterCASCIF3CASCICF3)
itkForward1DFFTImageFilterCASCIF3CASCICF3___New_orig__ = _itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCIF3CASCICF3___New_orig__
itkForward1DFFTImageFilterCASCIF3CASCICF3_cast = _itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCIF3CASCICF3_cast


def itkForward1DFFTImageFilterCASCIF4CASCICF4_New():
    return itkForward1DFFTImageFilterCASCIF4CASCICF4.New()

class itkForward1DFFTImageFilterCASCIF4CASCICF4(itk.itkCurvilinearArraySpecialCoordinatesImageFiltersPython.itkImageToImageFilterCASCIF4CASCICF4):
    r"""Proxy of C++ itkForward1DFFTImageFilterCASCIF4CASCICF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCIF4CASCICF4___New_orig__)
    Clone = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCIF4CASCICF4_Clone)
    GetDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCIF4CASCICF4_GetDirection)
    SetDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCIF4CASCICF4_SetDirection)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCIF4CASCICF4_GetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkCurvilinearFFTImageFilterInitFactoryPython.delete_itkForward1DFFTImageFilterCASCIF4CASCICF4
    cast = _swig_new_static_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCIF4CASCICF4_cast)

    def New(*args, **kargs):
        """New() -> itkForward1DFFTImageFilterCASCIF4CASCICF4

        Create a new object of the class itkForward1DFFTImageFilterCASCIF4CASCICF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkForward1DFFTImageFilterCASCIF4CASCICF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkForward1DFFTImageFilterCASCIF4CASCICF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkForward1DFFTImageFilterCASCIF4CASCICF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkForward1DFFTImageFilterCASCIF4CASCICF4 in _itkCurvilinearFFTImageFilterInitFactoryPython:
_itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCIF4CASCICF4_swigregister(itkForward1DFFTImageFilterCASCIF4CASCICF4)
itkForward1DFFTImageFilterCASCIF4CASCICF4___New_orig__ = _itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCIF4CASCICF4___New_orig__
itkForward1DFFTImageFilterCASCIF4CASCICF4_cast = _itkCurvilinearFFTImageFilterInitFactoryPython.itkForward1DFFTImageFilterCASCIF4CASCICF4_cast


def itkInverse1DFFTImageFilterCASCID2CASCICD2_New():
    return itkInverse1DFFTImageFilterCASCID2CASCICD2.New()

class itkInverse1DFFTImageFilterCASCID2CASCICD2(itk.itkCurvilinearArraySpecialCoordinatesImageFiltersPython.itkImageToImageFilterCASCICD2CASCID2):
    r"""Proxy of C++ itkInverse1DFFTImageFilterCASCID2CASCICD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCID2CASCICD2___New_orig__)
    Clone = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCID2CASCICD2_Clone)
    GetDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCID2CASCICD2_GetDirection)
    SetDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCID2CASCICD2_SetDirection)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCID2CASCICD2_GetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkCurvilinearFFTImageFilterInitFactoryPython.delete_itkInverse1DFFTImageFilterCASCID2CASCICD2
    cast = _swig_new_static_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCID2CASCICD2_cast)

    def New(*args, **kargs):
        """New() -> itkInverse1DFFTImageFilterCASCID2CASCICD2

        Create a new object of the class itkInverse1DFFTImageFilterCASCID2CASCICD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInverse1DFFTImageFilterCASCID2CASCICD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInverse1DFFTImageFilterCASCID2CASCICD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInverse1DFFTImageFilterCASCID2CASCICD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInverse1DFFTImageFilterCASCID2CASCICD2 in _itkCurvilinearFFTImageFilterInitFactoryPython:
_itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCID2CASCICD2_swigregister(itkInverse1DFFTImageFilterCASCID2CASCICD2)
itkInverse1DFFTImageFilterCASCID2CASCICD2___New_orig__ = _itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCID2CASCICD2___New_orig__
itkInverse1DFFTImageFilterCASCID2CASCICD2_cast = _itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCID2CASCICD2_cast


def itkInverse1DFFTImageFilterCASCID3CASCICD3_New():
    return itkInverse1DFFTImageFilterCASCID3CASCICD3.New()

class itkInverse1DFFTImageFilterCASCID3CASCICD3(itk.itkCurvilinearArraySpecialCoordinatesImageFiltersPython.itkImageToImageFilterCASCICD3CASCID3):
    r"""Proxy of C++ itkInverse1DFFTImageFilterCASCID3CASCICD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCID3CASCICD3___New_orig__)
    Clone = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCID3CASCICD3_Clone)
    GetDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCID3CASCICD3_GetDirection)
    SetDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCID3CASCICD3_SetDirection)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCID3CASCICD3_GetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkCurvilinearFFTImageFilterInitFactoryPython.delete_itkInverse1DFFTImageFilterCASCID3CASCICD3
    cast = _swig_new_static_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCID3CASCICD3_cast)

    def New(*args, **kargs):
        """New() -> itkInverse1DFFTImageFilterCASCID3CASCICD3

        Create a new object of the class itkInverse1DFFTImageFilterCASCID3CASCICD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInverse1DFFTImageFilterCASCID3CASCICD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInverse1DFFTImageFilterCASCID3CASCICD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInverse1DFFTImageFilterCASCID3CASCICD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInverse1DFFTImageFilterCASCID3CASCICD3 in _itkCurvilinearFFTImageFilterInitFactoryPython:
_itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCID3CASCICD3_swigregister(itkInverse1DFFTImageFilterCASCID3CASCICD3)
itkInverse1DFFTImageFilterCASCID3CASCICD3___New_orig__ = _itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCID3CASCICD3___New_orig__
itkInverse1DFFTImageFilterCASCID3CASCICD3_cast = _itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCID3CASCICD3_cast


def itkInverse1DFFTImageFilterCASCID4CASCICD4_New():
    return itkInverse1DFFTImageFilterCASCID4CASCICD4.New()

class itkInverse1DFFTImageFilterCASCID4CASCICD4(itk.itkCurvilinearArraySpecialCoordinatesImageFiltersPython.itkImageToImageFilterCASCICD4CASCID4):
    r"""Proxy of C++ itkInverse1DFFTImageFilterCASCID4CASCICD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCID4CASCICD4___New_orig__)
    Clone = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCID4CASCICD4_Clone)
    GetDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCID4CASCICD4_GetDirection)
    SetDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCID4CASCICD4_SetDirection)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCID4CASCICD4_GetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkCurvilinearFFTImageFilterInitFactoryPython.delete_itkInverse1DFFTImageFilterCASCID4CASCICD4
    cast = _swig_new_static_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCID4CASCICD4_cast)

    def New(*args, **kargs):
        """New() -> itkInverse1DFFTImageFilterCASCID4CASCICD4

        Create a new object of the class itkInverse1DFFTImageFilterCASCID4CASCICD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInverse1DFFTImageFilterCASCID4CASCICD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInverse1DFFTImageFilterCASCID4CASCICD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInverse1DFFTImageFilterCASCID4CASCICD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInverse1DFFTImageFilterCASCID4CASCICD4 in _itkCurvilinearFFTImageFilterInitFactoryPython:
_itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCID4CASCICD4_swigregister(itkInverse1DFFTImageFilterCASCID4CASCICD4)
itkInverse1DFFTImageFilterCASCID4CASCICD4___New_orig__ = _itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCID4CASCICD4___New_orig__
itkInverse1DFFTImageFilterCASCID4CASCICD4_cast = _itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCID4CASCICD4_cast


def itkInverse1DFFTImageFilterCASCIF2CASCICF2_New():
    return itkInverse1DFFTImageFilterCASCIF2CASCICF2.New()

class itkInverse1DFFTImageFilterCASCIF2CASCICF2(itk.itkCurvilinearArraySpecialCoordinatesImageFiltersPython.itkImageToImageFilterCASCICF2CASCIF2):
    r"""Proxy of C++ itkInverse1DFFTImageFilterCASCIF2CASCICF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCIF2CASCICF2___New_orig__)
    Clone = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCIF2CASCICF2_Clone)
    GetDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCIF2CASCICF2_GetDirection)
    SetDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCIF2CASCICF2_SetDirection)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCIF2CASCICF2_GetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkCurvilinearFFTImageFilterInitFactoryPython.delete_itkInverse1DFFTImageFilterCASCIF2CASCICF2
    cast = _swig_new_static_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCIF2CASCICF2_cast)

    def New(*args, **kargs):
        """New() -> itkInverse1DFFTImageFilterCASCIF2CASCICF2

        Create a new object of the class itkInverse1DFFTImageFilterCASCIF2CASCICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInverse1DFFTImageFilterCASCIF2CASCICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInverse1DFFTImageFilterCASCIF2CASCICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInverse1DFFTImageFilterCASCIF2CASCICF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInverse1DFFTImageFilterCASCIF2CASCICF2 in _itkCurvilinearFFTImageFilterInitFactoryPython:
_itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCIF2CASCICF2_swigregister(itkInverse1DFFTImageFilterCASCIF2CASCICF2)
itkInverse1DFFTImageFilterCASCIF2CASCICF2___New_orig__ = _itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCIF2CASCICF2___New_orig__
itkInverse1DFFTImageFilterCASCIF2CASCICF2_cast = _itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCIF2CASCICF2_cast


def itkInverse1DFFTImageFilterCASCIF3CASCICF3_New():
    return itkInverse1DFFTImageFilterCASCIF3CASCICF3.New()

class itkInverse1DFFTImageFilterCASCIF3CASCICF3(itk.itkCurvilinearArraySpecialCoordinatesImageFiltersPython.itkImageToImageFilterCASCICF3CASCIF3):
    r"""Proxy of C++ itkInverse1DFFTImageFilterCASCIF3CASCICF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCIF3CASCICF3___New_orig__)
    Clone = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCIF3CASCICF3_Clone)
    GetDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCIF3CASCICF3_GetDirection)
    SetDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCIF3CASCICF3_SetDirection)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCIF3CASCICF3_GetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkCurvilinearFFTImageFilterInitFactoryPython.delete_itkInverse1DFFTImageFilterCASCIF3CASCICF3
    cast = _swig_new_static_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCIF3CASCICF3_cast)

    def New(*args, **kargs):
        """New() -> itkInverse1DFFTImageFilterCASCIF3CASCICF3

        Create a new object of the class itkInverse1DFFTImageFilterCASCIF3CASCICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInverse1DFFTImageFilterCASCIF3CASCICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInverse1DFFTImageFilterCASCIF3CASCICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInverse1DFFTImageFilterCASCIF3CASCICF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInverse1DFFTImageFilterCASCIF3CASCICF3 in _itkCurvilinearFFTImageFilterInitFactoryPython:
_itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCIF3CASCICF3_swigregister(itkInverse1DFFTImageFilterCASCIF3CASCICF3)
itkInverse1DFFTImageFilterCASCIF3CASCICF3___New_orig__ = _itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCIF3CASCICF3___New_orig__
itkInverse1DFFTImageFilterCASCIF3CASCICF3_cast = _itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCIF3CASCICF3_cast


def itkInverse1DFFTImageFilterCASCIF4CASCICF4_New():
    return itkInverse1DFFTImageFilterCASCIF4CASCICF4.New()

class itkInverse1DFFTImageFilterCASCIF4CASCICF4(itk.itkCurvilinearArraySpecialCoordinatesImageFiltersPython.itkImageToImageFilterCASCICF4CASCIF4):
    r"""Proxy of C++ itkInverse1DFFTImageFilterCASCIF4CASCICF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCIF4CASCICF4___New_orig__)
    Clone = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCIF4CASCICF4_Clone)
    GetDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCIF4CASCICF4_GetDirection)
    SetDirection = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCIF4CASCICF4_SetDirection)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCIF4CASCICF4_GetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkCurvilinearFFTImageFilterInitFactoryPython.delete_itkInverse1DFFTImageFilterCASCIF4CASCICF4
    cast = _swig_new_static_method(_itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCIF4CASCICF4_cast)

    def New(*args, **kargs):
        """New() -> itkInverse1DFFTImageFilterCASCIF4CASCICF4

        Create a new object of the class itkInverse1DFFTImageFilterCASCIF4CASCICF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInverse1DFFTImageFilterCASCIF4CASCICF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInverse1DFFTImageFilterCASCIF4CASCICF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInverse1DFFTImageFilterCASCIF4CASCICF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInverse1DFFTImageFilterCASCIF4CASCICF4 in _itkCurvilinearFFTImageFilterInitFactoryPython:
_itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCIF4CASCICF4_swigregister(itkInverse1DFFTImageFilterCASCIF4CASCICF4)
itkInverse1DFFTImageFilterCASCIF4CASCICF4___New_orig__ = _itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCIF4CASCICF4___New_orig__
itkInverse1DFFTImageFilterCASCIF4CASCICF4_cast = _itkCurvilinearFFTImageFilterInitFactoryPython.itkInverse1DFFTImageFilterCASCIF4CASCICF4_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def inverse1_dfft_image_filter(*args: itkt.ImageLike,  direction: int=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for Inverse1DFFTImageFilter"""
    import itk

    kwarg_typehints = { 'direction':direction }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)

    instance = itk.Inverse1DFFTImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def inverse1_dfft_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.Ultrasound.Inverse1DFFTImageFilter
    inverse1_dfft_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    inverse1_dfft_image_filter.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def complex_to_complex1_dfft_image_filter(*args: itkt.ImageLike,  transform_direction=..., direction: int=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ComplexToComplex1DFFTImageFilter"""
    import itk

    kwarg_typehints = { 'transform_direction':transform_direction,'direction':direction }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)

    instance = itk.ComplexToComplex1DFFTImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def complex_to_complex1_dfft_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.Ultrasound.ComplexToComplex1DFFTImageFilter
    complex_to_complex1_dfft_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    complex_to_complex1_dfft_image_filter.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def forward1_dfft_image_filter(*args: itkt.ImageLike,  direction: int=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for Forward1DFFTImageFilter"""
    import itk

    kwarg_typehints = { 'direction':direction }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)

    instance = itk.Forward1DFFTImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def forward1_dfft_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.Ultrasound.Forward1DFFTImageFilter
    forward1_dfft_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    forward1_dfft_image_filter.__doc__ = filter_object.__doc__




