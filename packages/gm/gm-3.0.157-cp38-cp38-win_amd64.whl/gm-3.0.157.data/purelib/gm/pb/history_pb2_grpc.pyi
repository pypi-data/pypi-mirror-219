"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import gm.pb.data_pb2
import gm.pb.history_pb2
import grpc

class HistoryServiceStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    GetCurrentTicks: grpc.UnaryUnaryMultiCallable[
        gm.pb.history_pb2.GetCurrentTicksReq,
        gm.pb.data_pb2.Ticks] = ...

    GetHistoryTicks: grpc.UnaryUnaryMultiCallable[
        gm.pb.history_pb2.GetHistoryTicksReq,
        gm.pb.data_pb2.Ticks] = ...

    GetHistoryBars: grpc.UnaryUnaryMultiCallable[
        gm.pb.history_pb2.GetHistoryBarsReq,
        gm.pb.data_pb2.Bars] = ...

    GetHistoryTicksN: grpc.UnaryUnaryMultiCallable[
        gm.pb.history_pb2.GetHistoryTicksNReq,
        gm.pb.data_pb2.Ticks] = ...

    GetHistoryBarsN: grpc.UnaryUnaryMultiCallable[
        gm.pb.history_pb2.GetHistoryBarsNReq,
        gm.pb.data_pb2.Bars] = ...

    GetBenchmarkReturn: grpc.UnaryUnaryMultiCallable[
        gm.pb.history_pb2.GetBenchmarkReturnReq,
        gm.pb.history_pb2.GetBenchmarkReturnRsp] = ...


class HistoryServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def GetCurrentTicks(self,
        request: gm.pb.history_pb2.GetCurrentTicksReq,
        context: grpc.ServicerContext,
    ) -> gm.pb.data_pb2.Ticks: ...

    @abc.abstractmethod
    def GetHistoryTicks(self,
        request: gm.pb.history_pb2.GetHistoryTicksReq,
        context: grpc.ServicerContext,
    ) -> gm.pb.data_pb2.Ticks: ...

    @abc.abstractmethod
    def GetHistoryBars(self,
        request: gm.pb.history_pb2.GetHistoryBarsReq,
        context: grpc.ServicerContext,
    ) -> gm.pb.data_pb2.Bars: ...

    @abc.abstractmethod
    def GetHistoryTicksN(self,
        request: gm.pb.history_pb2.GetHistoryTicksNReq,
        context: grpc.ServicerContext,
    ) -> gm.pb.data_pb2.Ticks: ...

    @abc.abstractmethod
    def GetHistoryBarsN(self,
        request: gm.pb.history_pb2.GetHistoryBarsNReq,
        context: grpc.ServicerContext,
    ) -> gm.pb.data_pb2.Bars: ...

    @abc.abstractmethod
    def GetBenchmarkReturn(self,
        request: gm.pb.history_pb2.GetBenchmarkReturnReq,
        context: grpc.ServicerContext,
    ) -> gm.pb.history_pb2.GetBenchmarkReturnRsp: ...


def add_HistoryServiceServicer_to_server(servicer: HistoryServiceServicer, server: grpc.Server) -> None: ...
